<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ADB_Explorer.Converters"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:ui="http://schemas.modernwpf.com/2019">
    <!--  https://www.codeproject.com/Articles/248112/Templating-WPF-Expander-Control  -->
    <converters:MultiplyConverter x:Key="multiplyConverter" />

    <Storyboard x:Key="RotateTo180DegreesStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="ArrowRotateTransform"
            Storyboard.TargetProperty="Angle"
            From="0"
            To="180"
            Duration="00:00:00.2" />
    </Storyboard>

    <Storyboard x:Key="RotateTo0DegreesStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="ArrowRotateTransform"
            Storyboard.TargetProperty="Angle"
            From="180"
            To="360"
            Duration="00:00:00.2" />
    </Storyboard>

    <Storyboard x:Key="ExpandingStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="ExpandSite"
            Storyboard.TargetProperty="Tag"
            To="1"
            Duration="00:00:00.2" />
    </Storyboard>

    <Storyboard x:Key="CollapsingStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="ExpandSite"
            Storyboard.TargetProperty="Tag"
            To="0"
            Duration="00:00:00.2" />
    </Storyboard>

    <Style
        x:Key="ExpanderHeaderUpperBorderStyle"
        BasedOn="{StaticResource BorderStyle}"
        TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="CornerRadius" Value="5,5,0,0" />
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style
        x:Key="ExpanderHeaderLowerBorderStyle"
        BasedOn="{StaticResource BorderStyle}"
        TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="CornerRadius" Value="5,5,0,0" />
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style
        x:Key="ExpanderContentBorderStyle"
        BasedOn="{StaticResource BorderStyle}"
        TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="CornerRadius" Value="0,0,5,5" />
                <Setter Property="Background" Value="{DynamicResource DeviceConnectionPanelBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DeviceConnectionPanelBorder}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="False" />
                    <Condition Binding="{Binding ElementName=HeaderSite, Path=Tag}" Value="HideArrow" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource AdbButtonLowerBorderNormal}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DefaultExpanderHeaderTemplate" TargetType="ToggleButton">
        <!--  Template copied from ModernWPF to be modified  -->
        <Border>
            <Grid Background="Transparent" SnapsToDevicePixels="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ui:FontIcon
                    x:Name="arrow"
                    Margin="6,0,2,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                    Glyph="&#xE70D;"
                    RenderTransformOrigin="0.5, 0.5"
                    SnapsToDevicePixels="false"
                    Style="{StaticResource GlyphFont}">
                    <ui:FontIcon.RenderTransform>
                        <RotateTransform x:Name="ArrowRotateTransform" />
                    </ui:FontIcon.RenderTransform>
                </ui:FontIcon>
                <ui:ContentPresenterEx
                    x:Name="Content"
                    Grid.Column="1"
                    Margin="6"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource RotateTo180DegreesStoryboard}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource RotateTo0DegreesStoryboard}" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
                <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </Trigger>
            <Trigger Property="Tag" Value="HideArrow">
                <Setter TargetName="arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderHeaderStyle" TargetType="ToggleButton">
        <Setter Property="Template" Value="{StaticResource DefaultExpanderHeaderTemplate}" />
    </Style>

    <Style x:Key="ExpanderStyle" TargetType="Expander">
        <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
        <Setter Property="Template">
            <!--  Template copied from ModernWPF to be modified  -->
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <DockPanel x:Name="DockPanel">
                        <Grid DockPanel.Dock="Top">
                            <Border
                                x:Name="DummyBorder"
                                CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                Visibility="Collapsed" />
                            <Border
                                x:Name="HeaderBorder"
                                MinWidth="0"
                                MinHeight="0"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding ElementName=HeaderUpperBorder, Path=CornerRadius}"
                                SnapsToDevicePixels="True">
                                <ToggleButton
                                    x:Name="HeaderSite"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ui:FocusVisualHelper.FocusVisualMargin="-3"
                                    ui:FocusVisualHelper.UseSystemFocusVisuals="True"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    FocusVisualStyle="{x:Null}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ExpanderHeaderStyle}"
                                    Tag="{TemplateBinding Tag}" />
                            </Border>
                            <Border
                                x:Name="HeaderUpperBorder"
                                BorderBrush="{DynamicResource DeviceConnectionPanelBorder}"
                                BorderThickness="0,1,0,1"
                                Style="{StaticResource ExpanderHeaderUpperBorderStyle}" />
                            <Border
                                x:Name="HeaderLowerBorder"
                                BorderBrush="{DynamicResource DeviceConnectionPanelBorder}"
                                BorderThickness="0,0,0,1"
                                Style="{StaticResource ExpanderHeaderLowerBorderStyle}" />
                            <Border
                                x:Name="HeaderSideBorder"
                                BorderBrush="{DynamicResource DeviceConnectionPanelBorder}"
                                BorderThickness="1,0,1,0"
                                Style="{StaticResource ExpanderHeaderLowerBorderStyle}" />
                        </Grid>
                        <Border
                            x:Name="ContentBorder"
                            BorderThickness="1,0,1,1"
                            DockPanel.Dock="Bottom"
                            Style="{StaticResource ExpanderContentBorderStyle}">
                            <StackPanel x:Name="ExpandSite" VerticalAlignment="Top">
                                <StackPanel.Tag>
                                    <sys:Double>0.0</sys:Double>
                                </StackPanel.Tag>
                                <StackPanel.Height>
                                    <MultiBinding Converter="{StaticResource multiplyConverter}">
                                        <Binding ElementName="ExpanderContent" Path="ActualHeight" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Mode=Self}" />
                                    </MultiBinding>
                                </StackPanel.Height>
                                <StackPanel x:Name="ExpanderContent" Margin="6,0">
                                    <ContentPresenter
                                        Margin="0,2"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentSource="Content"
                                        Focusable="false" />
                                </StackPanel>
                                <Border Margin="0,2" />
                            </StackPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ExpandingStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CollapsingStoryboard}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource ExpanderBorderExpanded}" />
                        </Trigger>
                        <Trigger SourceName="HeaderSite" Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource AdbButtonBackgroundPressed}" />
                            <Setter TargetName="HeaderUpperBorder" Property="BorderBrush" Value="{DynamicResource ExpanderUpperBorderMouseOver}" />
                            <Setter TargetName="HeaderLowerBorder" Property="BorderBrush" Value="{DynamicResource ExpanderLowerBorderMouseOver}" />
                            <Setter TargetName="HeaderSideBorder" Property="BorderBrush" Value="{DynamicResource ExpanderSideBorderMouseOver}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="HeaderBorder" Property="Margin" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsExpanded}" Value="True" />
                                <Condition Binding="{Binding ElementName=ContentBorder, Path=Visibility}" Value="Visible" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource AdbButtonLowerBorderNormal}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="False" />
                                <Condition Binding="{Binding ElementName=HeaderSite, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource ExpanderLowerBorderMouseOver}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="False" />
                                <Condition Binding="{Binding ElementName=HeaderSite, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding ElementName=HeaderSite, Path=Tag}" Value="HideArrow" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource AdbButtonLowerBorderNormal}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=HeaderSite, Path=Tag}" Value="HideArrow">
                            <Setter TargetName="DockPanel" Property="Margin" Value="0,1" />
                        </DataTrigger>
                        <Trigger SourceName="ExpandSite" Property="Height" Value="0">
                            <Setter TargetName="ContentBorder" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="HeaderUpperBorder" Property="CornerRadius" Value="{Binding ElementName=DummyBorder, Path=CornerRadius}" />
                            <Setter TargetName="HeaderLowerBorder" Property="CornerRadius" Value="{Binding ElementName=DummyBorder, Path=CornerRadius}" />
                            <Setter TargetName="HeaderSideBorder" Property="CornerRadius" Value="{Binding ElementName=DummyBorder, Path=CornerRadius}" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="{Binding ElementName=DummyBorder, Path=CornerRadius}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FluentExpanderStyle"
        BasedOn="{StaticResource ExpanderStyle}"
        TargetType="Expander">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="Background" Value="{DynamicResource DeviceConnectionPanelBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DeviceConnectionPanelBorder}" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="5" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style
        x:Key="DeviceExpanderStyle"
        BasedOn="{StaticResource FluentExpanderStyle}"
        TargetType="Expander">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsExpanded}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource AdbButtonLowerBorderNormal}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>