<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ADB_Explorer.Controls"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:views="clr-namespace:ADB_Explorer.Views">
    <Style
        x:Key="PairingBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="ui:ControlHelper.PlaceholderText" Value="Pairing Code" />
        <Setter Property="ui:TextBoxHelper.IsDeleteButtonVisible" Value="False" />
        <Style.Triggers>
            <Trigger Property="ui:TextBoxHelper.HasText" Value="True">
                <Setter Property="FontSize" Value="18" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDeviceMaskedTextBoxStyle"
        BasedOn="{StaticResource MaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Height" Value="32" />
        <Setter Property="EnterCommand" Value="{Binding ConnectCommand.Command}" />
    </Style>
    <Style
        x:Key="PairingCodeBoxStyle"
        BasedOn="{StaticResource NewDeviceMaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=NewDeviceUIPairingCode, Mode=TwoWay}" />
        <Setter Property="ValidationType" Value="SeparateAndLimitDigits" />
        <Setter Property="Separator" Value="-" />
        <Setter Property="MaxChars" Value="6" />
        <Setter Property="ControlStyle" Value="{StaticResource PairingBoxStyle}" />
    </Style>
    <Style
        x:Key="NewDevicePairingCodeBoxStyle"
        BasedOn="{StaticResource PairingCodeBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding UIPairingCode, Mode=TwoWay}" />
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource PairingBoxStyle}" TargetType="TextBox">
                    <Setter Property="Padding" Value="7,5,0,6" />
                    <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MaskedTextBox}, Path=(helpers:StyleHelper.AltBorderBrush)}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingCodeValid}" Value="False">
                <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDeviceIpBoxStyle"
        BasedOn="{StaticResource NewDeviceMaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding IpAddress, Mode=TwoWay}" />
        <Setter Property="ValidationType" Value="SeparateFormat" />
        <Setter Property="Separator" Value="." />
        <Setter Property="MaxNumber" Value="255" />
        <Setter Property="MaxSeparators" Value="3" />
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource NumericTextBoxStyle}" TargetType="TextBox">
                    <Setter Property="ui:ControlHelper.PlaceholderText" Value=" IP Address" />
                    <Setter Property="Padding" Value="4,5,0,6" />
                    <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MaskedTextBox}, Path=(helpers:StyleHelper.AltBorderBrush)}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsIpAddressValid}" Value="False">
                <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="Red" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPairingEnabled}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="PortTextBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MaskedTextBox}, Path=(helpers:StyleHelper.AltBorderBrush)}" />
    </Style>
    <Style
        x:Key="MaskedPortBoxStyle"
        BasedOn="{StaticResource NewDeviceMaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding ConnectPort, Mode=TwoWay}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ValidationType" Value="LimitNumber" />
        <Setter Property="MaxNumber" Value="65535" />
        <Setter Property="ControlStyle" Value="{StaticResource PortTextBoxStyle}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsConnectPortValid}" Value="False">
                <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDevicePortBoxStyle"
        BasedOn="{StaticResource MaskedPortBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource PortTextBoxStyle}" TargetType="TextBox">
                    <Setter Property="ui:ControlHelper.PlaceholderText" Value=" Port" />
                    <Setter Property="Padding" Value="4,5,0,6" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingEnabled}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDevicePairingPortBoxStyle"
        BasedOn="{StaticResource NewDeviceMaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding PairingPort, Mode=TwoWay}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ValidationType" Value="LimitNumber" />
        <Setter Property="MaxNumber" Value="65535" />
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource NumericTextBoxStyle}" TargetType="TextBox">
                    <Setter Property="ui:ControlHelper.PlaceholderText" Value="Pairing Port" />
                    <Setter Property="Padding" Value="7,5,0,6" />
                    <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MaskedTextBox}, Path=(helpers:StyleHelper.AltBorderBrush)}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingPortValid}" Value="False">
                <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DeviceContentGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="0,5" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsManualPairingInProgress}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="InProgress">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ConnectNewDeviceButtonStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Content" Value="Connect" />
        <Setter Property="Command" Value="{Binding ConnectCommand.Command}" />
        <Setter Property="IsEnabled" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingEnabled}" Value="True">
                <Setter Property="Content" Value="Pair &amp; Connect" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPairingEnabled}" Value="False" />
                    <Condition Binding="{Binding IsIpAddressValid}" Value="True" />
                    <Condition Binding="{Binding IsConnectPortValid}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPairingEnabled}" Value="True" />
                    <Condition Binding="{Binding IsIpAddressValid}" Value="True" />
                    <Condition Binding="{Binding IsConnectPortValid}" Value="True" />
                    <Condition Binding="{Binding IsPairingCodeValid}" Value="True" />
                    <Condition Binding="{Binding IsPairingPortValid}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NewDevicePairingGrid" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingEnabled}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDevicePairingPortAsteriskStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Setter Property="Margin" Value="0,4,0,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=HideForceFluent}" Value="True">
                <Setter Property="Margin" Value="10,8,-10,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="LogicalDeviceTemplate">
        <views:LogicalDeviceControl />
    </DataTemplate>
    <DataTemplate x:Key="ServiceDeviceTemplate">
        <views:ServiceDeviceControl />
    </DataTemplate>
    <DataTemplate x:Key="NewDeviceTemplate">
        <views:NewDeviceControl />
    </DataTemplate>
    <DataTemplate x:Key="HistoryDeviceTemplate">
        <views:HistoryDeviceControl />
    </DataTemplate>
    <helpers:DeviceTemplateSelector
        x:Key="DeviceTemplateSelector"
        HistoryDeviceTemplate="{StaticResource HistoryDeviceTemplate}"
        LogicalDeviceTemplate="{StaticResource LogicalDeviceTemplate}"
        NewDeviceTemplate="{StaticResource NewDeviceTemplate}"
        ServiceDeviceTemplate="{StaticResource ServiceDeviceTemplate}" />
    <Style
        x:Key="DeviceContainerStyle"
        BasedOn="{StaticResource StretchListViewItem}"
        TargetType="ListViewItem">
        <Setter Property="Margin" Value="0,1" />
    </Style>
    <Style
        x:Key="DevicesListViewStyle"
        BasedOn="{StaticResource ListViewStyle}"
        TargetType="ListView">
        <Setter Property="ItemContainerStyle" Value="{StaticResource DeviceContainerStyle}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource DeviceTemplateSelector}" />
    </Style>
    <Menu x:Key="DeviceActionsMenu" x:Shared="False">
        <Menu.Resources>
            <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
                <Setter Property="FontSize" Value="20" />
            </Style>
            <Style TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal" />
            </Style>
            <Style BasedOn="{StaticResource MenuStyle}" TargetType="Menu">
                <Setter Property="Height" Value="30" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                        <Setter Property="Height" Value="32" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                <Setter Property="Height" Value="30" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                        <Setter Property="Height" Value="32" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Menu.Resources>
        <Menu.Style>
            <Style BasedOn="{StaticResource MenuStyle}" TargetType="Menu">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Height" Value="30" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Status}" Value="Ok">
                        <Setter Property="IsEnabled" Value="True" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                        <Setter Property="Height" Value="32" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Menu.Style>
        <MenuItem ToolTip="More Actions">
            <MenuItem.Header>
                <ui:FontIcon Margin="-4" Glyph="&#xE712;" />
            </MenuItem.Header>
            <MenuItem Header="Root Access">
                <MenuItem.Icon>
                    <ui:FontIcon Glyph="&#xE7EF;" />
                </MenuItem.Icon>
                <MenuItem IsEnabled="False">
                    <MenuItem.Header>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" Text="Status: " />
                            <TextBlock FontWeight="Bold" Text="{Binding Root}" />
                            <TextBlock
                                FontWeight="Bold"
                                Style="{StaticResource RecoveryRootStatusStyle}"
                                Text=" - Recovery" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <Separator>
                    <Separator.Style>
                        <Style BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" TargetType="Separator">
                            <Setter Property="Margin" Value="-11,0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Root}" Value="Forbidden">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Sideload">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Separator.Style>
                </Separator>
                <MenuItem Command="{Binding ToggleRootCommand.Command}">
                    <MenuItem.Style>
                        <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Root}" Value="Forbidden">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Sideload">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                    <MenuItem.Header>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
                                    <Setter Property="Text" Value="Enable" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Root}" Value="Enabled">
                                            <Setter Property="Text" Value="Disable" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Reboot Into" ItemsSource="{Binding RebootCommands}">
                <MenuItem.Icon>
                    <ui:FontIcon Glyph="&#xE777;" />
                </MenuItem.Icon>
                <MenuItem.ItemContainerStyle>
                    <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                        <Setter Property="Command" Value="{Binding Command}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
        </MenuItem>
    </Menu>
    <Style
        x:Key="DevicesListStyle"
        BasedOn="{StaticResource SplitViewBorderStyle}"
        TargetType="Border">
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="Padding" Value="0,0,1,0" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=SelectedDevicesCount}" Value="0">
                <Setter Property="BorderThickness" Value="0,1,1,0" />
                <Setter Property="Padding" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DevicesRedBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=SelectedDevicesCount}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=IsWin11}" Value="True">
                <Setter Property="CornerRadius" Value="0,0,7,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DevicesSplitViewStyle"
        BasedOn="{StaticResource SplitViewStyle}"
        TargetType="ui:SplitView">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="OpenPaneLength" Value="236" />
        <Setter Property="DisplayMode" Value="Inline" />
        <Setter Property="PanePlacement" Value="Left" />
        <Setter Property="IsPaneOpen" Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsDevicesPaneOpen, Mode=TwoWay}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=DeviceListScrollViewer, Path=ScrollableHeight}" Value="0">
                <Setter Property="OpenPaneLength" Value="220" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=SelectedDevicesCount}" Value="0">
                <Setter Property="DisplayMode" Value="Overlay" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
