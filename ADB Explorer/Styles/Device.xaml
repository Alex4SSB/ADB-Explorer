<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ADB_Explorer.Controls"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:views="clr-namespace:ADB_Explorer.Views">
    <Style
        x:Key="PairingBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="ui:ControlHelper.PlaceholderText" Value="Pairing Code" />
        <Setter Property="ui:TextBoxHelper.IsDeleteButtonVisible" Value="False" />
        <Style.Triggers>
            <Trigger Property="ui:TextBoxHelper.HasText" Value="True">
                <Setter Property="FontSize" Value="18" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDeviceMaskedTextBoxStyle"
        BasedOn="{StaticResource MaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Height" Value="32" />
        <Setter Property="EnterCommand" Value="{Binding ConnectCommand.Command}" />
    </Style>
    <Style
        x:Key="PairingCodeBoxStyle"
        BasedOn="{StaticResource NewDeviceMaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=NewDeviceUIPairingCode, Mode=TwoWay}" />
        <Setter Property="ValidationType" Value="SeparateAndLimitDigits" />
        <Setter Property="Separator" Value="-" />
        <Setter Property="MaxChars" Value="6" />
        <Setter Property="ControlStyle" Value="{StaticResource PairingBoxStyle}" />
    </Style>
    <Style
        x:Key="NewDevicePairingCodeBoxStyle"
        BasedOn="{StaticResource PairingCodeBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding UIPairingCode, Mode=TwoWay}" />
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource PairingBoxStyle}" TargetType="TextBox">
                    <Setter Property="Padding" Value="7,5,0,6" />
                    <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MaskedTextBox}, Path=(helpers:StyleHelper.AltBorderBrush)}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingCodeValid}" Value="False">
                <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDeviceIpBoxStyle"
        BasedOn="{StaticResource NewDeviceMaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding IpAddress, Mode=TwoWay}" />
        <Setter Property="ValidationType" Value="SeparateFormat" />
        <Setter Property="Separator" Value="." />
        <Setter Property="MaxNumber" Value="255" />
        <Setter Property="MaxSeparators" Value="3" />
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource NumericTextBoxStyle}" TargetType="TextBox">
                    <Setter Property="ui:ControlHelper.PlaceholderText" Value=" IP Address" />
                    <Setter Property="Padding" Value="4,5,0,6" />
                    <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MaskedTextBox}, Path=(helpers:StyleHelper.AltBorderBrush)}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsIpAddressValid}" Value="False">
                <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="Red" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPairingEnabled}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="PortTextBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MaskedTextBox}, Path=(helpers:StyleHelper.AltBorderBrush)}" />
    </Style>
    <Style
        x:Key="MaskedPortBoxStyle"
        BasedOn="{StaticResource NewDeviceMaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding ConnectPort, Mode=TwoWay}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ValidationType" Value="LimitNumber" />
        <Setter Property="MaxNumber" Value="65535" />
        <Setter Property="ControlStyle" Value="{StaticResource PortTextBoxStyle}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsConnectPortValid}" Value="False">
                <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDevicePortBoxStyle"
        BasedOn="{StaticResource MaskedPortBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource PortTextBoxStyle}" TargetType="TextBox">
                    <Setter Property="ui:ControlHelper.PlaceholderText" Value=" Port" />
                    <Setter Property="Padding" Value="4,5,0,6" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingEnabled}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDevicePairingPortBoxStyle"
        BasedOn="{StaticResource NewDeviceMaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding PairingPort, Mode=TwoWay}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ValidationType" Value="LimitNumber" />
        <Setter Property="MaxNumber" Value="65535" />
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource NumericTextBoxStyle}" TargetType="TextBox">
                    <Setter Property="ui:ControlHelper.PlaceholderText" Value="Pairing Port" />
                    <Setter Property="Padding" Value="7,5,0,6" />
                    <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MaskedTextBox}, Path=(helpers:StyleHelper.AltBorderBrush)}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingPortValid}" Value="False">
                <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DeviceContentGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="0,5" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsManualPairingInProgress}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=MdnsService.State}" Value="InProgress">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ConnectNewDeviceButtonStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Content" Value="Connect" />
        <Setter Property="Command" Value="{Binding ConnectCommand.Command}" />
        <Setter Property="IsEnabled" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingEnabled}" Value="True">
                <Setter Property="Content" Value="Pair &amp; Connect" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPairingEnabled}" Value="False" />
                    <Condition Binding="{Binding IsIpAddressValid}" Value="True" />
                    <Condition Binding="{Binding IsConnectPortValid}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPairingEnabled}" Value="True" />
                    <Condition Binding="{Binding IsIpAddressValid}" Value="True" />
                    <Condition Binding="{Binding IsConnectPortValid}" Value="True" />
                    <Condition Binding="{Binding IsPairingCodeValid}" Value="True" />
                    <Condition Binding="{Binding IsPairingPortValid}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NewDevicePairingGrid" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPairingEnabled}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NewDevicePairingPortAsteriskStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Setter Property="Margin" Value="0,4,0,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=HideForceFluent}" Value="True">
                <Setter Property="Margin" Value="10,8,-10,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="LogicalDeviceTemplate">
        <views:LogicalDeviceControl />
    </DataTemplate>
    <DataTemplate x:Key="ServiceDeviceTemplate">
        <views:ServiceDeviceControl />
    </DataTemplate>
    <DataTemplate x:Key="NewDeviceTemplate">
        <views:NewDeviceControl />
    </DataTemplate>
    <DataTemplate x:Key="HistoryDeviceTemplate">
        <views:HistoryDeviceControl />
    </DataTemplate>
    <helpers:DeviceTemplateSelector
        x:Key="DeviceTemplateSelector"
        HistoryDeviceTemplate="{StaticResource HistoryDeviceTemplate}"
        LogicalDeviceTemplate="{StaticResource LogicalDeviceTemplate}"
        NewDeviceTemplate="{StaticResource NewDeviceTemplate}"
        ServiceDeviceTemplate="{StaticResource ServiceDeviceTemplate}" />
    <Style
        x:Key="DeviceContainerStyle"
        BasedOn="{StaticResource StretchListViewItem}"
        TargetType="ListViewItem">
        <Setter Property="Margin" Value="0,1" />
    </Style>
    <Style
        x:Key="DevicesListViewStyle"
        BasedOn="{StaticResource ListViewStyle}"
        TargetType="ListView">
        <Setter Property="ItemContainerStyle" Value="{StaticResource DeviceContainerStyle}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource DeviceTemplateSelector}" />
    </Style>
</ResourceDictionary>
