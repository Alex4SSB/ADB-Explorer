<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:ui="http://schemas.modernwpf.com/2019">

    <Thickness x:Key="MenuFlyoutScrollerMargin">0,4,0,4</Thickness>
    <KeyTime x:Key="AnimationDurationKeyTime">00:00:00.2</KeyTime>

    <Style x:Key="MenuBorderStyle" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="True">
                <Setter Property="CornerRadius" Value="5" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="CornerRadius" Value="0" />
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}" TargetType="MenuItem">
        <ControlTemplate.Resources>
            <RotateTransform x:Key="RotatingTransform" />
            <TranslateTransform x:Key="BounceTransform" X="0" Y="0" />
            <Storyboard x:Key="BouncingStoryBoard">
                <DoubleAnimation
                    AutoReverse="True"
                    Storyboard.TargetName="ContentPresenter"
                    Storyboard.TargetProperty="RenderTransform.Y"
                    From="0"
                    To="-4"
                    Duration="00:00:00.1">
                    <DoubleAnimation.EasingFunction>
                        <BounceEase
                            Bounces="2"
                            Bounciness="4"
                            EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
            <Storyboard x:Key="RotatingStoryBoard" x:Name="RotatingStoryBoard">
                <DoubleAnimation
                    Storyboard.TargetName="ContentPresenter"
                    Storyboard.TargetProperty="RenderTransform.Angle"
                    From="0"
                    To="360"
                    Duration="00:00:00.2" />
            </Storyboard>
            <Storyboard x:Key="LeftMarqueeStoryBoard">
                <DoubleAnimation
                    Storyboard.TargetName="ContentPresenter"
                    Storyboard.TargetProperty="RenderTransform.X"
                    From="0"
                    To="-30"
                    Duration="00:00:00.1" />
                <DoubleAnimation
                    BeginTime="00:00:00.1"
                    Storyboard.TargetName="ContentPresenter"
                    Storyboard.TargetProperty="RenderTransform.X"
                    From="30"
                    To="0"
                    Duration="00:00:00.1">
                    <DoubleAnimation.EasingFunction>
                        <BounceEase
                            Bounces="2"
                            Bounciness="4"
                            EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
            <Storyboard x:Key="RightMarqueeStoryBoard">
                <DoubleAnimation
                    Storyboard.TargetName="ContentPresenter"
                    Storyboard.TargetProperty="RenderTransform.X"
                    From="0"
                    To="30"
                    Duration="00:00:00.1" />
                <DoubleAnimation
                    BeginTime="00:00:00.1"
                    Storyboard.TargetName="ContentPresenter"
                    Storyboard.TargetProperty="RenderTransform.X"
                    From="-30"
                    To="0"
                    Duration="00:00:00.1">
                    <DoubleAnimation.EasingFunction>
                        <BounceEase
                            Bounces="2"
                            Bounciness="4"
                            EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid
            x:Name="ContentRoot"
            Background="{TemplateBinding Background}"
            ClipToBounds="True"
            SnapsToDevicePixels="True">
            <Border
                x:Name="Background"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Style="{StaticResource MenuBorderStyle}" />

            <ContentPresenter
                x:Name="ContentPresenter"
                Margin="12,0,12,0"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                ContentSource="Header"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <!--  Click animation  -->
            <EventTrigger RoutedEvent="MenuItem.Click">
                <BeginStoryboard>
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(helpers:StyleHelper.ActivateAnimation)">
                            <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
                            <DiscreteBooleanKeyFrame KeyTime="{StaticResource AnimationDurationKeyTime}" Value="False" />
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                    <Condition Property="helpers:StyleHelper.ContentAnimation" Value="Bounce" />
                    <Condition Property="helpers:StyleHelper.UseFluentStyles" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource BouncingStoryBoard}" />
                </MultiTrigger.EnterActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                    <Condition Property="helpers:StyleHelper.ContentAnimation" Value="Rotate" />
                    <Condition Property="helpers:StyleHelper.UseFluentStyles" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource RotatingTransform}" />
                <Setter TargetName="ContentPresenter" Property="RenderTransformOrigin" Value="0.5, 0.5" />
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource RotatingStoryBoard}" />
                </MultiTrigger.EnterActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                    <Condition Property="helpers:StyleHelper.ContentAnimation" Value="LeftMarquee" />
                    <Condition Property="helpers:StyleHelper.UseFluentStyles" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource LeftMarqueeStoryBoard}" />
                </MultiTrigger.EnterActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                    <Condition Property="helpers:StyleHelper.ContentAnimation" Value="RightMarquee" />
                    <Condition Property="helpers:StyleHelper.UseFluentStyles" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource RightMarqueeStoryBoard}" />
                </MultiTrigger.EnterActions>
            </MultiTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPointerOver}" />
                <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPointerOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPressed}" />
                <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPressed}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Grid
            x:Name="ContentRoot"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <Border
                x:Name="Background"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Style="{StaticResource MenuBorderStyle}" />

            <ContentPresenter
                x:Name="ContentPresenter"
                Margin="12,0,12,0"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                ContentSource="Header"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

            <ui:MenuPopup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Focusable="false"
                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <ui:ThemeShadowChrome CornerRadius="{DynamicResource OverlayCornerRadius}" IsShadowEnabled="{DynamicResource {x:Static SystemParameters.DropShadowKey}}">
                    <Border
                        x:Name="SubMenuRoot"
                        Background="{DynamicResource MenuFlyoutPresenterBackground}"
                        CornerRadius="{DynamicResource OverlayCornerRadius}">
                        <Grid>
                            <ScrollViewer
                                x:Name="SubMenuScrollViewer"
                                MinWidth="{DynamicResource FlyoutThemeMinWidth}"
                                Margin="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter
                                    Margin="{StaticResource MenuFlyoutScrollerMargin}"
                                    Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    RenderOptions.ClearTypeHint="Enabled"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <Border
                                x:Name="SubMenuBorder"
                                BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                                BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                                CornerRadius="{DynamicResource OverlayCornerRadius}" />
                        </Grid>
                    </Border>
                </ui:ThemeShadowChrome>
            </ui:MenuPopup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsSuspendingAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPointerOver}" />
                <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPointerOver}" />
            </Trigger>
            <!--  Selected  -->
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundSelected}" />
                <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushSelected}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPressed}" />
                <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPressed}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="AdbMenuItemStyle"
        BasedOn="{StaticResource DefaultMenuItemStyle}"
        TargetType="MenuItem">
        <Setter Property="helpers:StyleHelper.UseFluentStyles" Value="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" />
        <Setter Property="Background" Value="{DynamicResource MenuFlyoutItemRevealBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutItemRevealBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource MenuFlyoutItemRevealBorderThickness}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForeground}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="{DynamicResource MenuBarItemBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrush}" />
                <Setter Property="BorderThickness" Value="{DynamicResource MenuBarItemBorderThickness}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="Height" Value="{StaticResource MenuBarHeight}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{DynamicResource MenuBarItemBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrush}" />
                <Setter Property="BorderThickness" Value="{DynamicResource MenuBarItemBorderThickness}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="Height" Value="{StaticResource MenuBarHeight}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Background" Value="{DynamicResource MenuFlyoutSubItemRevealBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutSubItemRevealBorderBrush}" />
                <Setter Property="BorderThickness" Value="{DynamicResource MenuFlyoutSubItemRevealBorderThickness}" />
                <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutSubItemForeground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem" />

</ResourceDictionary>
