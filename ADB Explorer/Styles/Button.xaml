<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:ui="http://schemas.modernwpf.com/2019">
    <KeyTime x:Key="AnimationDurationKeyTime">00:00:00.2</KeyTime>
    <Style
        x:Key="ButtonStyle"
        BasedOn="{StaticResource DefaultButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="True">
                <Setter Property="ui:ControlHelper.CornerRadius" Value="5" />
                <Setter Property="Background" Value="{DynamicResource AdbButtonBackgroundNormal}" />
                <Setter Property="helpers:StyleHelper.ActivateAnimation" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualRoundedStyle}" />
                <Setter Property="Template">
                    <!--  Template copied from ModernWPF to be modified  -->
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ControlTemplate.Resources>
                                <RotateTransform x:Key="RotatingTransform" />
                                <TranslateTransform x:Key="BounceTransform" X="0" Y="0" />
                                <Storyboard x:Key="BouncingStoryBoard">
                                    <DoubleAnimation
                                        AutoReverse="True"
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Y"
                                        From="0"
                                        To="-4"
                                        Duration="00:00:00.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase
                                                Bounces="2"
                                                Bounciness="4"
                                                EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Key="RotatingStoryBoard" x:Name="RotatingStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                        From="0"
                                        To="360"
                                        Duration="00:00:00.2" />
                                </Storyboard>
                                <Storyboard x:Key="LeftMarqueeStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.X"
                                        From="0"
                                        To="-30"
                                        Duration="00:00:00.1" />
                                    <DoubleAnimation
                                        BeginTime="00:00:00.1"
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.X"
                                        From="30"
                                        To="0"
                                        Duration="00:00:00.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase
                                                Bounces="2"
                                                Bounciness="4"
                                                EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Key="RightMarqueeStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.X"
                                        From="0"
                                        To="30"
                                        Duration="00:00:00.1" />
                                    <DoubleAnimation
                                        BeginTime="00:00:00.1"
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.X"
                                        From="-30"
                                        To="0"
                                        Duration="00:00:00.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase
                                                Bounces="2"
                                                Bounciness="4"
                                                EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border
                                x:Name="Background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <Border Padding="{TemplateBinding Padding}" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
                                        <ContentPresenter
                                            x:Name="ContentPresenter"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="False"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <Border
                                        x:Name="UpperBorder"
                                        BorderBrush="{DynamicResource AdbButtonUpperBorderNormal}"
                                        BorderThickness="0,1,0,0"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" />
                                    <Border
                                        x:Name="LowerBorder"
                                        BorderBrush="{DynamicResource AdbButtonLowerBorderNormal}"
                                        BorderThickness="0,0,0,1"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" />
                                    <Border
                                        x:Name="SideBorder"
                                        BorderBrush="{DynamicResource AdbButtonSideBorderNormal}"
                                        BorderThickness="1,0,1,0"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  Click animation  -->
                                <EventTrigger RoutedEvent="Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(helpers:StyleHelper.ActivateAnimation)">
                                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
                                                <DiscreteBooleanKeyFrame KeyTime="{StaticResource AnimationDurationKeyTime}" Value="False" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="Bounce" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource BouncingStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="Rotate" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource RotatingTransform}" />
                                    <Setter TargetName="ContentPresenter" Property="RenderTransformOrigin" Value="0.5, 0.5" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource RotatingStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="LeftMarquee" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource LeftMarqueeStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="RightMarquee" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource RightMarqueeStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <!--  Original triggers  -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="{DynamicResource AdbButtonBackgroundMouseOver}" />
                                    <Setter TargetName="UpperBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonUpperBorderMouseOver}" />
                                    <Setter TargetName="LowerBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonLowerBorderMouseOver}" />
                                    <Setter TargetName="SideBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonSideBorderMouseOver}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="{DynamicResource AdbButtonBackgroundPressed}" />
                                    <Setter TargetName="UpperBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonBorderPressedOrDisabled}" />
                                    <Setter TargetName="LowerBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonBorderPressedOrDisabled}" />
                                    <Setter TargetName="SideBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonBorderPressedOrDisabled}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Background" Property="Background" Value="{DynamicResource AdbButtonBackgroundDisabled}" />
                                    <Setter TargetName="UpperBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonBorderPressedOrDisabled}" />
                                    <Setter TargetName="LowerBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonBorderPressedOrDisabled}" />
                                    <Setter TargetName="SideBorder" Property="BorderBrush" Value="{DynamicResource AdbButtonBorderPressedOrDisabled}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                                </Trigger>
                                <!--  Non-fluent  -->
                                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="False">
                                    <Setter TargetName="UpperBorder" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="LowerBorder" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="SideBorder" Property="BorderBrush" Value="Transparent" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />
        <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="0" />
    </Style>

    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button" />
</ResourceDictionary>
