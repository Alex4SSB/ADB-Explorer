<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ADB_Explorer.Converters"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:ui="http://schemas.modernwpf.com/2019">
    <converters:CompletedStatsConverter x:Key="CompletedStatsConverter" />
    <converters:DoubleEquals x:Key="DoubleEquals" />

    <Style x:Key="FluentProgressBarStyle" TargetType="ui:ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FluentProgressRingStyle" TargetType="ui:ProgressRing">
        <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceHeaderIcon"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceStatusFontSizeStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="ToolTip" Value="{Binding Tooltip}" />
    </Style>
    <Style
        x:Key="DeviceStatusIconStyle"
        BasedOn="{StaticResource DeviceStatusFontSizeStyle}"
        TargetType="ui:FontIcon">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Glyph" Value="&#xEBFE;" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Status}" Value="Offline">
                <Setter Property="Glyph" Value="&#xEBFD;" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RemoveDeviceButtonStyle"
        BasedOn="{StaticResource DisabledButtonTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Text" Value="Remove" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="Text" Value="Kill" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuStyle" TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeMediumLowBrush}" />
    </Style>
    <Style
        x:Key="FileOpProgressStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Style.Triggers>
            <DataTrigger Binding="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" Value="{x:Null}">
                <Setter Property="IsIndeterminate" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NumericTextBoxStyle"
        BasedOn="{StaticResource TextBoxFluentStyle}"
        TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="FontFamily" Value="Segoe UI" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="Consolas" />
    </Style>
    <Style
        x:Key="PairingTextBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="IsEnabled" Value="False" />
        <Style.Triggers>
            <Trigger Property="ui:TextBoxHelper.HasText" Value="True">
                <Setter Property="FontSize" Value="18" />
            </Trigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Unauthorized">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="TooltipTextBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="ToolTipService.IsEnabled" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TooltipTextBlockStyle" TargetType="TextBlock">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
    </Style>
    <Style
        x:Key="DeviceButtonStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMdns}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Visible" />
    </Style>
    <Style
        x:Key="DeviceBrowseButtonStyle"
        BasedOn="{StaticResource DeviceButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Offline">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Unauthorized">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="IsEnabled" Value="True" />
    </Style>
    <Style
        x:Key="DeviceRemoveButtonStyle"
        BasedOn="{StaticResource DeviceButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Type}" Value="Remote">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="IsEnabled" Value="False" />
    </Style>
    <Style
        x:Key="DeviceNameTextBlockStyle"
        BasedOn="{StaticResource TooltipTextBlockStyle}"
        TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Unauthorized">
                <Setter Property="Text" Value="[Unauthorized]" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="Text" Value="{Binding Device.ID}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Type}" Value="Service" />
                    <Condition Binding="{Binding IsMdns}" Value="False" />
                    <Condition Binding="{Binding Name}" Value="" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="[Service]" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding IsMdns}" Value="True">
                <Setter Property="Text" Value="{Binding Device.IpAddress}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Text" Value="{Binding Name}" />
    </Style>
    <ResourceDictionary x:Key="ContextMenuStyles">
        <Style TargetType="MenuItem">
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="6,0" />
        </Style>
        <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
            <Setter Property="Margin" Value="0,0,6,0" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="0,2" />
        </Style>
    </ResourceDictionary>
    <ResourceDictionary x:Key="ContextSubMenuStyles">
        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
            <Setter Property="Margin" Value="6,0,0,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
    </ResourceDictionary>
    <ResourceDictionary x:Key="TopMenuStyles">
        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="0,2" />
        </Style>
        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
            <Setter Property="Margin" Value="6,0,0,0" />
        </Style>
    </ResourceDictionary>
    <ResourceDictionary x:Key="DeviceMenuStyles">
        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="0,2" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="6,0,0,0" />
        </Style>
    </ResourceDictionary>
    <ContextMenu x:Key="RowContextMenu" Resources="{StaticResource ContextMenuStyles}" />
    <ContextMenu x:Key="FileOpHeaderContextMenu" Resources="{StaticResource ContextSubMenuStyles}">
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextOpTypeCheckBox"
                    Content="Operation Type"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextFileNameCheckBox"
                    Content="File Name"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextProgressCheckBox"
                    Content="Progress"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextSourceCheckBox"
                    Content="Source"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextDestCheckBox"
                    Content="Destination"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
    </ContextMenu>
    <DataTemplate x:Key="FileOpFileNameTemplate">
        <Grid Margin="4,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ui:FontIcon
                Margin="0,0,4,0"
                FontSize="16"
                Glyph="&#xE8b7;">
                <ui:FontIcon.Style>
                    <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FilePath.IsDirectory}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:FontIcon.Style>
            </ui:FontIcon>
            <TextBlock Grid.Column="1" TextTrimming="CharacterEllipsis">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource TooltipTextBlockStyle}" TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding FilePath.NoExtName}" />
                        <Setter Property="FontWeight" Value="Regular" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ShowExtensionsCheckBox, Path=IsChecked}" Value="True">
                                <Setter Property="Text" Value="{Binding FilePath.FullName}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="InProgress">
                                <Setter Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock
                Grid.Row="1"
                Margin="0,-3,0,0"
                HorizontalAlignment="Center"
                FontSize="16"
                Text="└">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FilePath.IsDirectory}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Completed">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding StatusInfo.CurrentFileName}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Visible" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock
                Grid.Row="1"
                Grid.Column="1"
                TextTrimming="CharacterEllipsis">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource TooltipTextBlockStyle}" TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="{Binding StatusInfo.CurrentFileNameWithoutExtension}" />
                        <Setter Property="FontWeight" Value="Regular" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ShowExtensionsCheckBox, Path=IsChecked}" Value="False">
                                <Setter Property="Text" Value="{Binding StatusInfo.CurrentFileName}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding StatusInfo.CurrentFileName}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FilePath.IsDirectory}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Completed">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="InProgress">
                                <Setter Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="FileOpSourcePathTemplate">
        <TextBlock
            Margin="4,0"
            Text="{Binding FilePath.ParentPath}"
            TextTrimming="CharacterEllipsis">
            <TextBlock.Style>
                <Style BasedOn="{StaticResource TooltipTextBlockStyle}" TargetType="TextBlock">
                    <Setter Property="FontWeight" Value="Regular" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="InProgress">
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="FileOpTargetPathTemplate">
        <TextBlock Margin="4,0" TextTrimming="CharacterEllipsis">
            <TextBlock.Style>
                <Style BasedOn="{StaticResource TooltipTextBlockStyle}" TargetType="TextBlock">
                    <Setter Property="FontWeight" Value="Regular" />
                    <Setter Property="Text" Value="{Binding TargetPath.FullPath}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="InProgress">
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OperationName}" Value="Delete">
                            <Setter Property="Text" Value="Permanent Deletion" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>
    <Style
        x:Key="CompletedOperationsProgressStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleEquals}, ConverterParameter=100, Path=Value}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource RedStripedBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="FileOpProgressTemplate">
        <Grid Margin="4,0">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontWeight" Value="Bold" />
                    </Style>
                </Grid.Resources>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="InProgress">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ui:ProgressBar Style="{StaticResource FileOpProgressStyle}" Value="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" />
                <ui:ProgressBar Grid.Row="1" Value="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}">
                    <ui:ProgressBar.Style>
                        <Style BasedOn="{StaticResource FluentProgressBarStyle}" TargetType="ui:ProgressBar">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Visible" />
                        </Style>
                    </ui:ProgressBar.Style>
                </ui:ProgressBar>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Visible" />
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Margin="4,0,0,0" Text="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" />
                    <TextBlock Text="%" />
                </StackPanel>
                <StackPanel
                    Grid.Row="1"
                    Grid.Column="1"
                    Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Visible" />
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Margin="4,0,0,0" Text="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" />
                    <TextBlock Text="%" />
                </StackPanel>
            </Grid>
            <Grid>
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Completed">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding OperationName}" Value="Delete">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ui:ProgressBar Style="{StaticResource CompletedOperationsProgressStyle}" Value="{Binding StatusInfo.FileCountCompletedRate, Mode=OneWay}" />
                        <TextBlock
                            Grid.Column="1"
                            Margin="4,0"
                            Text="{Binding StatusInfo.FileCountCompletedString}"
                            TextTrimming="CharacterEllipsis" />
                    </Grid>
                    <TextBlock
                        Grid.Row="1"
                        Text="{Binding StatusInfo, Converter={StaticResource CompletedStatsConverter}}"
                        TextTrimming="CharacterEllipsis" />
                </Grid>
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Canceled">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="Failed">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding OperationName}" Value="Delete">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </Grid.Style>
                    <ui:SimpleStackPanel Orientation="Horizontal" Spacing="4">
                        <ui:FontIcon Glyph="&#xE711;">
                            <ui:FontIcon.Style>
                                <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="Completed">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:FontIcon.Style>
                        </ui:FontIcon>
                        <ui:FontIcon Glyph="&#xF13E;">
                            <ui:FontIcon.Style>
                                <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="Completed">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:FontIcon.Style>
                        </ui:FontIcon>
                        <TextBlock Text="{Binding Status}" />
                    </ui:SimpleStackPanel>
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="OperationIconTemplate">
        <Grid Margin="0,0,6,0" ToolTip="{Binding OperationName}">
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OperationName}" Value="Push">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OperationName}" Value="Pull">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <ui:FontIcon HorizontalAlignment="Left" Glyph="&#xE8EA;" />
                <ui:FontIcon Margin="14,0,0,0" FontSize="14">
                    <ui:FontIcon.Style>
                        <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OperationName}" Value="Push">
                                    <Setter Property="Glyph" Value="&#xE973;" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding OperationName}" Value="Pull">
                                    <Setter Property="Glyph" Value="&#xE974;" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ui:FontIcon.Style>
                </ui:FontIcon>
            </Grid>
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OperationName}" Value="Delete">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <ui:FontIcon Glyph="&#xE74D;" Style="{StaticResource GlyphFont}" />
            </Grid>
        </Grid>
    </DataTemplate>
    <Style x:Key="BaseRowStyle" TargetType="DataGridRow">
        <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Border
                        x:Name="RowBorder"
                        HorizontalAlignment="Left"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverBackground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedBackground}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=IsActive}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectedInactiveBackground}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=IsActive}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectedMouseOverInactiveBackground}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BaseCellStyle" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Margin="0" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="DataGridColumnHeaderStyle"
        BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}"
        TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
    </Style>
    <Style
        x:Key="FileOpColumnHeaderStyle"
        BasedOn="{StaticResource DataGridColumnHeaderStyle}"
        TargetType="DataGridColumnHeader">
        <Setter Property="ContextMenu" Value="{StaticResource FileOpHeaderContextMenu}" />
    </Style>
    <Style x:Key="ExplorerViewBackgroundStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
    </Style>
    <Style x:Key="SeparatorStyle" TargetType="Separator">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="True">
                <Setter Property="Height" Value="0" />
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExpanderSeparatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource DeviceConnectionPanelBorder}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="False">
                <Setter Property="Height" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceOpenIconStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style x:Key="DeviceStatusGridStyle" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Status}" Value="Online">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ForceFluentVisibility"
        BasedOn="{StaticResource CheckBoxStyle}"
        TargetType="CheckBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.IsWin11}}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RestartRequiredIconsStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="ToolTip" Value="App Restart Required" />
    </Style>
    <Style
        x:Key="RestartWarningIconStyle"
        BasedOn="{StaticResource RestartRequiredIconsStyle}"
        TargetType="ui:FontIcon">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Expander, Mode=FindAncestor}, Path=Background}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="False">
                <Setter Property="Margin" Value="4,0,0,0" />
                <Setter Property="Foreground" Value="{DynamicResource DevicesListBackground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="QrBackgroundStyle" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="True">
                <Setter Property="CornerRadius" Value="0,0,5,5" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Background" Value="#FFFBFBFB" />
        <Setter Property="Margin" Value="0,12,0,0" />
    </Style>
    <Style
        x:Key="RootIconStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Root}" Value="Disabled">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                <Setter Property="ToolTip" Value="Root Can Be Enabled" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Root}" Value="Enabled">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="ToolTip" Value="Root Access Enabled" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style
        x:Key="OperationsIconStyle"
        BasedOn="{StaticResource DisabledGlyphStyle}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=FileOpRing, Path=Visibility}" Value="Visible">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style
        x:Key="OperationsProgressRingStyle"
        BasedOn="{StaticResource FluentProgressRingStyle}"
        TargetType="ui:ProgressRing">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=UpperProgressBar, Path=IsIndeterminate}" Value="False">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=UpperProgressBar, Path=Visibility}" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=CurrentOperationDataGrid, Path=Items.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DirectoryLoadingProgressStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=PathBox, Path=IsFocused}" Value="True">
                <Setter Property="IsIndeterminate" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=PathBox, Path=IsEnabled}" Value="False">
                <Setter Property="CornerRadius" Value="4" />
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="False">
                <Setter Property="CornerRadius" Value="0" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="CornerRadius" Value="4,4,2,2" />
        <Setter Property="Margin" Value="0,0,0,1" />
    </Style>
    <Style
        x:Key="DriveItemStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <Trigger Property="helpers:RepeaterHelper.IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource AdbButtonBackgroundMouseOver}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="helpers:RepeaterHelper.IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DriveUsageBarStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Setter Property="ToolTip">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding UsageP}" />
                    <TextBlock Text="% Used" />
                </StackPanel>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding UsageWarning}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RedStripedBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DriveIconStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Unknown">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DriveTextBlockStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DriveNameTextBlockStyle"
        BasedOn="{StaticResource DriveTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="ItemsCountStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding ElementName=ExplorerGrid, Path=Items.Count}" />
        <Setter Property="Margin" Value="0,4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Text" Value="{Binding ElementName=DrivesItemRepeater, Path=ItemsSource.Count}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ItemsCountStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="0">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SelectedItemsStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding ElementName=ExplorerGrid, Path=SelectedItems.Count}" />
        <Setter Property="Margin" Value="0,4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Text" Value="{Binding ElementName=DrivesItemRepeater, Path=(helpers:RepeaterHelper.SelectedItems)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="">
                <Setter Property="Text" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TotalSizeStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=TotalSizeBlock, Path=Text}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="FileOpButtonStyle"
        BasedOn="{StaticResource AdbMenuItemStyle}"
        TargetType="MenuItem">
        <Setter Property="helpers:RemoteToggle.IsTargetVisible" Value="False" />
        <Setter Property="helpers:StyleHelper.ContentAnimation" Value="RotateCW" />
        <Style.Triggers>
            <Trigger Property="helpers:RemoteToggle.IsTargetVisible" Value="False">
                <Setter Property="helpers:StyleHelper.ContentAnimation" Value="RotateCCW" />
            </Trigger>
            <DataTrigger Binding="{Binding ElementName=FileOpRing, Path=Visibility}" Value="Visible">
                <Setter Property="helpers:StyleHelper.ContentAnimation" Value="None" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Storyboard x:Key="PulsatingBackgroundStoryboard" RepeatBehavior="3x">
        <ColorAnimation
            AutoReverse="True"
            Storyboard.TargetName="OpenDevicesButton"
            Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
            From="#00000000"
            To="Gray"
            Duration="00:00:00.15" />
    </Storyboard>
    <Style
        x:Key="StopFileOpMenuStyle"
        BasedOn="{StaticResource MenuStyle}"
        TargetType="Menu">
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="DataContext" Value="{Binding ElementName=UpperProgressBar, Path=DataContext}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IncompleteOperations, NotifyOnTargetUpdated=True}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="BatteryIconStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Setter Property="Glyph" Value="{Binding Device.Battery.BatteryIcon}" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <Grid>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Device.Battery.ChargeState}" Value="Unknown">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="{Binding Device.Battery.Level}" />
                        <TextBlock Text="%" />
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Device.Battery.ChargeState}" Value="Charging">
                                            <Setter Property="Text" Value=", Plugged In" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                    <TextBlock Text="Battery Status Unknown">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Device.Battery.ChargeState}" Value="Unknown">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="DeviceDetailsBatteryStyle"
        BasedOn="{StaticResource BatteryIconStyle}"
        TargetType="ui:FontIcon">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="Text" Value="">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ui:SimpleStackPanel Spacing="4">
                    <TextBlock Text="{Binding Device.Battery.BatteryState}" />
                    <TextBlock Text="{Binding Device.Battery.BatteryHealth}" />
                    <TextBlock Text="{Binding Device.Battery.Voltage}" />
                    <TextBlock Text="{Binding Device.Battery.Temperature}" />
                </ui:SimpleStackPanel>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <Trigger Property="DataContext" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="UnsupportedIconStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AndroidVersionIncompatible}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AndroidTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Margin" Value="0,4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AndroidVersion}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DeviceDetailsBatteryPercentStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Margin" Value="0,4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Battery.Level}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultToolTipStyle}" TargetType="ToolTip">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.UseFluentStyles}}" Value="False">
                <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RecoveryRootStatusStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Type}" Value="Sideload">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
