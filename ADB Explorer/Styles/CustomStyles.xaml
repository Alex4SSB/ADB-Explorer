<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app_prop="clr-namespace:ADB_Explorer.Properties"
    xmlns:controls="clr-namespace:ADB_Explorer.Controls"
    xmlns:converters="clr-namespace:ADB_Explorer.Converters"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:ui="http://schemas.modernwpf.com/2019">
    <converters:CompletedStatsConverter x:Key="CompletedStatsConverter" />
    <converters:DoubleEquals x:Key="DoubleEquals" />
    <converters:TrimmedTooltipConverter x:Key="TrimmedTooltip" />
    <converters:FileOpProgressConverter x:Key="FileOpProgressConverter" />
    <Style
        x:Key="StretchCheckBoxStyle"
        BasedOn="{StaticResource CheckBoxStyle}"
        TargetType="CheckBox">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style
        x:Key="StretchRadioButton"
        BasedOn="{StaticResource RadioButtonStyle}"
        TargetType="RadioButton">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="FluentProgressBarStyle" TargetType="ui:ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FluentProgressRingStyle" TargetType="ui:ProgressRing">
        <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceHeaderIcon"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DriveForegroundPressed}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuStyle" TargetType="Menu">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="helpers:MenuHelper.IsButtonMenu" Value="False" />
    </Style>
    <Style
        x:Key="NumericTextBoxStyle"
        BasedOn="{StaticResource TextBoxFluentStyle}"
        TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="FontFamily" Value="Segoe UI" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="{StaticResource ConsoleFont}" />
    </Style>
    <Style
        x:Key="FluentTooltipStyle"
        BasedOn="{StaticResource DefaultToolTipStyle}"
        TargetType="ToolTip">
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="False">
                <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource FluentTooltipStyle}" TargetType="ToolTip" />
    <Style
        x:Key="TrimmedTextTooltipStyle"
        BasedOn="{StaticResource FluentTooltipStyle}"
        TargetType="ToolTip">
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget, Converter={StaticResource TrimmedTooltip}}" />
    </Style>
    <Style
        x:Key="TooltipTextBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
        <Style.Resources>
            <Style BasedOn="{StaticResource TrimmedTextTooltipStyle}" TargetType="ToolTip" />
        </Style.Resources>
    </Style>
    <Style
        x:Key="TooltipTextBoxFluentStyle"
        BasedOn="{StaticResource TextBoxFluentStyle}"
        TargetType="TextBox">
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
        <Style.Resources>
            <Style BasedOn="{StaticResource TrimmedTextTooltipStyle}" TargetType="ToolTip" />
        </Style.Resources>
    </Style>
    <Style x:Key="TooltipTextBlockStyle" TargetType="TextBlock">
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
        <Style.Resources>
            <Style BasedOn="{StaticResource TrimmedTextTooltipStyle}" TargetType="ToolTip" />
        </Style.Resources>
    </Style>
    <Style
        x:Key="DisabledTooltipTextBlockStyle"
        BasedOn="{StaticResource TooltipTextBlockStyle}"
        TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="FileNameTextBlockStyle"
        BasedOn="{StaticResource TooltipTextBlockStyle}"
        TargetType="TextBlock" />
    <Style
        x:Key="ExplorerGridCellStyle"
        BasedOn="{StaticResource FileNameTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Margin" Value="4,0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style
        x:Key="DirectoryGridCellStyle"
        BasedOn="{StaticResource ExplorerGridCellStyle}"
        TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CutState}" Value="Move">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CutState}" Value="Copy">
                <Setter Property="Foreground" Value="{DynamicResource SystemControlBackgroundAccentBrush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding CutState}" Value="Copy" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding CutState}" Value="Copy" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BaseCellStyle" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Margin="0" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExplorerViewBackgroundStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
    </Style>
    <Style x:Key="SeparatorStyle" TargetType="Separator">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="Height" Value="0" />
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExpanderSeparatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource DeviceConnectionPanelBorder}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="False">
                <Setter Property="Height" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RestartAppButtonStyle"
        BasedOn="{StaticResource AccentButtonStyle}"
        TargetType="Button">
        <Style.Resources>
            <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Glyph" Value="&#xE72C;" />
                <Style.Triggers>
                    <Trigger Property="Opacity" Value="0">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="ToolTip" Value="Restart app for changes to take effect" />
    </Style>
    <Style x:Key="QrBackgroundStyle" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="CornerRadius" Value="0,0,5,5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="Running">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Background" Value="#FFFBFBFB" />
        <Setter Property="Margin" Value="-6,-2" />
    </Style>
    <Style
        x:Key="RootIconStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Root}" Value="Disabled">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                <Setter Property="ToolTip" Value="Root Can Be Enabled" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Root}" Value="Enabled">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="ToolTip" Value="Root Access Enabled" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style
        x:Key="UpperProgressBarStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="IsIndeterminate" Value="False" />
        <Setter Property="ToolTip" Value="{Binding StringProgress}" />
        <Setter Property="Value" Value="{Binding Progress, Mode=OneWay, Converter={StaticResource FileOpProgressConverter}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AnyFailedOperations}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="#FFFF99A4" />
                <Setter Property="ToolTip" Value="Some operations have failed" />
            </DataTrigger>
            <Trigger Property="Value" Value="0">
                <Setter Property="IsIndeterminate" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ItemsCountStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="0">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ItemsCountContainerStyle" TargetType="StackPanel">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsExplorerVisible}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsDriveViewVisible}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Hidden" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SelectedItemsStyle"
        BasedOn="{StaticResource MarginedTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding ElementName=MainWin, Path=SelectedFilesCount}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Text" Value="{Binding ElementName=DriveList, Path=SelectedItems.Count}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="">
                <Setter Property="Text" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SelectedItemsSuffixStyle"
        BasedOn="{StaticResource MarginedTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Text" Value=" items" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=SelectedItemsBlock, Path=Text}" Value="1">
                <Setter Property="Text" Value=" item" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TotalSizeStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=TotalSizeBlock, Path=Text}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="UnsupportedIconStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Setter Property="Glyph" Value="&#xE7BA;" />
        <Setter Property="ToolTip" Value="Limited Support" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AndroidVersionIncompatible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AndroidTextBlockStyle" TargetType="StackPanel">
        <Style.Triggers>
            <DataTrigger Binding="{Binding AndroidVersion}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RecoveryRootStatusStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Recovery">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StretchListViewItem" TargetType="ListViewItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollContentPresenter}, Path=ActualWidth}">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BlueDotTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="•" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="FileIconTemplate">
        <Grid>
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="Opacity" Value="1" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ExtensionIsGlyph}" Value="False" />
                                    <Condition Binding="{Binding ExtensionIsFontIcon}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding CutState}" Value="Move">
                                <Setter Property="Opacity" Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Image
                    Width="16"
                    Margin="0,1,0,0"
                    RenderOptions.BitmapScalingMode="HighQuality"
                    Source="{Binding Icon}" />
                <Image
                    Width="16"
                    Margin="0,1,0,0"
                    RenderOptions.BitmapScalingMode="HighQuality"
                    Source="{Binding IconOverlay}" />
            </Grid>
            <TextBlock
                HorizontalAlignment="Center"
                FontSize="16"
                Text="{Binding ShortExtension}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="Opacity" Value="1" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ExtensionIsFontIcon}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Margin" Value="-1,-6,0,0" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CutState}" Value="Move">
                                <Setter Property="Opacity" Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <Style
        x:Key="UnresponsiveServerBorderStyle"
        BasedOn="{StaticResource BorderStyle}"
        TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource NoticeBorderBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DeviceConnectionPanelBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=ServerUnresponsive}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SearchBoxStyle" TargetType="controls:SearchBox">
        <Setter Property="ui:ControlHelper.PlaceholderText" Value="Filter" />
        <Setter Property="DefaultControlWidth" Value="{Binding Source={x:Static Member=models:AdbExplorerConst.DEFAULT_SEARCH_WIDTH}}" />
        <Setter Property="Icon" Value="&#xE71C;" />
        <Setter Property="IsActive" Value="{Binding ElementName=MainWin, Path=IsActive, Mode=OneWay}" />
        <Setter Property="IsEnabled" Value="{Binding Source={x:Static Member=models:Data.FileActions}, Path=HomeEnabled}" />
        <Setter Property="MaxControlWidth" Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=MaxSearchBoxWidth}" />
        <Setter Property="MinControlWidth" Value="{Binding Source={x:Static Member=models:AdbExplorerConst.MIN_SEARCH_WIDTH}}" />
        <Setter Property="Text" Value="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ExplorerFilter, Mode=TwoWay}" />
    </Style>
    <Style
        x:Key="EditorControlsBorderStyle"
        BasedOn="{StaticResource BorderStyle}"
        TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource CheckboxBorderNormal}" />
        <Setter Property="Padding" Value="1,1,0,0" />
        <Setter Property="Background" Value="{DynamicResource ContentDialogCommandBackground}" />
        <Setter Property="Margin" Value="0,0,0,-10" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="False">
                <Setter Property="Background" Value="Gray" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="BorderThickness" Value="1,1,1,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="EditorFilePathStyle"
        BasedOn="{StaticResource TooltipTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,5,6,6" />
        <Setter Property="Margin" Value="2,0,6,0" />
        <Setter Property="Text" Value="{Binding Source={x:Static Member=models:Data.FileActions}, Path=EditorAndroidPath.FullPath, Mode=OneWay}" />
    </Style>
    <Style x:Key="EditorGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="0,0,0,10" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=UseFluentStyles}" Value="False">
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MaskedTextBoxStyle" TargetType="controls:MaskedTextBox">
        <Setter Property="ValidationType" Value="None" />
        <Setter Property="ControlStyle" Value="{StaticResource NumericTextBoxStyle}" />
    </Style>
    <Style
        x:Key="EditorTextBoxStyle"
        BasedOn="{StaticResource MaskedTextBoxStyle}"
        TargetType="controls:MaskedTextBox">
        <Setter Property="Text" Value="{Binding Source={x:Static Member=models:Data.FileActions}, Path=EditorText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ControlStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource TextBoxFluentStyle}" TargetType="TextBox">
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="AcceptsReturn" Value="True" />
                    <Setter Property="FontFamily" Value="{StaticResource ConsoleFont}" />
                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsEditorTextChanged}" Value="True">
                            <Setter Property="helpers:StyleHelper.AltBorderBrush" Value="{StaticResource EditorTextChangedBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ExpanderHeaderProgressBarStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style
        x:Key="MdnsProgressBarStyle"
        BasedOn="{StaticResource ExpanderHeaderProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Setter Property="Margin" Value="0,0,0,-1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="InProgress">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Value" Value="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=Progress}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=Progress}" Value="100">
                <Setter Property="IsIndeterminate" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="NotRunning">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="Value" Value="100" />
                <Setter Property="IsIndeterminate" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsMdnsExpanderOpen}" Value="True">
                <Setter Property="Padding" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="MdnsExpanderStyle"
        BasedOn="{StaticResource FluentExpanderStyle}"
        TargetType="Expander">
        <Setter Property="IsExpanded" Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsMdnsExpanderOpen, Mode=TwoWay}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsManualPairingInProgress}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=EnableMdns}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MdnsOffPanelStyle" TargetType="ui:SimpleStackPanel">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="Disabled">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="MdnsCheckBoxStyle"
        BasedOn="{StaticResource CheckBoxStyle}"
        TargetType="CheckBox">
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock Text="mDNS">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsManualPairingInProgress}" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource SystemControlBackgroundBaseHighBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,-5" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="ToolTip" Value="Click to enable server and polling" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="InProgress">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="IsChecked" Value="{x:Null}" />
                <Setter Property="helpers:StyleHelper.ThreeStateGlyph" Value="&#xE897;" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="NotRunning">
                <Setter Property="IsChecked" Value="{x:Null}" />
                <Setter Property="helpers:StyleHelper.ThreeStateGlyph" Value="&#xE711;" />
                <Setter Property="ToolTip" Value="Server is down" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="Running">
                <Setter Property="IsChecked" Value="True" />
                <Setter Property="ToolTip" Value="Server is up and running" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DevicesPollingProgressRingStyle"
        BasedOn="{StaticResource FluentProgressRingStyle}"
        TargetType="ui:ProgressRing">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=PollDevices}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="InProgress">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsPollingStopped}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DevicesManualPollingButtonStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=PollDevices}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MdnsInProgressPanelStyle" TargetType="StackPanel">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="InProgress">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MdnsDownPanelStyle" TargetType="ui:SimpleStackPanel">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.MdnsService}, Path=State}" Value="NotRunning">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DriveViewScrollViewerStyle"
        BasedOn="{StaticResource ScrollViewerStyle}"
        TargetType="ScrollViewer">
        <Setter Property="AllowDrop" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsDriveViewVisible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ListViewStyle"
        BasedOn="{StaticResource DefaultListViewStyle}"
        TargetType="ListView">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style TargetType="controls:NavigationBox">
        <Setter Property="MenuPadding" Value="4" />
        <Setter Property="Height" Value="32" />
        <Setter Property="DisplayNames" Value="{Binding Source={x:Static Member=models:Data.CurrentDisplayNames}}" />
    </Style>
    <Style
        x:Key="LogTextBoxStyle"
        BasedOn="{StaticResource TextBoxFluentStyle}"
        TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource ConsoleFont}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <Style x:Key="LogGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundAltHighBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static models:Data.RuntimeSettings}, Path=IsLogOpen}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="EmptyFolderGridStyle" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="DataContext" Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=CurrentDevice}" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=ExplorerGrid, Path=Items.Count}" Value="0" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsExplorerVisible}" Value="True" />
                    <Condition Binding="{Binding Source={x:Static models:Data.FileActions}, Path=ListingInProgress}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static models:Data.RuntimeSettings}, Path=IsLogOpen}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding ElementName=NavigationBox, Path=Mode}" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NonRootEmptyFolderStyle" TargetType="StackPanel">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Root}" Value="Enabled">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsAppDrive}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=SearchBox, Path=IsFiltered}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="EmptyFolderAltPromptStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Root}" Value="Enabled">
                <Setter Property="Text" Value="This folder is empty." />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsAppDrive}" Value="True">
                <Setter Property="Text" Value="Unable to get list." />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=SearchBox, Path=IsFiltered}" Value="True">
                <Setter Property="Text" Value="No items match current filter." />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ListViewItemContainerStyle" TargetType="ListViewItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ItemsPanelTemplate x:Key="HorizontalListViewPanelTemplate">
        <WrapPanel
            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollContentPresenter}, Path=(FrameworkElement.ActualWidth)}"
            ItemHeight="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Path=(ListView.View).ItemHeight}"
            ItemWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Path=(ListView.View).ItemWidth}" />
    </ItemsPanelTemplate>
    <Style x:Key="SelectionBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource SelectionRectangleBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource SelectionRectangleFill}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style
        x:Key="WindowStyle"
        BasedOn="{StaticResource DefaultWindowStyle}"
        TargetType="Window">
        <Setter Property="Title" Value="{x:Static app_prop:AppGlobal.AppDisplayName}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsRootActive}" Value="True">
                <Setter Property="ui:TitleBar.Background" Value="OrangeRed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="StatusBarSeparatorStyle"
        BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
        TargetType="Separator">
        <Setter Property="Margin" Value="8,6" />
    </Style>
    <Style
        x:Key="CurrentDeviceBatterySeparatorStyle"
        BasedOn="{StaticResource StatusBarSeparatorStyle}"
        TargetType="Separator">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=CurrentDeviceBatteryIcon, Path=Visibility}" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DiskUsageSeparatorStyle"
        BasedOn="{StaticResource StatusBarSeparatorStyle}"
        TargetType="Separator">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding AndroidVersion}" Value="{x:Null}" />
                    <Condition Binding="{Binding ElementName=CurrentDeviceBatteryIcon, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="AndroidVersionRecoveryTextblockStyle"
        BasedOn="{StaticResource MarginedTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Recovery">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="UnfinishedTextblockStyle"
        BasedOn="{StaticResource MarginedTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Cursor" Value="Arrow" />
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="Cursor" Value="AppStarting" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ItemsCountStyle"
        BasedOn="{StaticResource MarginedTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding ElementName=ExplorerGrid, Path=Items.Count}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Text" Value="{Binding ElementName=DriveList, Path=ItemsSource.Count}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ItemsCountSuffixStyle"
        BasedOn="{StaticResource MarginedTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Text" Value=" items" />
        <Setter Property="Margin" Value="0,4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="1">
                <Setter Property="Text" Value=" item" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DiskUsageIconStyle" TargetType="controls:TransferIndicator">
        <Setter Property="IsUpVisible" Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsAdbReadActive}" />
        <Setter Property="IsDownVisible" Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsAdbWriteActive}" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <StackPanel>
                    <TextBlock Text="ADB Disk Usage" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Read: " />
                        <TextBlock Text="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=AdbReadRate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Write: " />
                        <TextBlock Text="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=AdbWriteRate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Other: " />
                        <TextBlock Text="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=AdbOtherRate}" />
                    </StackPanel>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="UpdatesCheckBoxStyle"
        BasedOn="{StaticResource StretchCheckBoxStyle}"
        TargetType="CheckBox">
        <Setter Property="ToolTip" Value="Checks for updates on each launch" />
        <Setter Property="IsChecked" Value="{Binding Source={x:Static models:Data.Settings}, Path=CheckForUpdates}" />
        <Setter Property="Content" Value="Check For Updates" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static models:Data.RuntimeSettings}, Path=IsAppDeployed}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SettingsAboutExpanderStyle"
        BasedOn="{StaticResource FluentExpanderStyle}"
        TargetType="Expander">
        <Setter Property="Header" Value="About" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=SortedView}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ExtendedViewFileOpExpanderStyle"
        BasedOn="{StaticResource FluentExpanderStyle}"
        TargetType="Expander">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static models:Data.Settings}, Path=EnableCompactView}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsOperationsViewOpen}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsExpanded" Value="True" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=IsDetailedPeekMode}" Value="True">
                <Setter Property="IsExpanded" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DragBackgroundStyle" TargetType="Border">
        <Style.Triggers>
            <Trigger Property="Background" Value="White">
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Black" />
    </Style>
    <Style
        x:Key="FileNameEditingElementStyle"
        BasedOn="{StaticResource TextBoxFluentStyle}"
        TargetType="TextBox">
        <Setter Property="Text" Value="{Binding DisplayName, Mode=OneWay}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsRtlName}" Value="True">
                <Setter Property="FlowDirection" Value="RightToLeft" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Grid
        x:Key="FileTransferGrid"
        Width="400"
        Height="100"
        VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <ui:ProgressBar
            Maximum="100"
            Style="{StaticResource FluentProgressBarStyle}"
            Value="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=TransferProgress}" />
        <TextBlock
            Grid.Row="1"
            Text="{Binding Source={x:Static Member=models:Data.RuntimeSettings}, Path=CurrentTransferFile}"
            TextWrapping="Wrap" />
    </Grid>
</ResourceDictionary>
