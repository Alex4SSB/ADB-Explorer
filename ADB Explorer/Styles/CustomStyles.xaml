<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ADB_Explorer.Converters"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:services="clr-namespace:ADB_Explorer.Services"
    xmlns:ui="http://schemas.modernwpf.com/2019">
    <converters:CompletedStatsConverter x:Key="CompletedStatsConverter" />
    <converters:EnumToBooleanConverter x:Key="ThemeConverter" EnumType="models:AppTheme" />
    <converters:DoubleEquals x:Key="DoubleEquals" />
    <converters:TrimmedTooltipConverter x:Key="TrimmedTooltip" />
    <FontFamily x:Key="ConsoleFont">Cascadia Mono, Consolas</FontFamily>
    <Style x:Key="FluentProgressBarStyle" TargetType="ui:ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FluentProgressRingStyle" TargetType="ui:ProgressRing">
        <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceHeaderIcon"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DriveForegroundPressed}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceStatusFontSizeStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="ToolTip" Value="{Binding Tooltip}" />
    </Style>
    <Style
        x:Key="DeviceStatusIconStyle"
        BasedOn="{StaticResource DeviceStatusFontSizeStyle}"
        TargetType="ui:FontIcon">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Glyph" Value="&#xEBFE;" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Status}" Value="Offline">
                <Setter Property="Glyph" Value="&#xEBFD;" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RemoveDeviceButtonStyle"
        BasedOn="{StaticResource DisabledButtonTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Text" Value="Remove" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="Text" Value="Kill" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuStyle" TargetType="Menu">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style
        x:Key="FileOpProgressStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Style.Triggers>
            <DataTrigger Binding="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" Value="{x:Null}">
                <Setter Property="IsIndeterminate" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NumericTextBoxStyle"
        BasedOn="{StaticResource TextBoxFluentStyle}"
        TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="FontFamily" Value="Segoe UI" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="{StaticResource ConsoleFont}" />
    </Style>
    <Style
        x:Key="PairingTextBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="ui:TextBoxHelper.HasText" Value="True">
                <Setter Property="FontSize" Value="18" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="TrimmedTextTooltipStyle"
        BasedOn="{StaticResource DefaultToolTipStyle}"
        TargetType="ToolTip">
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget, Converter={StaticResource TrimmedTooltip}}" />
    </Style>
    <Style
        x:Key="TooltipTextBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
        <Style.Resources>
            <Style BasedOn="{StaticResource TrimmedTextTooltipStyle}" TargetType="ToolTip" />
        </Style.Resources>
    </Style>
    <Style x:Key="TooltipTextBlockStyle" TargetType="TextBlock">
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
        <Style.Resources>
            <Style BasedOn="{StaticResource TrimmedTextTooltipStyle}" TargetType="ToolTip" />
        </Style.Resources>
    </Style>
    <Style
        x:Key="ExplorerGridCellStyle"
        BasedOn="{StaticResource TooltipTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Margin" Value="4,0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="Opacity" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CutState}" Value="Cut">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CutState}" Value="Copy">
                <Setter Property="Foreground" Value="{DynamicResource SystemControlBackgroundAccentBrush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding CutState}" Value="Copy" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True" />
                    <Condition Binding="{Binding CutState}" Value="Copy" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceButtonStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMdns}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Visible" />
    </Style>
    <Style
        x:Key="DeviceBrowseButtonStyle"
        BasedOn="{StaticResource DeviceButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Offline">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Unauthorized">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="IsEnabled" Value="True" />
    </Style>
    <Style
        x:Key="DeviceRemoveButtonStyle"
        BasedOn="{StaticResource DeviceButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Type}" Value="Remote">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="IsEnabled" Value="False" />
    </Style>
    <Style
        x:Key="DeviceNameTextBlockStyle"
        BasedOn="{StaticResource TooltipTextBlockStyle}"
        TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Unauthorized">
                <Setter Property="Text" Value="[Unauthorized]" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="Text" Value="{Binding Device.ID}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Type}" Value="Service" />
                    <Condition Binding="{Binding IsMdns}" Value="False" />
                    <Condition Binding="{Binding Name}" Value="" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="[Service]" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding IsMdns}" Value="True">
                <Setter Property="Text" Value="{Binding Device.IpAddress}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DriveForegroundPressed}" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Text" Value="{Binding Name}" />
    </Style>
    <ResourceDictionary x:Key="ContextMenuStyles">
        <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem" />
        <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
        </Style>
    </ResourceDictionary>
    <ResourceDictionary x:Key="ContextSubMenuStyles">
        <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem" />
        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock" />
        <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
            <Setter Property="Margin" Value="0,-6" />
        </Style>
    </ResourceDictionary>
    <ResourceDictionary x:Key="TopMenuStyles">
        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="0,2" />
        </Style>
        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
            <Setter Property="Margin" Value="6,0,0,0" />
        </Style>
    </ResourceDictionary>
    <ResourceDictionary x:Key="DeviceMenuStyles">
        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
        </Style>
        <Style BasedOn="{StaticResource MenuStyle}" TargetType="Menu">
            <Setter Property="Height" Value="30" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                    <Setter Property="Height" Value="32" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
            <Setter Property="Height" Value="30" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                    <Setter Property="Height" Value="32" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </ResourceDictionary>
    <ContextMenu x:Key="FileOpHeaderContextMenu" Resources="{StaticResource ContextSubMenuStyles}">
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextOpTypeCheckBox"
                    Content="Operation Type"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextFileNameCheckBox"
                    Content="File Name"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextProgressCheckBox"
                    Content="Progress"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextSourceCheckBox"
                    Content="Source"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox
                    x:Name="FileOpContextDestCheckBox"
                    Content="Destination"
                    IsChecked="True" />
            </MenuItem.Header>
        </MenuItem>
    </ContextMenu>
    <DataTemplate x:Key="FileOpFileNameTemplate">
        <Grid Margin="4,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ui:FontIcon
                Margin="0,0,4,0"
                FontSize="16"
                Glyph="&#xE8b7;">
                <ui:FontIcon.Style>
                    <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FilePath.IsDirectory}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:FontIcon.Style>
            </ui:FontIcon>
            <TextBlock Grid.Column="1" TextTrimming="CharacterEllipsis">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource TooltipTextBlockStyle}" TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding FilePath.NoExtName}" />
                        <Setter Property="FontWeight" Value="Regular" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtensions}" Value="True">
                                <Setter Property="Text" Value="{Binding FilePath.FullName}" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding OperationName}" Value="Install" />
                                    <Condition Binding="{Binding FilePath}" Value="{x:Null}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Text" Value="{Binding PackageName}" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="InProgress">
                                <Setter Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock
                Grid.Row="1"
                Margin="0,-3,0,0"
                HorizontalAlignment="Center"
                FontSize="16"
                Text="└">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FilePath.IsDirectory}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Completed">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding StatusInfo.CurrentFileName}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Visible" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock
                Grid.Row="1"
                Grid.Column="1"
                TextTrimming="CharacterEllipsis">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource TooltipTextBlockStyle}" TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="{Binding StatusInfo.CurrentFileNameWithoutExtension}" />
                        <Setter Property="FontWeight" Value="Regular" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ShowExtensionsCheckBox, Path=IsChecked}" Value="False">
                                <Setter Property="Text" Value="{Binding StatusInfo.CurrentFileName}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding StatusInfo.CurrentFileName}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FilePath.IsDirectory}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Completed">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="InProgress">
                                <Setter Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="FileOpSourcePathTemplate">
        <TextBlock Margin="4,0" TextTrimming="CharacterEllipsis">
            <TextBlock.Style>
                <Style BasedOn="{StaticResource TooltipTextBlockStyle}" TargetType="TextBlock">
                    <Setter Property="FontWeight" Value="Regular" />
                    <Setter Property="Text" Value="{Binding FilePath.ParentPath}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="InProgress">
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FilePath.ParentPath}" Value="{x:Static Member=models:AdbExplorerConst.RECYCLE_PATH}">
                            <Setter Property="Text" Value="Recycle Bin" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="FileOpTargetPathTemplate">
        <TextBlock Margin="4,0" TextTrimming="CharacterEllipsis">
            <TextBlock.Style>
                <Style BasedOn="{StaticResource TooltipTextBlockStyle}" TargetType="TextBlock">
                    <Setter Property="FontWeight" Value="Regular" />
                    <Setter Property="Text" Value="{Binding TargetPath.FullPath}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="InProgress">
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OperationName}" Value="Delete">
                            <Setter Property="Text" Value="Permanent Deletion" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OperationName}" Value="Recycle">
                            <Setter Property="Text" Value="Recycle Bin" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>
    <Style
        x:Key="CompletedOperationsProgressStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleEquals}, ConverterParameter=100, Path=Value}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource RedStripedBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="FileOpProgressTemplate">
        <Grid Margin="4,0">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontWeight" Value="Bold" />
                    </Style>
                </Grid.Resources>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="InProgress">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ui:ProgressBar Style="{StaticResource FileOpProgressStyle}" Value="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" />
                <ui:ProgressBar Grid.Row="1" Value="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}">
                    <ui:ProgressBar.Style>
                        <Style BasedOn="{StaticResource FluentProgressBarStyle}" TargetType="ui:ProgressBar">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Visible" />
                        </Style>
                    </ui:ProgressBar.Style>
                </ui:ProgressBar>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Visible" />
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Margin="4,0,0,0" Text="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" />
                    <TextBlock Text="%" />
                </StackPanel>
                <StackPanel
                    Grid.Row="1"
                    Grid.Column="1"
                    Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Visible" />
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Margin="4,0,0,0" Text="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" />
                    <TextBlock Text="%" />
                </StackPanel>
            </Grid>
            <Grid>
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CompletedStatsVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusInfo.FileCountCompletedString}" Value="0 of 0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ui:ProgressBar Style="{StaticResource CompletedOperationsProgressStyle}" Value="{Binding StatusInfo.FileCountCompletedRate, Mode=OneWay}" />
                        <TextBlock
                            Grid.Column="1"
                            Margin="4,0"
                            Text="{Binding StatusInfo.FileCountCompletedString}"
                            TextTrimming="CharacterEllipsis" />
                    </Grid>
                    <TextBlock
                        Grid.Row="1"
                        Text="{Binding StatusInfo, Converter={StaticResource CompletedStatsConverter}}"
                        TextTrimming="CharacterEllipsis" />
                </Grid>
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FinishedIconVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Status}" Value="Completed" />
                                        <Condition Binding="{Binding StatusInfo.FileCountCompletedString}" Value="0 of 0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </Grid.Style>
                    <ui:SimpleStackPanel Orientation="Horizontal" Spacing="4">
                        <ui:FontIcon Glyph="&#xF13D;">
                            <ui:FontIcon.Style>
                                <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="Completed">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:FontIcon.Style>
                        </ui:FontIcon>
                        <ui:FontIcon Glyph="&#xF13E;">
                            <ui:FontIcon.Style>
                                <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="Completed">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:FontIcon.Style>
                        </ui:FontIcon>
                        <TextBlock Text="{Binding Status}" />
                    </ui:SimpleStackPanel>
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="OperationIconTemplate">
        <Grid Margin="0,0,6,0">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
                    <Setter Property="ToolTip" Value="{Binding OperationName}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding OperationName}" Value="Install">
                            <Setter Property="ToolTip" Value="Uninstall" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding OperationName}" Value="Install" />
                                <Condition Binding="{Binding PackageName}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ToolTip" Value="Install" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <ui:FontIcon>
                <ui:FontIcon.Style>
                    <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                        <Setter Property="Glyph" Value="{Binding OpIcon.PrimaryIcon}" />
                        <Setter Property="HorizontalAlignment" Value="{Binding OpIcon.PrimaryAlignment}" />
                    </Style>
                </ui:FontIcon.Style>
            </ui:FontIcon>
            <ui:FontIcon>
                <ui:FontIcon.Style>
                    <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                        <Setter Property="Glyph" Value="{Binding OpIcon.SecondaryIcon}" />
                        <Setter Property="Margin" Value="{Binding OpIcon.SecondaryMargin}" />
                        <Setter Property="FontSize" Value="{Binding OpIcon.SecondarySize}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OperationName}" Value="Install">
                                <Setter Property="Glyph" Value="&#xECC9;" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding OperationName}" Value="Install" />
                                    <Condition Binding="{Binding PackageName}" Value="{x:Null}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Glyph" Value="&#xE896;" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:FontIcon.Style>
            </ui:FontIcon>
        </Grid>
    </DataTemplate>
    <Style x:Key="BaseRowStyle" TargetType="DataGridRow">
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Border
                        x:Name="RowBorder"
                        HorizontalAlignment="Left"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="True">
                        <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverBackground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedBackground}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=IsActive}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectedInactiveBackground}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=IsActive}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectedMouseOverInactiveBackground}" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="ui:ControlHelper.CornerRadius" Value="2" />
                <Setter Property="Margin" Value="3,0,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BaseCellStyle" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Margin="0" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExplorerViewBackgroundStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
    </Style>
    <Style x:Key="SeparatorStyle" TargetType="Separator">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="Height" Value="0" />
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExpanderSeparatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource DeviceConnectionPanelBorder}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="False">
                <Setter Property="Height" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceOpenIconStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style x:Key="DeviceStatusGridStyle" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Status}" Value="Online">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ForceFluentVisibility"
        BasedOn="{StaticResource CheckBoxStyle}"
        TargetType="CheckBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=IsWin11}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RestartAppButtonStyle"
        BasedOn="{StaticResource AccentButtonStyle}"
        TargetType="Button">
        <Style.Resources>
            <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Glyph" Value="&#xE72C;" />
            </Style>
        </Style.Resources>
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="ToolTip" Value="Restart app for changes to take effect" />
    </Style>
    <Style x:Key="QrBackgroundStyle" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="CornerRadius" Value="0,0,5,5" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Background" Value="#FFFBFBFB" />
        <Setter Property="Margin" Value="0,12,0,0" />
    </Style>
    <Style
        x:Key="RootIconStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Root}" Value="Disabled">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                <Setter Property="ToolTip" Value="Root Can Be Enabled" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Root}" Value="Enabled">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="ToolTip" Value="Root Access Enabled" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style
        x:Key="OperationsIconStyle"
        BasedOn="{StaticResource DisabledGlyphStyle}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=FileOpRing, Path=Visibility}" Value="Visible">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style
        x:Key="OperationsProgressRingStyle"
        BasedOn="{StaticResource FluentProgressRingStyle}"
        TargetType="ui:ProgressRing">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=UpperProgressBar, Path=IsIndeterminate}" Value="False" />
                    <Condition Binding="{Binding AnyFailedOperations}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding ElementName=UpperProgressBar, Path=Visibility}" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=CurrentOperationDataGrid, Path=Items.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="UpperProgressBarStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="IsIndeterminate" Value="False" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Setter Property="ToolTip" Value="{Binding StringProgress}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AnyFailedOperations}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="#FFFF99A4" />
                <Setter Property="ToolTip" Value="Some operations have failed" />
            </DataTrigger>
            <Trigger Property="Value" Value="0">
                <Setter Property="IsIndeterminate" Value="True" />
            </Trigger>
            <DataTrigger Binding="{Binding Progress}" Value="{x:Null}">
                <Setter Property="IsIndeterminate" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DirectoryLoadingProgressStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=PathBox, Path=IsFocused}" Value="True">
                <Setter Property="IsIndeterminate" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=PathBox, Path=IsEnabled}" Value="False">
                <Setter Property="CornerRadius" Value="4" />
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="False">
                <Setter Property="CornerRadius" Value="0" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="CornerRadius" Value="4,4,2,2" />
        <Setter Property="Margin" Value="0,0,0,1" />
    </Style>
    <Style
        x:Key="DriveItemStyle"
        BasedOn="{StaticResource DriveButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <Trigger Property="helpers:RepeaterHelper.IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource AdbButtonBackgroundMouseOver}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="helpers:RepeaterHelper.IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DriveUsageBarStyle"
        BasedOn="{StaticResource FluentProgressBarStyle}"
        TargetType="ui:ProgressBar">
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding UsageP}" />
                    <TextBlock Text="% Used" />
                </StackPanel>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding UsageWarning}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RedStripedBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DriveIconStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Unknown">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DriveNameTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="ItemsCountStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding ElementName=ExplorerGrid, Path=Items.Count}" />
        <Setter Property="Margin" Value="0,4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Text" Value="{Binding ElementName=DrivesItemRepeater, Path=ItemsSource.Count}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ItemsCountStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="0">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SelectedItemsStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding ElementName=ExplorerGrid, Path=SelectedItems.Count}" />
        <Setter Property="Margin" Value="0,4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Text" Value="{Binding ElementName=DrivesItemRepeater, Path=(helpers:RepeaterHelper.SelectedItems)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="">
                <Setter Property="Text" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TotalSizeStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=TotalSizeBlock, Path=Text}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="FileOpButtonStyle"
        BasedOn="{StaticResource AdbMenuItemStyle}"
        TargetType="MenuItem">
        <Setter Property="helpers:RemoteToggle.IsTargetVisible" Value="False" />
        <Setter Property="helpers:StyleHelper.ContentAnimation" Value="RotateCW" />
        <Style.Triggers>
            <Trigger Property="helpers:RemoteToggle.IsTargetVisible" Value="False">
                <Setter Property="helpers:StyleHelper.ContentAnimation" Value="RotateCCW" />
            </Trigger>
            <DataTrigger Binding="{Binding ElementName=FileOpRing, Path=Visibility}" Value="Visible">
                <Setter Property="helpers:StyleHelper.ContentAnimation" Value="None" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Storyboard x:Key="PulsatingBackgroundStoryboard" RepeatBehavior="3x">
        <ColorAnimation
            AutoReverse="True"
            Storyboard.TargetName="OpenDevicesButton"
            Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
            From="#00000000"
            To="Gray"
            Duration="00:00:00.15" />
    </Storyboard>
    <Style
        x:Key="StopFileOpMenuStyle"
        BasedOn="{StaticResource MenuStyle}"
        TargetType="Menu">
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="DataContext" Value="{Binding ElementName=UpperProgressBar, Path=DataContext}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasIncompleteOperations, NotifyOnTargetUpdated=True}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="BatteryIconStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Setter Property="Glyph" Value="{Binding Device.Battery.BatteryIcon}" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <Grid>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Device.Battery.ChargeState}" Value="Unknown">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="{Binding Device.Battery.Level}" />
                        <TextBlock Text="%" />
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Device.Battery.ChargeState}" Value="Charging">
                                            <Setter Property="Text" Value=", Plugged In" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                    <TextBlock Text="Battery Status Unknown">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Device.Battery.ChargeState}" Value="Unknown">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=PollBattery}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceDetailsBatteryStyle"
        BasedOn="{StaticResource BatteryIconStyle}"
        TargetType="ui:FontIcon">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="Text" Value="">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ui:SimpleStackPanel Spacing="4">
                    <TextBlock Text="{Binding Device.Battery.BatteryState}" />
                    <TextBlock Text="{Binding Device.Battery.BatteryHealthString}" />
                    <TextBlock Text="{Binding Device.Battery.VoltageString}" />
                    <TextBlock Text="{Binding Device.Battery.CurrentConsumption}" />
                    <TextBlock Text="{Binding Device.Battery.TemperatureString}" />
                </ui:SimpleStackPanel>
            </Setter.Value>
        </Setter>

        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <Trigger Property="DataContext" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=PollBattery}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="UnsupportedIconStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AndroidVersionIncompatible}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AndroidTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Margin" Value="0,4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AndroidVersion}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DeviceDetailsBatteryPercentStyle" TargetType="StackPanel">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Battery.Level}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=PollBattery}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultToolTipStyle}" TargetType="ToolTip">
        <Setter Property="ToolTipService.InitialShowDelay" Value="400" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="False">
                <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RecoveryRootStatusStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Type}" Value="Sideload">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SpecialDriveAccent" TargetType="Border">
        <Setter Property="Margin" Value="-9,0,-9,-3" />
        <Setter Property="BorderBrush" Value="OrangeRed" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Trash">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Temp">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Package">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="BorderBrush" Value="ForestGreen" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="CornerRadius" Value="4" />
                <Setter Property="BorderThickness" Value="0,0,0,2" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ContextMenuSeparatorStyle" TargetType="Separator">
        <Setter Property="Margin" Value="-18,4,12,4" />
        <Setter Property="Background" Value="{DynamicResource SeparatorForeground}" />
    </Style>
    <Style
        x:Key="Separator1Style"
        BasedOn="{StaticResource ContextMenuSeparatorStyle}"
        TargetType="Separator">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ContextPushEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PullEnabled}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Separator2Style"
        BasedOn="{StaticResource ContextMenuSeparatorStyle}"
        TargetType="Separator">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ContextNewEnabled}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CutEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ContextPasteEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RenameEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyPathEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=UninstallPackageEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RestoreEnabled}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Separator3Style"
        BasedOn="{StaticResource ContextMenuSeparatorStyle}"
        TargetType="Separator">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PackageActionsEnabled}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Separator4Style"
        BasedOn="{StaticResource ContextMenuSeparatorStyle}"
        TargetType="Separator">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CutEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ContextPasteEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RenameEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyPathEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=UninstallPackageEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RestoreEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PackageActionsEnabled}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=DeleteEnabled}" Value="False" />
                    <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ContextPushPackagesEnabled}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RightHorizontalItemsControlStyle" TargetType="ItemsControl">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel FlowDirection="RightToLeft" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StretchListViewItem" TargetType="ListViewItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollContentPresenter}, Path=ActualWidth}">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="ResetButtonTemplate" DataType="services:ResetButton">
        <Button Command="{Binding Command}" Style="{StaticResource RestartAppButtonStyle}">
            <ui:FontIcon />
        </Button>
    </DataTemplate>
    <DataTemplate x:Key="AnimationTipButtonTemplate" DataType="services:ResetButton">
        <Button
            Command="{Binding Command}"
            Style="{StaticResource RestartAppButtonStyle}"
            ToolTip="More Info">
            <ui:FontIcon Glyph="&#xE82F;" />
        </Button>
    </DataTemplate>
    <DataTemplate x:Key="ClearTextButtonTemplate" DataType="services:ResetButton">
        <Button
            Command="{Binding Command}"
            Style="{StaticResource RestartAppButtonStyle}"
            ToolTip="Clear">
            <ui:FontIcon Glyph="&#xE711;" />
        </Button>
    </DataTemplate>
    <DataTemplate x:Key="ChangeTextButtonTemplate" DataType="services:ResetButton">
        <Button
            Command="{Binding Command}"
            Style="{StaticResource RestartAppButtonStyle}"
            ToolTip="Change">
            <ui:FontIcon Glyph="&#xE70F;" />
        </Button>
    </DataTemplate>
    <helpers:ActionButtonTemplateSelector
        x:Key="ActionButtonTemplateSelector"
        AnimationTipSettingTemplate="{StaticResource AnimationTipButtonTemplate}"
        ChangeSettingTemplate="{StaticResource ChangeTextButtonTemplate}"
        ClearTextSettingTemplate="{StaticResource ClearTextButtonTemplate}"
        ResetSettingTemplate="{StaticResource ResetButtonTemplate}" />
    <DataTemplate x:Key="BoolSettingTemplate" DataType="services:BoolSetting">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <CheckBox IsEnabled="{Binding IsEnabled}" Visibility="{Binding Visibility}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding Description}" />
                    <StackPanel
                        Grid.Row="1"
                        Margin="0,-2,0,-10"
                        Opacity="0.7"
                        Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=CheckBox}, Path=IsMouseOver}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock FontSize="10" Text="→ " />
                        <TextBlock FontSize="10" Text="{Binding GroupName}" />
                    </StackPanel>
                </Grid>
                <CheckBox.Style>
                    <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="IsChecked" Value="False" />
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="IsChecked" Value="{Binding Value, Mode=TwoWay}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>
            <ItemsControl
                Grid.Column="1"
                ItemTemplateSelector="{StaticResource ActionButtonTemplateSelector}"
                ItemsSource="{Binding Commands}"
                Style="{StaticResource RightHorizontalItemsControlStyle}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="StringSettingTemplate" DataType="services:StringSetting">
        <Grid Margin="0,6,0,10" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Column="1" Margin="0,0,0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="28" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Width="20" HorizontalAlignment="Left">
                    <TextBlock
                        Margin="0,-5,0,-10"
                        HorizontalAlignment="Center"
                        FontSize="20"
                        Text="•">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight2Brush}" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark1Brush}" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <TextBlock Grid.Column="1" Text="{Binding Description}" />
                <ItemsControl
                    Grid.Column="2"
                    ItemTemplateSelector="{StaticResource ActionButtonTemplateSelector}"
                    ItemsSource="{Binding Commands}"
                    Style="{StaticResource RightHorizontalItemsControlStyle}" />
            </Grid>
            <Grid Grid.Row="1">
                <TextBox
                    HorizontalAlignment="Stretch"
                    VerticalContentAlignment="Center"
                    ui:ControlHelper.PlaceholderText="[not set]"
                    IsReadOnly="True"
                    Style="{StaticResource TooltipTextBoxStyle}"
                    Text="{Binding Value}" />
                <StackPanel
                    Margin="28,0,0,-12"
                    VerticalAlignment="Bottom"
                    Opacity="0.7"
                    Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=IsMouseOver}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock FontSize="10" Text="→ " />
                    <TextBlock FontSize="10" Text="{Binding GroupName}" />
                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="EnumRadioButtonTemplate" DataType="services:EnumRadioButton">
        <RadioButton
            Content="{Binding Name}"
            GroupName="{Binding Group}"
            IsChecked="{Binding IsChecked, Mode=TwoWay}" />
    </DataTemplate>
    <DataTemplate x:Key="GropuedEnumSettingTemplate" DataType="services:EnumSetting">
        <ListView
            ItemContainerStyle="{StaticResource StretchListViewItem}"
            ItemTemplate="{StaticResource EnumRadioButtonTemplate}"
            ItemsSource="{Binding Buttons}" />
    </DataTemplate>
    <DataTemplate x:Key="SortedEnumSettingTemplate" DataType="services:EnumSetting">
        <Expander
            Margin="0,4,0,0"
            Header="{Binding Description}"
            IsExpanded="{Binding IsExpanded, Mode=TwoWay}">
            <ListView
                ItemContainerStyle="{StaticResource StretchListViewItem}"
                ItemTemplate="{StaticResource EnumRadioButtonTemplate}"
                ItemsSource="{Binding Buttons}" />
        </Expander>
    </DataTemplate>
    <helpers:SettingsTemplateSelector
        x:Key="GroupedSettingsTemplateSelector"
        BoolSettingTemplate="{StaticResource BoolSettingTemplate}"
        EnumSettingTemplate="{StaticResource GropuedEnumSettingTemplate}"
        StringSettingTemplate="{StaticResource StringSettingTemplate}" />
    <helpers:SettingsTemplateSelector
        x:Key="SortedSettingsTemplateSelector"
        BoolSettingTemplate="{StaticResource BoolSettingTemplate}"
        EnumSettingTemplate="{StaticResource SortedEnumSettingTemplate}"
        StringSettingTemplate="{StaticResource StringSettingTemplate}" />
    <Style
        x:Key="SettingsGroupContainer"
        BasedOn="{StaticResource StretchListViewItem}"
        TargetType="ListViewItem">
        <Setter Property="Margin" Value="0,3" />
    </Style>
    <Style
        x:Key="SortedListViewItem"
        BasedOn="{StaticResource StretchListViewItem}"
        TargetType="ListViewItem">
        <Setter Property="Margin" Value="0,-4,0,4" />
    </Style>
    <Style
        x:Key="SortedSettingsListView"
        BasedOn="{StaticResource DefaultListViewStyle}"
        TargetType="ListView">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource SortedSettingsTemplateSelector}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SortedListViewItem}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=SortedView}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="SettingsExpanderTemplate" DataType="services:SettingsGroup">
        <Expander Header="{Binding Name}" IsExpanded="{Binding IsExpanded, Mode=TwoWay}">
            <ListView
                ItemContainerStyle="{StaticResource StretchListViewItem}"
                ItemTemplateSelector="{StaticResource GroupedSettingsTemplateSelector}"
                ItemsSource="{Binding Children}" />
        </Expander>
    </DataTemplate>
    <DataTemplate x:Key="SettingsSeparatorTemplate" DataType="services:SettingsSeparator">
        <Separator />
    </DataTemplate>
    <helpers:SettingsGroupTemplateSelector
        x:Key="SettingsGroupTemplateSelector"
        SettingsGroupTemplate="{StaticResource SettingsExpanderTemplate}"
        SettingsSeparatorTemplate="{StaticResource SettingsSeparatorTemplate}" />
    <Style
        x:Key="GroupSettingsListView"
        BasedOn="{StaticResource DefaultListViewStyle}"
        TargetType="ListView">
        <Setter Property="ItemContainerStyle" Value="{StaticResource SettingsGroupContainer}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource SettingsGroupTemplateSelector}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=SortedView}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SettingsToggleStyle"
        BasedOn="{StaticResource ToggleButtonStyle}"
        TargetType="ToggleButton">
        <Setter Property="TextElement.FontSize" Value="20" />
        <Setter Property="TextElement.FontFamily" Value="Segoe MDL2 Assets" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="TextElement.FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SortedSettingsButtonStyle"
        BasedOn="{StaticResource SettingsToggleStyle}"
        TargetType="ToggleButton">
        <Setter Property="IsChecked" Value="{Binding Source={x:Static Member=models:Data.Settings}, Path=SortedView, Mode=TwoWay}" />
        <Setter Property="ToolTip" Value="Search View" />
        <Setter Property="Content" Value="&#xE721;" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="&#xE711;" />
                <Setter Property="ToolTip" Value="Exit Search" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ExpandGroupsButtonStyle"
        BasedOn="{StaticResource SettingsToggleStyle}"
        TargetType="ToggleButton">
        <Setter Property="IsChecked" Value="{Binding Source={x:Static Member=models:Data.Settings}, Path=GroupsExpanded, Mode=TwoWay}" />
        <Setter Property="ToolTip" Value="Expand All" />
        <Setter Property="Content" Value="&#xE169;" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="&#xE16A;" />
                <Setter Property="ToolTip" Value="Collapse All" />
            </Trigger>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=SortedView}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="FileIconTemplate">
        <Grid>
            <Image
                Width="16"
                Margin="0,1,0,0"
                RenderOptions.BitmapScalingMode="HighQuality"
                Source="{Binding Icon}">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="Opacity" Value="1" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ExtensionIsGlyph}" Value="False" />
                                    <Condition Binding="{Binding ExtensionIsFontIcon}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding CutState}" Value="Cut">
                                <Setter Property="Opacity" Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <TextBlock
                HorizontalAlignment="Center"
                FontSize="16"
                Text="{Binding ShortExtension}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="Opacity" Value="1" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ExtensionIsFontIcon}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Margin" Value="-1,-6,0,0" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CutState}" Value="Cut">
                                <Setter Property="Opacity" Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <Style
        x:Key="UnresponsiveServerBorderStyle"
        BasedOn="{StaticResource BorderStyle}"
        TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource NoticeBorderBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DeviceConnectionPanelBorder}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
</ResourceDictionary>
