<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ADB_Explorer.Converters"
    xmlns:ui="http://schemas.modernwpf.com/2019">
    <converters:CompletedStatsConverter x:Key="CompletedStatsConverter" />
    <Style x:Key="GlyphFont" TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="FontFamily" Value="Segoe Fluent Icons, Segoe MDL2 Assets" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
    </Style>
    <Style
        x:Key="DisabledGlyphStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DisabledButtonGlyphStyle"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FocusVisualRoundedStyle" BasedOn="{StaticResource HighVisibilityFocusVisual}">
        <Setter Property="Control.Template">
            <!--  Template copied from ModernWPF to be modified  -->
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        BorderBrush="{TemplateBinding ui:FocusVisualHelper.FocusVisualPrimaryBrush}"
                        BorderThickness="{TemplateBinding ui:FocusVisualHelper.FocusVisualPrimaryThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <Border
                            BorderBrush="{TemplateBinding ui:FocusVisualHelper.FocusVisualSecondaryBrush}"
                            BorderThickness="{TemplateBinding ui:FocusVisualHelper.FocusVisualSecondaryThickness}"
                            CornerRadius="5" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderStyle" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="CornerRadius" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style x:Key="DevicesListStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource DevicesListBackground}" />
    </Style>
    <Style
        x:Key="DeviceBorderStyle"
        BasedOn="{StaticResource BorderStyle}"
        TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource DeviceConnectionPanelBorder}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource DeviceConnectionPanelBorder}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style x:Key="DisabledTextBlockStyle" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DisabledButtonTextBlockStyle" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceHeaderIcon"
        BasedOn="{StaticResource GlyphFont}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceStatusFontSizeStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Setter Property="FontSize" Value="28" />
    </Style>
    <Style
        x:Key="DeviceStatusIconStyle"
        BasedOn="{StaticResource DeviceStatusFontSizeStyle}"
        TargetType="ui:FontIcon">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Glyph" Value="&#xEBFE;" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Status}" Value="Offline">
                <Setter Property="Glyph" Value="&#xEBFD;" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RemoveDeviceButtonStyle"
        BasedOn="{StaticResource DisabledButtonTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Text" Value="Remove" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="Text" Value="Kill" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuStyle" TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeMediumLowBrush}" />
    </Style>
    <Style x:Key="FileOpProgressStyle" TargetType="ui:ProgressBar">
        <Style.Triggers>
            <DataTrigger Binding="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" Value="{x:Null}">
                <Setter Property="IsIndeterminate" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NumericTextBoxStyle"
        BasedOn="{StaticResource TextBoxFluentStyle}"
        TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="FontFamily" Value="Segoe UI" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="Consolas" />
    </Style>
    <Style
        x:Key="PairingTextBoxStyle"
        BasedOn="{StaticResource NumericTextBoxStyle}"
        TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="ui:TextBoxHelper.HasText" Value="True">
                <Setter Property="FontSize" Value="18" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceButtonStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMdns}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Visible" />
    </Style>
    <Style
        x:Key="DeviceBrowseButtonStyle"
        BasedOn="{StaticResource DeviceButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Offline">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Unauthorized">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="IsEnabled" Value="True" />
    </Style>
    <Style
        x:Key="DeviceRemoveButtonStyle"
        BasedOn="{StaticResource DeviceButtonStyle}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Type}" Value="Remote">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="IsEnabled" Value="False" />
    </Style>
    <Style x:Key="DeviceNameTextBlockStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Status}" Value="Unauthorized">
                <Setter Property="Text" Value="[Unauthorized]" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Type}" Value="Emulator">
                <Setter Property="Text" Value="{Binding ID}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Type}" Value="Service" />
                    <Condition Binding="{Binding IsMdns}" Value="False" />
                    <Condition Binding="{Binding Name}" Value="" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="[Service]" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding IsMdns}" Value="True">
                <Setter Property="Text" Value="{Binding Device.IpAddress}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Text" Value="{Binding Name}" />
    </Style>
    <ResourceDictionary x:Key="ContextMenuStyles">
        <Style TargetType="MenuItem">
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="6,0" />
        </Style>
        <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
            <Setter Property="Margin" Value="0,0,6,0" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
        </Style>
    </ResourceDictionary>
    <ResourceDictionary x:Key="ContextSubMenuStyles">
        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
            <Setter Property="Margin" Value="6,0,0,0" />
        </Style>
    </ResourceDictionary>
    <ContextMenu x:Key="RowContextMenu" Resources="{StaticResource ContextMenuStyles}" />
    <ContextMenu
        x:Key="PathButtonsMenu"
        Name="PathButtonsMenu"
        Resources="{StaticResource ContextMenuStyles}" />
    <ContextMenu x:Key="FileOpHeaderContextMenu" Resources="{StaticResource ContextMenuStyles}">
        <MenuItem>
            <MenuItem.Header>
                <CheckBox Content="Operation Type" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox Content="File Name" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Header>
                <CheckBox Content="Progress" />
            </MenuItem.Header>
        </MenuItem>
    </ContextMenu>
    <DataTemplate x:Key="StatusIconTemplate">
        <ui:FontIcon>
            <ui:FontIcon.Style>
                <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Completed">
                            <Setter Property="Glyph" Value="&#xF13E;" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Failed">
                            <Setter Property="Glyph" Value="&#xF13D;" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ui:FontIcon.Style>
        </ui:FontIcon>
    </DataTemplate>
    <DataTemplate x:Key="FileOpFileNameTemplate">
        <Grid Margin="4,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ui:FontIcon
                Margin="0,0,4,0"
                FontSize="16"
                Glyph="&#xE8b7;">
                <ui:FontIcon.Style>
                    <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FilePath.IsDirectory}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:FontIcon.Style>
            </ui:FontIcon>
            <TextBlock Grid.Column="1" TextTrimming="CharacterEllipsis">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ShowExtensionsCheckBox, Path=IsChecked}" Value="True">
                                <Setter Property="Text" Value="{Binding FilePath.FullName}" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Text" Value="{Binding FilePath.NoExtName}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock
                Grid.Row="1"
                Margin="0,-3,0,0"
                HorizontalAlignment="Center"
                FontSize="16"
                Text="└">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FilePath.IsDirectory}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Completed">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding StatusInfo.CurrentFileName}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Visible" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock
                Grid.Row="1"
                Grid.Column="1"
                TextTrimming="CharacterEllipsis">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ShowExtensionsCheckBox, Path=IsChecked}" Value="False">
                                <Setter Property="Text" Value="{Binding StatusInfo.CurrentFileName}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding StatusInfo.CurrentFileName}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Completed">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="{Binding StatusInfo.CurrentFileNameWithoutExtension}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="FileOpSourcePathTemplate">
        <TextBlock
            Margin="4,0"
            Text="{Binding FilePath.ParentPath}"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="FileOpTargetPathTemplate">
        <TextBlock
            Margin="4,0"
            Text="{Binding TargetPath.FullPath}"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="FileOpStatusTemplate">
        <TextBlock
            Margin="4,0"
            Text="{Binding Status}"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <Style x:Key="CompletedOperationsProgressStyle" TargetType="ui:ProgressBar">
        <Style.Triggers>
            <Trigger Property="Value" Value="100">
                <Setter Property="Foreground" Value="{StaticResource SystemControlHighlightAccentBrush}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource SystemControlErrorTextForegroundBrush}" />
    </Style>
    <DataTemplate x:Key="FileOpCompletedInfoTemplate">
        <Grid Margin="4,0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ui:ProgressBar Style="{StaticResource CompletedOperationsProgressStyle}" Value="{Binding StatusInfo.FileCountCompletedRate, Mode=OneWay}" />
                <TextBlock
                    Grid.Column="1"
                    Margin="4,0"
                    Text="{Binding StatusInfo.FileCountCompletedString}"
                    TextTrimming="CharacterEllipsis" />
            </Grid>
            <TextBlock
                Grid.Row="1"
                Text="{Binding StatusInfo, Converter={StaticResource CompletedStatsConverter}}"
                TextTrimming="CharacterEllipsis" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="FileOpProgressTemplate">
        <Grid Margin="4,0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ui:ProgressBar Style="{StaticResource FileOpProgressStyle}" Value="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" />
            <ui:ProgressBar Grid.Row="1" Value="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}">
                <ui:ProgressBar.Style>
                    <Style TargetType="ui:ProgressBar">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Visible" />
                    </Style>
                </ui:ProgressBar.Style>
            </ui:ProgressBar>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Visible" />
                    </Style>
                </StackPanel.Style>
                <TextBlock Margin="4,0,0,0" Text="{Binding StatusInfo.TotalPercentage, Mode=OneWay}" />
                <TextBlock Text="%" />
            </StackPanel>
            <StackPanel
                Grid.Row="1"
                Grid.Column="1"
                Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Visible" />
                    </Style>
                </StackPanel.Style>
                <TextBlock Margin="4,0,0,0" Text="{Binding StatusInfo.CurrentFilePercentage, Mode=OneWay}" />
                <TextBlock Text="%" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="OperationIconTemplate">
        <Grid Margin="0,0,6,0">
            <ui:FontIcon HorizontalAlignment="Left" Glyph="&#xE8EA;" />
            <ui:FontIcon Margin="14,0,0,0" FontSize="14">
                <ui:FontIcon.Style>
                    <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OperationName}" Value="Push">
                                <Setter Property="Glyph" Value="&#xE973;" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OperationName}" Value="Pull">
                                <Setter Property="Glyph" Value="&#xE974;" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:FontIcon.Style>
            </ui:FontIcon>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="AverageRateCompletedTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding StatusInfo.AverageRate, Mode=OneWay}" />
            <TextBlock Text="MB/s" />
        </StackPanel>
    </DataTemplate>
    <Style x:Key="BaseRowStyle" TargetType="DataGridRow">
        <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Border
                        x:Name="RowBorder"
                        HorizontalAlignment="Left"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverBackground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedBackground}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=IsActive}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectedInactiveBackground}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=IsActive}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectedMouseOverInactiveBackground}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=ShowHiddenCheckBox, Path=IsChecked}" Value="False" />
                    <Condition Binding="{Binding IsHidden}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BaseCellStyle" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Margin="0" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="CheckBoxStyle"
        BasedOn="{StaticResource DefaultCheckBoxStyle}"
        TargetType="CheckBox">
        <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="-6,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRoundedStyle}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RadioButtonStyle"
        BasedOn="{StaticResource DefaultRadioButtonStyle}"
        TargetType="RadioButton">
        <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="-5,0,0,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRoundedStyle}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="FileOpColumnHeaderStyle"
        BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}"
        TargetType="DataGridColumnHeader">
        <Setter Property="ContextMenu" Value="{StaticResource FileOpHeaderContextMenu}" />
    </Style>
    <Style x:Key="ExplorerViewBackgroundStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
    </Style>
    <Style x:Key="SeparatorStyle" TargetType="Separator">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="Height" Value="0" />
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExpanderSeparatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource DeviceConnectionPanelBorder}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="False">
                <Setter Property="Height" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DeviceOpenIconStyle"
        BasedOn="{StaticResource DeviceHeaderIcon}"
        TargetType="ui:FontIcon">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style x:Key="DeviceStatusGridStyle" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device.Status}" Value="Online">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ForceFluentVisibility"
        BasedOn="{StaticResource CheckBoxStyle}"
        TargetType="CheckBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="QrBackgroundStyle" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainWin, Path=UseFluentStyles}" Value="True">
                <Setter Property="CornerRadius" Value="0,0,5,5" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Background" Value="#FFFBFBFB" />
        <Setter Property="Margin" Value="0,6,0,0" />
    </Style>
</ResourceDictionary>
