<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:ui="http://schemas.modernwpf.com/2019">
    <KeyTime x:Key="AnimationDurationKeyTime">00:00:00.2</KeyTime>
    <Style
        x:Key="ToggleButtonStyle"
        BasedOn="{StaticResource DefaultToggleButtonStyle}"
        TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />
        <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                <Setter Property="helpers:StyleHelper.ActivateAnimation" Value="False" />
                <Setter Property="helpers:StyleHelper.ContentAnimation" Value="None" />
                <Setter Property="helpers:StyleHelper.BeginAnimation" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRoundedStyle}" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <!--  Template copied from ModernWPF to be modified  -->
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <ControlTemplate.Resources>
                                <RotateTransform x:Key="RotatingTransform" />
                                <TranslateTransform x:Key="BounceTransform" X="0" Y="0" />
                                <Storyboard x:Key="BouncingStoryBoard">
                                    <DoubleAnimation
                                        AutoReverse="True"
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Y"
                                        From="0"
                                        To="-4"
                                        Duration="00:00:00.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase
                                                Bounces="2"
                                                Bounciness="4"
                                                EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Key="CwRotatingStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                        From="0"
                                        To="360"
                                        Duration="00:00:00.2" />
                                </Storyboard>
                                <Storyboard x:Key="CCwRotatingStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                        From="360"
                                        To="0"
                                        Duration="00:00:00.2" />
                                </Storyboard>
                                <Storyboard x:Key="LeftMarqueeStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.X"
                                        From="0"
                                        To="-30"
                                        Duration="00:00:00.1" />
                                    <DoubleAnimation
                                        BeginTime="00:00:00.1"
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.X"
                                        From="30"
                                        To="0"
                                        Duration="00:00:00.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase
                                                Bounces="2"
                                                Bounciness="4"
                                                EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Key="RightMarqueeStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.X"
                                        From="0"
                                        To="30"
                                        Duration="00:00:00.1" />
                                    <DoubleAnimation
                                        BeginTime="00:00:00.1"
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.X"
                                        From="-30"
                                        To="0"
                                        Duration="00:00:00.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase
                                                Bounces="2"
                                                Bounciness="4"
                                                EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Key="UpMarqueeStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Y"
                                        From="0"
                                        To="-30"
                                        Duration="00:00:00.1" />
                                    <DoubleAnimation
                                        BeginTime="00:00:00.1"
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Y"
                                        From="30"
                                        To="0"
                                        Duration="00:00:00.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase
                                                Bounces="2"
                                                Bounciness="4"
                                                EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Key="DownMarqueeStoryBoard">
                                    <DoubleAnimation
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Y"
                                        From="0"
                                        To="30"
                                        Duration="00:00:00.1" />
                                    <DoubleAnimation
                                        BeginTime="00:00:00.1"
                                        Storyboard.TargetName="ContentPresenter"
                                        Storyboard.TargetProperty="RenderTransform.Y"
                                        From="-30"
                                        To="0"
                                        Duration="00:00:00.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase
                                                Bounces="2"
                                                Bounciness="4"
                                                EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border
                                x:Name="Background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <Border
                                        x:Name="Border"
                                        Padding="{TemplateBinding Padding}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
                                        <ContentPresenter
                                            x:Name="ContentPresenter"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="False"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            TextElement.Foreground="{TemplateBinding Foreground}" />
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  Click animation  -->
                                <EventTrigger RoutedEvent="Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(helpers:StyleHelper.BeginAnimation)">
                                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
                                                <DiscreteBooleanKeyFrame KeyTime="{StaticResource AnimationDurationKeyTime}" Value="False" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=IsAnimated}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:StyleHelper.BeginAnimation)}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                </MultiDataTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="Bounce" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource BouncingStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="RotateCW" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource RotatingTransform}" />
                                    <Setter TargetName="ContentPresenter" Property="RenderTransformOrigin" Value="0.5, 0.5" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource CwRotatingStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="RotateCCW" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource RotatingTransform}" />
                                    <Setter TargetName="ContentPresenter" Property="RenderTransformOrigin" Value="0.5, 0.5" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource CCwRotatingStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="LeftMarquee" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource LeftMarqueeStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="RightMarquee" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource RightMarqueeStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="UpMarquee" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource UpMarqueeStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="helpers:StyleHelper.ActivateAnimation" Value="True" />
                                        <Condition Property="helpers:StyleHelper.ContentAnimation" Value="DownMarquee" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="RenderTransform" Value="{StaticResource BounceTransform}" />
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource DownMarqueeStoryBoard}" />
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>

                                <!--  BACKGROUND, BORDER: Dark Theme, Checked. FOREGROUND: Checked  -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SystemAccentColorLight2Brush}" />
                                    <Setter Property="Foreground" Value="{ui:ThemeResource SystemControlBackgroundAltHighBrush}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource DarkFluentAccentButtonBorderBrush}" />
                                </Trigger>

                                <!--  BACKGROUND, BORDER: Light Theme, Checked  -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light">
                                    <Setter Property="Background" Value="{DynamicResource SystemAccentColorDark1Brush}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource LightFluentAccentButtonBorderBrush}" />
                                </DataTrigger>

                                <!--  BORDER: Dark Theme, Unchecked. BACKGROUND, FOREGROUND: Unchecked  -->
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource AdbButtonBackgroundNormal}" />
                                    <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource DarkFluentButtonBorderBrush}" />
                                </Trigger>

                                <!--  BORDER: Light Theme, Unchecked  -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(ui:ThemeManager.ActualTheme)}" Value="Light" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="{StaticResource LightFluentButtonBorderBrush}" />
                                </MultiDataTrigger>

                                <!--  BACKGORUND: Unchecked, Mouse Over  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource AdbButtonBackgroundMouseOver}" />
                                </MultiTrigger>

                                <!--  BACKGORUND (OPACITY): Checked, Mouse Over  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" Value="{StaticResource AccentButtonBackgroundMouseOverOpacity}" />
                                </MultiTrigger>

                                <!--  Unchecked, Pressed  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="False" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource AdbButtonBackgroundPressed}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource AdbButtonBorderPressed}" />
                                    <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                                </MultiTrigger>

                                <!--  BACKGORUND (OPACITY), FOREGROUND: Checked, Pressed  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" Value="{StaticResource AccentButtonBackgroundPressedOpacity}" />
                                    <Setter Property="Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Opacity="{StaticResource AccentButtonForegroundPressedOrDisabledOpacity}" Color="{ui:ThemeResource SystemAltHighColor}" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>

                                <!--  FOREGROUND, BORDER: Disabled. BACKGROUND: Disabled, Unchecked  -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource AdbButtonBackgroundDisabled}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource AdbButtonBorderDisabled}" />
                                    <Setter Property="Foreground" Value="{DynamicResource AdbButtonForegroundPressedOrDisabled}" />
                                </Trigger>

                                <!--  BACKGROUND: Disabled, Checked  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True" />
                                        <Condition Property="IsEnabled" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundDisabled}" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource ToggleButtonStyle}" TargetType="ToggleButton" />
</ResourceDictionary>
