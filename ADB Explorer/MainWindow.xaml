<Window
    x:Class="ADB_Explorer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ADB_Explorer.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    x:Name="MainWin"
    Title="ADB Explorer"
    Width="800"
    Height="450"
    MinWidth="530"
    MinHeight="400"
    ui:ThemeManager.IsThemeAware="True"
    ui:WindowHelper.UseModernWindowStyle="True"
    Background="{DynamicResource AdbWindowBackground}"
    Closing="Window_Closing"
    Cursor="{Binding ElementName=UnfinishedBlock, Path=Cursor}"
    KeyDown="Window_KeyDown"
    MouseDown="Window_MouseDown"
    MouseUp="Window_MouseUp"
    SizeChanged="Window_SizeChanged"
    SourceInitialized="Window_SourceInitialized"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <sys:Int16 x:Key="FontSize">13</sys:Int16>
        <converters:VisibilityToStateConverter x:Key="VisibilityToStateConverter" />
        <converters:EnumToBooleanConverter x:Key="ThemeConverter" EnumType="models:AppTheme" />
        <CollectionViewSource
            x:Key="FileListView"
            Filter="CollectionViewSource_Filter"
            Source="{Binding ElementName=MainWin, Path=DirectoryLister.FileList}" />
        <Style
            x:Key="FileOpHeaderResizeStyle"
            BasedOn="{StaticResource FileOpColumnHeaderStyle}"
            TargetType="DataGridColumnHeader">
            <EventSetter Event="SizeChanged" Handler="DataGridColumnHeader_SizeChanged" />
        </Style>
        <Menu
            x:Key="DeviceActionsMenu"
            Height="32"
            Margin="0,0,4,0"
            x:Shared="False"
            Resources="{StaticResource DeviceMenuStyles}">
            <MenuItem
                Height="32"
                SubmenuClosed="MenuItem_SubmenuClosed"
                SubmenuOpened="MenuItem_SubmenuOpened"
                ToolTip="More Actions">
                <MenuItem.Header>
                    <ui:FontIcon Margin="-6" Glyph="&#xE712;" />
                </MenuItem.Header>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel>
                            <ui:FontIcon Glyph="&#xE7EF;" />
                            <TextBlock Text="Root Access" />
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem IsEnabled="False">
                        <MenuItem.Header>
                            <StackPanel>
                                <TextBlock FontWeight="Bold" Text="Status: " />
                                <TextBlock
                                    Margin="0"
                                    FontWeight="Bold"
                                    Text="{Binding Device.Root}" />
                                <TextBlock
                                    FontWeight="Bold"
                                    Style="{StaticResource RecoveryRootStatusStyle}"
                                    Text=" - Recovery" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator>
                        <Separator.Style>
                            <Style BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" TargetType="Separator">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Device.Root}" Value="Forbidden">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Device.Type}" Value="Sideload">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Separator.Style>
                    </Separator>
                    <MenuItem Click="EnableDeviceRootToggle_Click">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Device.Root}" Value="Forbidden">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Device.Type}" Value="Sideload">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem.Header>
                            <StackPanel>
                                <TextBlock>
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
                                            <Setter Property="Margin" Value="6,0,0,0" />
                                            <Setter Property="Text" Value="Enable" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Device.Root}" Value="Enabled">
                                                    <Setter Property="Text" Value="Disable" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel>
                            <ui:FontIcon Glyph="&#xE777;" />
                            <TextBlock Text="Reboot" />
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock FontWeight="Bold" Text="Reboot Into:" />
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator />
                    <MenuItem helpers:TextHelper.AltText="" Click="RebootMenuItem_Click">
                        <MenuItem.Header>
                            <TextBlock Text="System Image" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem helpers:TextHelper.AltText="bootloader" Click="RebootMenuItem_Click">
                        <MenuItem.Header>
                            <TextBlock Text="Bootloader" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem helpers:TextHelper.AltText="recovery" Click="RebootMenuItem_Click">
                        <MenuItem.Header>
                            <TextBlock Text="Recovery" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem helpers:TextHelper.AltText="sideload" Click="RebootMenuItem_Click">
                        <MenuItem.Header>
                            <TextBlock Text="Sideload" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem helpers:TextHelper.AltText="sideload-auto-reboot" Click="RebootMenuItem_Click">
                        <MenuItem.Header>
                            <TextBlock Text="Sideload (Auto Reboot)" />
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
        </Menu>
        <MenuItem
            x:Key="PushFilesMenu"
            x:Name="PushFilesMenu"
            x:Shared="False"
            Click="PushMenuButton_Click">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE8A5;" />
                    <TextBlock VerticalAlignment="Center" Text="Files" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="PushFoldersMenu"
            x:Name="PushFoldersMenu"
            x:Shared="False"
            Click="PushMenuButton_Click">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE8B7;" />
                    <TextBlock VerticalAlignment="Center" Text="Folders" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuPullItem"
            Click="ContextMenuPullItem_Click"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Header>
                <StackPanel>
                    <Grid Margin="-3,0,-4,0">
                        <ui:FontIcon HorizontalAlignment="Left" Glyph="&#xE8EA;" />
                        <ui:FontIcon
                            Margin="11,0,0,0"
                            FontSize="12"
                            Glyph="&#xE974;" />
                    </Grid>
                    <TextBlock Text="Pull" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem x:Key="ContextMenuPushItem" Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Header>
                <StackPanel>
                    <Grid Margin="-3,0,-4,0">
                        <ui:FontIcon HorizontalAlignment="Left" Glyph="&#xE8EA;" />
                        <ui:FontIcon
                            Margin="11,0,0,0"
                            FontSize="12"
                            Glyph="&#xE973;" />
                    </Grid>
                    <TextBlock Text="Push" />
                </StackPanel>
            </MenuItem.Header>
            <StaticResource ResourceKey="PushFilesMenu" />
            <StaticResource ResourceKey="PushFoldersMenu" />
        </MenuItem>
        <MenuItem
            x:Key="MenuDeleteItem"
            x:Shared="False"
            Click="ContextMenuDeleteItem_Click"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE74D;" />
                    <TextBlock Text="Delete" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuRenameItem"
            Click="ContextMenuRenameItem_Click"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE8AC;" />
                    <TextBlock Text="Rename" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuCutItem"
            Click="ContextMenuCutItem_Click"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE8C6;" />
                    <TextBlock Text="Cut" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuPasteItem"
            Click="ContextMenuPasteItem_Click"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE77F;" />
                    <TextBlock Text="Paste " />
                    <TextBlock Margin="0" Text="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" />
                    <TextBlock Margin="0" Text=" Item" />
                    <TextBlock Margin="0" Text="s">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" Value="1">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="NewFolderMenuItem"
            x:Shared="False"
            Click="NewFolderMenuItem_Click">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <ui:FontIcon Glyph="&#xE8F4;" />
                    <TextBlock Text="Folder" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="NewFileMenuItem"
            x:Shared="False"
            Click="NewFileMenuItem_Click">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <ui:FontIcon Glyph="&#xE8A5;" />
                    <TextBlock Text="File" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem x:Key="ContextMenuNewItem" Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <ui:FontIcon Margin="0,0,0,-1" Glyph="&#xECC8;" />
                    <TextBlock Text="New" />
                </StackPanel>
            </MenuItem.Header>
            <StaticResource ResourceKey="NewFolderMenuItem" />
            <StaticResource ResourceKey="NewFileMenuItem" />
        </MenuItem>
        <MenuItem
            x:Key="PathMenuHeader"
            Margin="0,0,0,-5"
            HorizontalAlignment="Center"
            x:Shared="False"
            Click="PathMenuEdit_Click"
            IsEnabled="False">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE62F;" />
                    <TextBlock
                        Margin="0,0,0,1"
                        HorizontalAlignment="Center"
                        Text="Path" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="PathMenuEdit"
            x:Shared="False"
            Click="PathMenuEdit_Click">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE70F;" />
                    <TextBlock Text="Edit" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem
            x:Key="PathMenuCopy"
            x:Shared="False"
            Click="PathMenuCopy_Click">
            <MenuItem.Header>
                <StackPanel>
                    <ui:FontIcon Glyph="&#xE8C8;" />
                    <TextBlock Text="Copy" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <Menu
            x:Key="FileOpStopMenu"
            x:Shared="False"
            Style="{StaticResource StopFileOpMenuStyle}">
            <MenuItem Click="StopFileOperations_Click">
                <MenuItem.Style>
                    <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                        <Setter Property="Header">
                            <Setter.Value>
                                <ui:FontIcon Glyph="&#xE71A;" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTip" Value="Stop" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, NotifyOnTargetUpdated=True}" Value="False">
                                <Setter Property="Header">
                                    <Setter.Value>
                                        <ui:FontIcon Glyph="&#xE768;" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="Resume" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
        </Menu>
        <Menu
            x:Key="FileOpRemoveMenu"
            x:Shared="False"
            FlowDirection="LeftToRight">
            <Menu.Style>
                <Style BasedOn="{StaticResource MenuStyle}" TargetType="Menu">
                    <Setter Property="IsEnabled" Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=CurrentOperationDetailedDataGrid, Path=Items.Count}" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Menu.Style>
            <MenuItem ToolTip="Remove Operations">
                <MenuItem.Header>
                    <ui:FontIcon Glyph="&#xE711;" />
                </MenuItem.Header>
                <MenuItem Click="RemovePending_Click">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <ui:FontIcon
                                Margin="0,0,4,0"
                                FontSize="16"
                                Glyph="&#xECC5;" />
                            <TextBlock Text="Pending" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Click="RemoveCompleted_Click">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <ui:FontIcon
                                Margin="0,0,4,0"
                                FontSize="16"
                                Glyph="&#xE930;" />
                            <TextBlock Text="Completed" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Click="RemovePendingAndCompleted_Click">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <ui:FontIcon
                                Margin="0,0,4,0"
                                FontSize="16"
                                Glyph="&#xECC9;" />
                            <TextBlock Text="All" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Menu x:Key="FileOpDefaultFolderMenu" x:Shared="False">
            <Menu.Style>
                <Style BasedOn="{StaticResource MenuStyle}" TargetType="Menu">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=DefaultFolder}" Value="">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="IsEnabled" Value="True" />
                </Style>
            </Menu.Style>
            <MenuItem Click="OpenDefaultFolder_Click" ToolTip="Open Default Folder">
                <MenuItem.Header>
                    <ui:FontIcon Glyph="&#xED25;" />
                </MenuItem.Header>
            </MenuItem>
        </Menu>
        <ContextMenu
            x:Key="PathButtonsMenu"
            Name="PathButtonsMenu"
            Resources="{StaticResource ContextMenuStyles}">
            <StaticResource ResourceKey="PathMenuHeader" />
            <Separator />
            <StaticResource ResourceKey="PathMenuEdit" />
            <StaticResource ResourceKey="PathMenuCopy" />
        </ContextMenu>
        <ui:Flyout x:Key="PairServiceFlyout">
            <StackPanel>
                <TextBlock Text="On phone: Switch Wireless debugging off then on" />
                <TextBlock Margin="0,8" Text="Click the button below to switch to device discovery" />
                <Grid>
                    <ui:FontIcon
                        Margin="6"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Glyph="&#xE946;"
                        Style="{StaticResource GlyphFont}" />
                    <Button
                        x:Name="PairFlyoutCloseButton"
                        Margin="0,10,4,0"
                        HorizontalAlignment="Right"
                        Click="PairFlyoutCloseButton_Click"
                        Content="Close"
                        Style="{StaticResource ButtonStyle}" />
                </Grid>
            </StackPanel>
        </ui:Flyout>
        <DataTemplate x:Key="DriveItemTemplate" DataType="Drive">
            <Button
                Click="DriveItem_Click"
                GotFocus="Drive_GotFocus"
                MouseDoubleClick="DriveItem_MouseDoubleClick"
                Style="{StaticResource DriveItemStyle}">
                <Grid Width="260" Margin="0,-4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ui:FontIcon
                        Margin="0,0,8,0"
                        FontSize="32"
                        Glyph="{Binding DriveIcon}"
                        Style="{StaticResource DriveIconStyle}" />
                    <StackPanel Grid.Column="1">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style BasedOn="{StaticResource DriveNameTextBlockStyle}" TargetType="TextBlock" />
                            </StackPanel.Resources>
                            <TextBlock Text="{Binding PrettyName}" />
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="External">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Emulated">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <TextBlock Text=" (" />
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontFamily="Consolas"
                                    Text="{Binding ID}" />
                                <TextBlock Text=")" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style BasedOn="{StaticResource DriveTextBlockStyle}" TargetType="TextBlock" />
                            </StackPanel.Resources>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UsageP}" Value="-1">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <ui:ProgressBar
                                Margin="0,6"
                                Style="{StaticResource DriveUsageBarStyle}"
                                Value="{Binding UsageP, Mode=OneWay}" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Available, Mode=OneWay}" />
                                <TextBlock Text=" free of " />
                                <TextBlock Text="{Binding Size, Mode=OneWay}" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Button>
        </DataTemplate>
        <Style
            x:Key="DataGridCellStyle"
            BasedOn="{StaticResource BaseCellStyle}"
            TargetType="{x:Type DataGridCell}">
            <EventSetter Event="RequestBringIntoView" Handler="DataGridCell_RequestBringIntoView" />
        </Style>
        <Style
            x:Key="RowStyle"
            BasedOn="{StaticResource BaseRowStyle}"
            TargetType="DataGridRow">
            <EventSetter Event="MouseDown" Handler="DataGridRow_MouseDown" />
            <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick" />
            <EventSetter Event="KeyDown" Handler="DataGridRow_KeyDown" />
        </Style>
        <DataTemplate x:Key="DeviceDataTemplate" DataType="Device">
            <Expander
                x:Name="DeviceExpander"
                IsExpanded="{Binding DeviceSelected, Mode=TwoWay}"
                Style="{StaticResource DeviceExpanderStyle}">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource DeviceStatusFontSizeStyle}" TargetType="ui:FontIcon" />
                            </Grid.Resources>
                            <ui:FontIcon Glyph="{Binding TypeIcon}" />
                            <Grid Style="{StaticResource DeviceStatusGridStyle}">
                                <ui:FontIcon Style="{StaticResource DeviceStatusIconStyle}" />
                                <ui:FontIcon Foreground="{Binding Background, RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor, AncestorLevel=2}}" Glyph="{Binding StatusIcon}" />
                            </Grid>
                        </Grid>
                        <TextBlock
                            Grid.Column="1"
                            Margin="4"
                            Style="{StaticResource DeviceNameTextBlockStyle}"
                            TextTrimming="CharacterEllipsis" />
                        <ui:SimpleStackPanel
                            Grid.Column="2"
                            Margin="2,0,0,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Spacing="6">
                            <ui:FontIcon Glyph="&#xE7EF;" Style="{StaticResource RootIconStyle}" />
                            <ui:FontIcon
                                Glyph="&#xE838;"
                                Style="{StaticResource DeviceOpenIconStyle}"
                                ToolTip="Currently Browsing" />
                            <ui:FontIcon Margin="0,1,0,0" Style="{StaticResource BatteryIconStyle}" />
                        </ui:SimpleStackPanel>
                    </Grid>
                </Expander.Header>
                <StackPanel x:Name="DeviceExpandPanel" Margin="0,5">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMdns}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            x:Name="PairingCodeTextBox"
                            ui:ControlHelper.PlaceholderText="Pairing Code"
                            ui:TextBoxHelper.IsDeleteButtonVisible="False"
                            KeyDown="PairingCodeTextBox_KeyDown"
                            MouseDoubleClick="PairingCodeTextBox_MouseDoubleClick"
                            Style="{StaticResource PairingTextBoxStyle}"
                            Text="{Binding UIPairingCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            TextChanged="PairingCodeTextBox_TextChanged" />
                        <Button
                            Grid.Column="1"
                            Margin="6,0,0,0"
                            VerticalAlignment="Center"
                            ui:FlyoutService.Flyout="{StaticResource PairServiceFlyout}"
                            Click="PairServiceButton_Click"
                            Content="Pair">
                            <Button.Style>
                                <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=PairingCodeTextBox, Path=Text.Length}" Value="11" />
                                                <Condition Binding="{Binding Device.Status}" Value="Unauthorized" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StaticResource ResourceKey="DeviceActionsMenu" />
                        <Button
                            x:Name="OpenDeviceButton"
                            Grid.Column="1"
                            Margin="4,0"
                            Padding="0,5,0,6"
                            HorizontalAlignment="Stretch"
                            Click="OpenDeviceButton_Click"
                            Content="Browse"
                            Style="{StaticResource DeviceBrowseButtonStyle}" />
                        <Button
                            x:Name="DisconnectDeviceButton"
                            Grid.Column="2"
                            Margin="4,0,0,0"
                            Click="DisconnectDeviceButton_Click"
                            Style="{StaticResource DeviceRemoveButtonStyle}">
                            <StackPanel Orientation="Horizontal">
                                <ui:FontIcon
                                    Margin="-4,1,4,-2"
                                    VerticalAlignment="Center"
                                    Glyph="&#xECC9;"
                                    Style="{DynamicResource DisabledButtonGlyphStyle}" />
                                <Grid>
                                    <TextBlock Text="Remove" Visibility="Hidden" />
                                    <TextBlock Style="{StaticResource RemoveDeviceButtonStyle}" />
                                </Grid>
                            </StackPanel>
                        </Button>
                    </Grid>
                </StackPanel>
            </Expander>
        </DataTemplate>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo
            x:Name="TaskBarInfo"
            ProgressState="{Binding ElementName=UpperProgressBar, Path=Visibility, Converter={StaticResource VisibilityToStateConverter}}"
            ProgressValue="{Binding ElementName=UpperProgressBar, Path=Value}" />
    </Window.TaskbarItemInfo>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Menu Margin="7,4" VerticalAlignment="Center">
                    <Menu.Resources>
                        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
                            <Setter Property="FontSize" Value="18" />
                        </Style>
                        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock" />
                    </Menu.Resources>
                    <MenuItem
                        x:Name="OpenDevicesButton"
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="OpenDevicesButton_Click"
                        IsEnabled="False"
                        ToolTip="Devices">
                        <MenuItem.Header>
                            <Grid>
                                <ui:FontIcon Glyph="&#xE8CC;" />
                                <TextBlock
                                    Margin="0,0,-10,-12"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Text="{Binding ElementName=DevicesList, Path=ItemsSource.Count, NotifyOnTargetUpdated=True}">
                                    <TextBlock.Triggers>
                                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                            <BeginStoryboard Storyboard="{StaticResource PulsatingBackgroundStoryboard}" />
                                        </EventTrigger>
                                    </TextBlock.Triggers>
                                </TextBlock>
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator Margin="4,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <MenuItem
                        x:Name="PullMenuButton"
                        Click="PullMenuButton_Click"
                        IsEnabled="False"
                        ToolTip="Pull">
                        <MenuItem.Header>
                            <Grid Margin="-4,0,-6,0">
                                <ui:FontIcon HorizontalAlignment="Left" Glyph="&#xE8EA;" />
                                <ui:FontIcon
                                    Margin="14,0,0,0"
                                    FontSize="14"
                                    Glyph="&#xE974;" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="PushMenuButton"
                        IsEnabled="False"
                        Resources="{StaticResource TopMenuStyles}"
                        ToolTip="Push">
                        <MenuItem.Header>
                            <Grid Margin="-4,0,-6,0">
                                <ui:FontIcon
                                    HorizontalAlignment="Left"
                                    FontSize="18"
                                    Glyph="&#xE8EA;" />
                                <ui:FontIcon
                                    Margin="14,0,0,0"
                                    FontSize="14"
                                    Glyph="&#xE973;" />
                            </Grid>
                        </MenuItem.Header>
                        <StaticResource ResourceKey="PushFilesMenu" />
                        <StaticResource ResourceKey="PushFoldersMenu" />
                    </MenuItem>
                    <Separator Margin="4,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <MenuItem
                        x:Name="NewMenuButton"
                        IsEnabled="False"
                        Resources="{StaticResource TopMenuStyles}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <ui:FontIcon Glyph="&#xECC8;" Style="{StaticResource DisabledGlyphStyle}" />
                                <TextBlock Text="New" />
                            </StackPanel>
                        </MenuItem.Header>
                        <StaticResource ResourceKey="NewFolderMenuItem" />
                        <StaticResource ResourceKey="NewFileMenuItem" />
                    </MenuItem>
                    <MenuItem
                        x:Name="CutMenuButton"
                        helpers:StyleHelper.ContentAnimation="UpMarquee"
                        Click="ContextMenuCutItem_Click"
                        IsEnabled="False"
                        ToolTip="Cut">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE8C6;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="CopyMenuButton"
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="CopyMenuButton_Click"
                        IsEnabled="False"
                        ToolTip="Copy">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE8C8;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="PasteMenuButton"
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="ContextMenuPasteItem_Click"
                        IsEnabled="False">
                        <MenuItem.ToolTip>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Paste " />
                                <TextBlock Text="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" />
                                <TextBlock Text=" Item" />
                                <TextBlock Text="s">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" Value="1">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </MenuItem.ToolTip>
                        <MenuItem.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ui:FontIcon Margin="0,1,0,0" Glyph="&#xE77F;" />
                                <TextBlock Grid.Column="1" Margin="4,0,0,0">
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
                                            <Setter Property="Text" Value="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="RenameMenuButton"
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="ContextMenuRenameItem_Click"
                        IsEnabled="False"
                        ToolTip="Rename">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE8AC;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="DeleteMenuButton"
                        Click="ContextMenuDeleteItem_Click"
                        IsEnabled="False"
                        Resources="{StaticResource TopMenuStyles}"
                        ToolTip="Delete">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE74D;" />
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>
                <Border
                    Grid.Column="1"
                    Background="Transparent"
                    MouseDown="Window_MouseDown" />
            </Grid>
            <StackPanel
                Margin="0,0,7,0"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style
                        x:Key="RightMenuGlyph"
                        BasedOn="{StaticResource DisabledGlyphStyle}"
                        TargetType="ui:FontIcon">
                        <Setter Property="FontSize" Value="18" />
                    </Style>
                </StackPanel.Resources>
                <Menu>
                    <MenuItem
                        x:Name="FileOperationsButton"
                        Click="FileOperationsButton_Click"
                        Style="{StaticResource FileOpButtonStyle}"
                        ToolTip="File Operations">
                        <MenuItem.Header>
                            <Grid>
                                <ui:FontIcon Glyph="&#xF16A;" Style="{StaticResource OperationsIconStyle}" />
                                <ui:ProgressRing
                                    x:Name="FileOpRing"
                                    IsActive="True"
                                    Style="{StaticResource OperationsProgressRingStyle}" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="SettingsButton"
                        helpers:StyleHelper.ContentAnimation="RotateCW"
                        Click="SettingsButton_Click"
                        ToolTip="Settings">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE713;" Style="{DynamicResource RightMenuGlyph}" />
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>
            </StackPanel>
            <Grid Grid.Row="1">
                <StackPanel Margin="0,4,0,2">
                    <Separator />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Menu Margin="7,0,0,0">
                            <Menu.Resources>
                                <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
                                    <Setter Property="FontSize" Value="14" />
                                </Style>
                            </Menu.Resources>
                            <MenuItem
                                x:Name="HomeButton"
                                helpers:StyleHelper.ContentAnimation="Bounce"
                                Click="HomeButton_Click"
                                IsEnabled="False"
                                ToolTip="Device Drives">
                                <MenuItem.Header>
                                    <ui:FontIcon FontSize="16" Glyph="&#xE80F;" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem
                                x:Name="BackButton"
                                helpers:StyleHelper.ContentAnimation="LeftMarquee"
                                Click="BackButton_Click"
                                IsEnabled="False"
                                ToolTip="Back">
                                <MenuItem.Header>
                                    <ui:FontIcon Glyph="&#xE72B;" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem
                                x:Name="ForwardButton"
                                helpers:StyleHelper.ContentAnimation="RightMarquee"
                                Click="ForwardButton_Click"
                                IsEnabled="False"
                                ToolTip="Forward">
                                <MenuItem.Header>
                                    <ui:FontIcon Glyph="&#xE72A;" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem
                                x:Name="ParentButton"
                                helpers:StyleHelper.ContentAnimation="Bounce"
                                Click="ParentButton_Click"
                                IsEnabled="False"
                                ToolTip="Up">
                                <MenuItem.Header>
                                    <ui:FontIcon Glyph="&#xE197;" />
                                </MenuItem.Header>
                            </MenuItem>
                        </Menu>

                        <Grid Grid.Column="1" Margin="6">
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </Grid.Resources>
                            <TextBox
                                x:Name="PathBox"
                                VerticalAlignment="Center"
                                helpers:TextHelper.AltText=""
                                GotFocus="PathBox_GotFocus"
                                IsEnabled="False"
                                IsReadOnly="True"
                                KeyDown="PathBox_KeyDown"
                                LostFocus="PathBox_LostFocus"
                                Style="{StaticResource TextBoxFluentStyle}" />
                            <ui:ProgressBar
                                x:Name="DirectoryLoadingProgressBar"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                Foreground="#780078D7"
                                IsHitTestVisible="False">
                                <ui:ProgressBar.Style>
                                    <Style BasedOn="{StaticResource DirectoryLoadingProgressStyle}" TargetType="ui:ProgressBar">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=MainWin, Path=DirectoryLister.IsProgressVisible}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ui:ProgressBar.Style>
                            </ui:ProgressBar>
                            <StackPanel
                                x:Name="PathStackPanel"
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                                        <Setter Property="ContextMenu" Value="{StaticResource PathButtonsMenu}" />
                                    </Style>
                                </StackPanel.Resources>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </StackPanel>
                <ui:ProgressBar
                    x:Name="UpperProgressBar"
                    VerticalAlignment="Bottom"
                    CornerRadius="0"
                    LargeChange="0.001"
                    Maximum="1"
                    SmallChange="0.0001"
                    Value="{Binding Progress, Mode=OneWay}">
                    <ui:ProgressBar.Style>
                        <Style BasedOn="{StaticResource FluentProgressBarStyle}" TargetType="ui:ProgressBar">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsIndeterminate" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <Trigger Property="Value" Value="0">
                                    <Setter Property="IsIndeterminate" Value="True" />
                                </Trigger>
                                <DataTrigger Binding="{Binding Progress}" Value="{x:Null}">
                                    <Setter Property="IsIndeterminate" Value="True" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ui:ProgressBar.Style>
                </ui:ProgressBar>
            </Grid>
            <Border
                x:Name="GridBackgroundBlock"
                Grid.Row="2"
                MouseDown="GridBackgroundBlock_MouseDown"
                Style="{StaticResource ExplorerViewBackgroundStyle}">
                <Grid>
                    <ScrollViewer Visibility="{Binding ElementName=DrivesItemRepeater, Path=Visibility}">
                        <ui:ItemsRepeater
                            x:Name="DrivesItemRepeater"
                            Margin="10,10,10,0"
                            ItemTemplate="{StaticResource DriveItemTemplate}"
                            ItemsSource="{Binding}">
                            <ui:ItemsRepeater.Layout>
                                <ui:UniformGridLayout
                                    MinColumnSpacing="10"
                                    MinItemHeight="60"
                                    MinItemWidth="280"
                                    MinRowSpacing="10" />
                            </ui:ItemsRepeater.Layout>
                        </ui:ItemsRepeater>
                    </ScrollViewer>
                    <DataGrid
                        x:Name="ExplorerGrid"
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserResizeRows="False"
                        CellStyle="{StaticResource DataGridCellStyle}"
                        ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                        ContextMenu="{StaticResource RowContextMenu}"
                        ContextMenuOpening="ExplorerGrid_ContextMenuOpening"
                        GridLinesVisibility="None"
                        HeadersVisibility="Column"
                        IsReadOnly="False"
                        ItemsSource="{Binding Source={StaticResource FileListView}, NotifyOnSourceUpdated=True}"
                        KeyboardNavigation.TabNavigation="Once"
                        MinRowHeight="21"
                        MouseDown="ExplorerGrid_MouseDown"
                        PreviewKeyDown="ExplorerGrid_PreviewKeyDown"
                        PreviewMouseRightButtonDown="ExplorerGrid_PreviewMouseRightButtonDown"
                        RowStyle="{StaticResource RowStyle}"
                        SelectedItem="{Binding SelectedRow, Mode=TwoWay}"
                        SelectionChanged="ExplorerGrid_SelectionChanged"
                        SelectionMode="Extended"
                        SelectionUnit="FullRow"
                        Visibility="Collapsed">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn
                                x:Name="IconColumn"
                                CanUserResize="False"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Image
                                                Width="16"
                                                Margin="0,1,0,0"
                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                Source="{Binding Icon}">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Opacity" Value="1" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExtensionIsFontIcon}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsCut}" Value="True">
                                                                <Setter Property="Opacity" Value="0.5" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                FontSize="16"
                                                Text="{Binding ShortExtension}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                        <Setter Property="Opacity" Value="1" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                                                                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExtensionIsFontIcon}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                                <Setter Property="Margin" Value="-1,-6,0,0" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsCut}" Value="True">
                                                                <Setter Property="Opacity" Value="0.5" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn
                                x:Name="NameColumn"
                                Width="300"
                                Header="Name"
                                SortMemberPath="FullName">
                                <DataGridTextColumn.CellStyle>
                                    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="DataGridCell">
                                        <EventSetter Event="MouseEnter" Handler="NameColumnCell_MouseEnter" />
                                        <EventSetter Event="MouseLeave" Handler="NameColumnCell_MouseLeave" />
                                        <EventSetter Event="PreviewMouseDown" Handler="NameColumnCell_PreviewMouseDown" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style BasedOn="{StaticResource TextBoxFluentStyle}" TargetType="TextBox">
                                        <EventSetter Event="Loaded" Handler="NameColumnEdit_Loaded" />
                                        <EventSetter Event="LostFocus" Handler="NameColumnEdit_LostFocus" />
                                        <EventSetter Event="KeyDown" Handler="NameColumnEdit_KeyDown" />
                                        <EventSetter Event="TextChanged" Handler="NameColumnEdit_TextChanged" />
                                        <Setter Property="Text" Value="{Binding FullName, Mode=OneWay}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtensions}" Value="False">
                                                <Setter Property="Text" Value="{Binding NoExtName, Mode=OneWay}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Margin" Value="4,0,0,0" />
                                        <Setter Property="Text" Value="{Binding FullName, Mode=OneWay}" />
                                        <Setter Property="FontSize" Value="{Binding Source={StaticResource FontSize}}" />
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        <Setter Property="Opacity" Value="1" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtensions}" Value="False">
                                                <Setter Property="Text" Value="{Binding NoExtName, Mode=OneWay}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                                                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsCut}" Value="True">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                x:Name="Date"
                                Width="Auto"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Date modified"
                                IsReadOnly="True"
                                SortMemberPath="ModifiedTime">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Margin" Value="4,0,8,0" />
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        <Setter Property="Opacity" Value="1" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Text" Value="{Binding ModifiedTimeString}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="File">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Folder">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsCut}" Value="True">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                x:Name="Type"
                                Width="150"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Type"
                                IsReadOnly="True"
                                SortMemberPath="TypeName">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Margin" Value="4,0,0,0" />
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        <Setter Property="Text" Value="{Binding TypeName}" />
                                        <Setter Property="Opacity" Value="1" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                                                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsCut}" Value="True">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                x:Name="Size"
                                Width="Auto"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Size"
                                IsReadOnly="True"
                                SortMemberPath="Size">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Margin" Value="4,0" />
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        <Setter Property="Opacity" Value="1" />
                                        <Setter Property="Text" Value="{Binding SizeString}" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="File">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsCut}" Value="True">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Margin="0,40">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=ExplorerGrid, Path=Items.Count}" Value="0" />
                                            <Condition Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Visible" />
                                            <Condition Binding="{Binding ElementName=MainWin, Path=DirectoryLister.InProgress}" Value="False" />
                                            <Condition Binding="{Binding ElementName=PathBox, Path=IsEnabled}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=MainWin, Path=DevicesObject.CurrentDevice.Root}" Value="Enabled">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Visibility" Value="Visible" />
                                </Style>
                            </StackPanel.Style>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="This folder " />
                                <TextBlock FontStyle="Italic" Text="looks" />
                                <TextBlock Text=" empty" />
                            </StackPanel>
                            <TextBlock
                                HorizontalAlignment="Center"
                                FontSize="10"
                                Text="... to the naked eye" />
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=MainWin, Path=DevicesObject.CurrentDevice.Root}" Value="Enabled">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="This folder is empty." />
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
            <Expander
                Grid.Row="4"
                Margin="0,0,0,-3"
                helpers:ExpanderHelper.IsArrowVisible="False"
                helpers:ExpanderHelper.IsHeaderVisible="False"
                ExpandDirection="Up">
                <Expander.Style>
                    <Style BasedOn="{StaticResource FluentExpanderStyle}" TargetType="Expander">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtendedView}" Value="True" />
                                    <Condition Binding="{Binding ElementName=FileOperationsButton, Path=(helpers:RemoteToggle.IsTargetVisible)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsExpanded" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                        <Setter Property="IsExpanded" Value="False" />
                    </Style>
                </Expander.Style>
                <Expander.Content>
                    <Grid x:Name="FileOpDetailedGrid" IsVisibleChanged="FileOpDetailedGrid_IsVisibleChanged">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <GridSplitter
                            x:Name="FileOpDetailedSplitter"
                            Height="3"
                            Margin="0,-2,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            BorderBrush="Gray"
                            DragDelta="GridSplitter_DragDelta"
                            FocusVisualStyle="{x:Null}" />
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DataGrid
                                x:Name="CurrentOperationDetailedDataGrid"
                                AutoGenerateColumns="False"
                                CanUserDeleteRows="False"
                                CellStyle="{StaticResource DataGridCellStyle}"
                                ColumnDisplayIndexChanged="CurrentOperationDetailedDataGrid_ColumnDisplayIndexChanged"
                                ColumnHeaderStyle="{StaticResource FileOpHeaderResizeStyle}"
                                FocusVisualStyle="{x:Null}"
                                HeadersVisibility="Column"
                                ItemsSource="{Binding ElementName=CurrentOperationDataGrid, Path=ItemsSource}">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn
                                        x:Name="OpTypeColumn"
                                        Width="30"
                                        CanUserResize="False"
                                        CellTemplate="{StaticResource OperationIconTemplate}">
                                        <DataGridTemplateColumn.Header>
                                            <ui:FontIcon
                                                Margin="-7,0"
                                                Glyph="&#xE8AF;"
                                                ToolTip="Operation" />
                                        </DataGridTemplateColumn.Header>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        x:Name="FileNameColumn"
                                        Width="250"
                                        CellTemplate="{StaticResource FileOpFileNameTemplate}"
                                        Header="File Name" />
                                    <DataGridTemplateColumn
                                        x:Name="ProgressColumn"
                                        MinWidth="180"
                                        CellTemplate="{StaticResource FileOpProgressTemplate}"
                                        Header="Progress" />
                                    <DataGridTemplateColumn
                                        x:Name="SourceColumn"
                                        Width="200"
                                        CellTemplate="{StaticResource FileOpSourcePathTemplate}"
                                        Header="Source Path" />
                                    <DataGridTemplateColumn
                                        x:Name="DestColumn"
                                        Width="200"
                                        CellTemplate="{StaticResource FileOpTargetPathTemplate}"
                                        Header="Destination Path" />
                                </DataGrid.Columns>
                            </DataGrid>
                            <Border
                                Grid.Column="1"
                                BorderBrush="Gray"
                                BorderThickness="1,0,0,0" />
                            <WrapPanel
                                Grid.Column="1"
                                Margin="1,0,0,0"
                                FlowDirection="RightToLeft"
                                Orientation="Vertical">
                                <WrapPanel.Resources>
                                    <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon" />
                                </WrapPanel.Resources>
                                <StaticResource ResourceKey="FileOpStopMenu" />
                                <StaticResource ResourceKey="FileOpRemoveMenu" />
                                <StaticResource ResourceKey="FileOpDefaultFolderMenu" />
                            </WrapPanel>
                        </Grid>
                    </Grid>
                </Expander.Content>
            </Expander>
            <Grid Grid.Row="3">
                <Grid.Resources>
                    <Style BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" TargetType="Separator">
                        <Setter Property="Margin" Value="8,6" />
                    </Style>
                    <Style x:Key="MarginedTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Margin" Value="0,4" />
                    </Style>
                    <Style BasedOn="{StaticResource MarginedTextBlockStyle}" TargetType="TextBlock" />
                </Grid.Resources>
                <StackPanel Margin="8,0" Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal" Style="{StaticResource ItemsCountStackPanelStyle}">
                        <TextBlock x:Name="ItemsCountBlock" Style="{StaticResource ItemsCountStyle}" />
                        <TextBlock Text=" item" />
                        <TextBlock Text="s">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource MarginedTextBlockStyle}" TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock x:Name="UnfinishedBlock" Text=" *">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource MarginedTextBlockStyle}" TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="Cursor" Value="Arrow" />
                                    <Style.Triggers>
                                        <Trigger Property="Visibility" Value="Visible">
                                            <Setter Property="Cursor" Value="AppStarting" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Separator />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=SelectedItemsBlock, Path=Text}" Value="0">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock x:Name="SelectedItemsBlock" Style="{StaticResource SelectedItemsStyle}" />
                        <TextBlock Text=" item" />
                        <TextBlock Text="s">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource MarginedTextBlockStyle}" TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=SelectedItemsBlock, Path=Text}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text=" selected" />
                        <TextBlock
                            x:Name="TotalSizeBlock"
                            Margin="6,4,0,4"
                            Style="{StaticResource TotalSizeStyle}" />
                        <Separator />
                    </StackPanel>
                </StackPanel>
                <ui:SimpleStackPanel
                    x:Name="CurrentDeviceDetailsPanel"
                    Margin="6,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="6">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Device.Battery.Level}" />
                        <TextBlock Style="{StaticResource DeviceDetailsBatteryPercentStyle}" Text="%" />
                    </StackPanel>
                    <ui:FontIcon
                        x:Name="CurrentDeviceBatteryIcon"
                        Style="{StaticResource DeviceDetailsBatteryStyle}"
                        ToolTipService.InitialShowDelay="0"
                        ToolTipService.Placement="Top"
                        ToolTipService.ShowDuration="60000" />
                    <Separator Margin="2,6" Visibility="{Binding ElementName=AndroidTextBlock, Path=Visibility}" />
                    <ui:FontIcon
                        x:Name="UnsupportedAndroidIcon"
                        Glyph="&#xE7BA;"
                        Style="{DynamicResource UnsupportedIconStyle}"
                        ToolTip="Limited Support" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            x:Name="AndroidTextBlock"
                            Style="{StaticResource AndroidTextBlockStyle}"
                            Text="Android " />
                        <TextBlock x:Name="AndroidVersionBlock" Text="{Binding AndroidVersion}" />
                        <TextBlock Text=" (Recovery)">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0,4" />
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Device.Type}" Value="Sideload">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </ui:SimpleStackPanel>
            </Grid>
        </Grid>
        <ui:SplitView
            x:Name="FileOperationsSplitView"
            FocusVisualStyle="{x:Null}"
            OpenPaneLength="300"
            PaneClosing="FileOperationsSplitView_PaneClosing"
            PanePlacement="Right">
            <ui:SplitView.Style>
                <Style TargetType="ui:SplitView">
                    <Setter Property="IsPaneOpen" Value="False" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtendedView}" Value="False" />
                                <Condition Binding="{Binding ElementName=FileOperationsButton, Path=(helpers:RemoteToggle.IsTargetVisible)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsPaneOpen" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ui:SplitView.Style>
            <ui:SplitView.Pane>
                <Border BorderBrush="Gray" BorderThickness="1,1,0,0">
                    <Grid>
                        <Grid Margin="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="52" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="24"
                                Text="File Operations" />
                            <Menu HorizontalAlignment="Right">
                                <MenuItem Click="FileOperationsButton_Click" ToolTip="Hide">
                                    <MenuItem.Header>
                                        <ui:FontIcon Glyph="&#xE761;" Style="{DynamicResource GlyphFont}" />
                                    </MenuItem.Header>
                                </MenuItem>
                            </Menu>
                            <Border
                                Grid.Row="1"
                                Margin="0,0,0,6"
                                BorderBrush="Gray"
                                BorderThickness="1">
                                <WrapPanel FlowDirection="LeftToRight" Orientation="Horizontal">
                                    <WrapPanel.Resources>
                                        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon" />
                                    </WrapPanel.Resources>
                                    <StaticResource ResourceKey="FileOpStopMenu" />
                                    <StaticResource ResourceKey="FileOpRemoveMenu" />
                                    <StaticResource ResourceKey="FileOpDefaultFolderMenu" />
                                </WrapPanel>
                            </Border>
                            <Grid Grid.Row="2">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=CurrentOperationDataGrid, Path=Items.Count}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <DataGrid
                                    x:Name="CurrentOperationDataGrid"
                                    Width="Auto"
                                    MaxWidth="282"
                                    AutoGenerateColumns="False"
                                    CanUserDeleteRows="False"
                                    CellStyle="{StaticResource DataGridCellStyle}"
                                    FocusVisualStyle="{x:Null}"
                                    HeadersVisibility="None"
                                    ItemsSource="{Binding}">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn MinWidth="100" CellTemplate="{StaticResource FileOpProgressTemplate}" />
                                        <DataGridTemplateColumn CellTemplate="{StaticResource OperationIconTemplate}" />
                                        <DataGridTemplateColumn MaxWidth="130" CellTemplate="{StaticResource FileOpFileNameTemplate}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
            </ui:SplitView.Pane>
        </ui:SplitView>
        <ui:SplitView
            x:Name="DevicesSplitView"
            FocusVisualStyle="{x:Null}"
            OpenPaneLength="220"
            PaneClosing="DevicesSplitView_PaneClosing"
            PaneOpening="DevicesSplitView_PaneOpening"
            PanePlacement="Left">
            <ui:SplitView.Pane>
                <Border
                    BorderBrush="Gray"
                    BorderThickness="0,1,1,0"
                    Style="{StaticResource DevicesListStyle}">
                    <Grid Margin="6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Expander
                            x:Name="PairingExpander"
                            Collapsed="PairingExpander_Expanded"
                            Expanded="PairingExpander_Expanded"
                            Header="Pair / Connect Device"
                            Style="{StaticResource FluentExpanderStyle}">
                            <StackPanel x:Name="NewDevicePanel" Margin="0,0,0,6">
                                <Grid>
                                    <Grid.Resources>
                                        <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton" />
                                    </Grid.Resources>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=EnableMdns}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Style>
                                    </Grid.Style>
                                    <StackPanel Margin="6,0,0,0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <RadioButton
                                                x:Name="ManualConnectionRadioButton"
                                                Checked="ConnectionTypeRadioButton_Checked"
                                                Content="Manual"
                                                GroupName="ConnectionType"
                                                IsChecked="True"
                                                Unchecked="ConnectionTypeRadioButton_Checked" />
                                            <RadioButton
                                                Grid.Column="1"
                                                Margin="0,0,6,0"
                                                Content="mDNS"
                                                GroupName="ConnectionType" />
                                        </Grid>
                                        <StackPanel>
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=ManualConnectionRadioButton, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <Separator Margin="4,6,10,6" />
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <RadioButton
                                                    x:Name="QrConnectionRadioButton"
                                                    Checked="ConnectionTypeRadioButton_Checked"
                                                    ToolTip="QR Code"
                                                    Unchecked="ConnectionTypeRadioButton_Checked">
                                                    <ui:FontIcon Glyph="&#xED14;" Style="{StaticResource GlyphFont}" />
                                                </RadioButton>
                                                <RadioButton
                                                    x:Name="PasswordConnectionRadioButton"
                                                    Grid.Column="1"
                                                    Checked="ConnectionTypeRadioButton_Checked"
                                                    IsChecked="True"
                                                    ToolTip="6 Digit Code"
                                                    Unchecked="ConnectionTypeRadioButton_Checked">
                                                    <ui:FontIcon Glyph="&#xE192;" Style="{StaticResource GlyphFont}" />
                                                </RadioButton>
                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                                <Grid>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=EnableMdns}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </Style>
                                    </Grid.Style>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ui:FontIcon Glyph="&#xE946;" />
                                    <TextBlock
                                        Grid.Column="1"
                                        Margin="6,0,0,0"
                                        FontSize="13"
                                        Text="mDNS can be enabled in the settings"
                                        TextWrapping="Wrap" />
                                </Grid>
                                <Grid x:Name="MdnsPairingGrid">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ManualConnectionRadioButton, Path=IsChecked}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Style>
                                    </Grid.Style>
                                    <StackPanel x:Name="QrPairingPanel" Margin="-6,-6,-6,-8">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=MainWin, Path=MdnsService.State}" Value="Running" />
                                                            <Condition Binding="{Binding ElementName=QrConnectionRadioButton, Path=IsChecked}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </StackPanel.Style>
                                        <Border Style="{StaticResource QrBackgroundStyle}">
                                            <Image
                                                x:Name="PairingQrImage"
                                                Margin="6"
                                                RenderOptions.EdgeMode="Aliased" />
                                        </Border>
                                    </StackPanel>
                                    <StackPanel x:Name="MdnsLoadingPanel">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=MainWin, Path=MdnsService.State}" Value="Unchecked">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <ui:FontIcon
                                                Margin="0,0,8,0"
                                                Glyph="&#xE946;"
                                                Style="{StaticResource GlyphFont}" />
                                            <TextBlock
                                                Grid.Column="1"
                                                Text="Checking mDNS status please wait"
                                                TextWrapping="Wrap" />
                                        </Grid>
                                    </StackPanel>
                                    <StackPanel x:Name="MdnsDownPanel">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=MainWin, Path=MdnsService.State}" Value="NotRunning">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <StackPanel Orientation="Horizontal">
                                            <ui:FontIcon
                                                Margin="0,0,8,0"
                                                Glyph="&#xE783;"
                                                Style="{StaticResource GlyphFont}" />
                                            <TextBlock x:Name="MdnsDownBlock" Text="mDNS server is down" />
                                        </StackPanel>
                                        <Button
                                            x:Name="RestartAdbButton"
                                            Margin="0,6,0,0"
                                            HorizontalAlignment="Center"
                                            Click="RestartAdbButton_Click"
                                            Content="Restart ADB"
                                            Style="{StaticResource ButtonStyle}" />
                                    </StackPanel>
                                </Grid>
                                <StackPanel x:Name="ManualDeviceConnectPanel">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ManualConnectionRadioButton, Path=IsChecked}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=ManualPairingPanel, Path=IsEnabled}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <TextBox
                                        x:Name="NewDeviceIpBox"
                                        Margin="0,6,0,12"
                                        ui:ControlHelper.PlaceholderText="IP Address"
                                        KeyDown="NewDeviceIpBox_KeyDown"
                                        Style="{StaticResource NumericTextBoxStyle}"
                                        TextChanged="NewDeviceIpBox_TextChanged" />
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox
                                            x:Name="NewDevicePortBox"
                                            VerticalContentAlignment="Center"
                                            ui:ControlHelper.PlaceholderText="Port"
                                            KeyDown="NewDeviceIpBox_KeyDown"
                                            Style="{StaticResource NumericTextBoxStyle}"
                                            TextChanged="NewDevicePortBox_TextChanged" />
                                        <Button
                                            x:Name="ConnectNewDeviceButton"
                                            Grid.Column="1"
                                            Margin="8,0,0,0"
                                            VerticalAlignment="Stretch"
                                            Click="ConnectNewDeviceButton_Click"
                                            Content="Connect"
                                            IsEnabled="False"
                                            Style="{StaticResource ButtonStyle}" />
                                    </Grid>
                                </StackPanel>
                                <StackPanel x:Name="ManualPairingPanel" IsEnabled="False">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <Grid Margin="0,6,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ui:FontIcon
                                            Margin="0,0,8,0"
                                            Glyph="&#xE783;"
                                            Style="{StaticResource GlyphFont}" />
                                        <TextBlock
                                            Grid.Column="1"
                                            Text="Unable to connect. Try pairing"
                                            TextWrapping="Wrap" />
                                        <Button
                                            x:Name="CancelManualPairing"
                                            Grid.Column="2"
                                            Margin="4"
                                            Click="CancelManualPairing_Click"
                                            Style="{StaticResource ButtonStyle}"
                                            ToolTip="Cancel">
                                            <ui:FontIcon
                                                FontSize="10"
                                                Glyph="&#xE8BB;"
                                                Style="{StaticResource DisabledButtonGlyphStyle}" />
                                        </Button>
                                    </Grid>
                                    <Grid Margin="0,8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox
                                            x:Name="ManualPairingPortBox"
                                            VerticalContentAlignment="Center"
                                            ui:ControlHelper.PlaceholderText="Pairing Port"
                                            KeyDown="NewDeviceIpBox_KeyDown"
                                            Style="{StaticResource NumericTextBoxStyle}"
                                            TextChanged="ManualPairingPortBox_TextChanged" />
                                        <Button
                                            x:Name="PairNewDeviceButton"
                                            Grid.Column="1"
                                            Margin="8,0,0,0"
                                            HorizontalAlignment="Right"
                                            Click="PairNewDeviceButton_Click"
                                            Content="Pair"
                                            IsEnabled="False"
                                            Style="{StaticResource ButtonStyle}" />
                                    </Grid>
                                    <TextBox
                                        x:Name="ManualPairingCodeBox"
                                        ui:ControlHelper.PlaceholderText="Pairing Code"
                                        Style="{StaticResource PairingTextBoxStyle}"
                                        TextChanged="PairingCodeBox_TextChanged" />
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                        <Grid Grid.Row="1" Margin="0,6">
                            <ui:ProgressRing
                                Margin="6,4,0,0"
                                HorizontalAlignment="Left"
                                IsActive="True"
                                Style="{StaticResource FluentProgressRingStyle}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                FontSize="24"
                                Text="Devices" />
                        </Grid>
                        <ScrollViewer
                            Grid.Row="2"
                            Margin="0,0,-6,0"
                            HorizontalScrollBarVisibility="Disabled">
                            <Grid Grid.Row="2">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ScrollViewer, Mode=FindAncestor}, Path=ScrollableHeight}" Value="0">
                                                <Setter Property="Margin" Value="0,0,6,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Margin" Value="0,0,18,0" />
                                    </Style>
                                </Grid.Style>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ui:ItemsRepeater
                                    x:Name="DevicesList"
                                    DataContext="{Binding ElementName=MainWin, Path=DevicesObject}"
                                    ItemTemplate="{StaticResource DeviceDataTemplate}"
                                    ItemsSource="{Binding UIList}" />
                                <Border
                                    Grid.Row="1"
                                    Background="Transparent"
                                    MouseDown="Border_MouseDown" />
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </ui:SplitView.Pane>
        </ui:SplitView>
        <ui:SplitView
            x:Name="SettingsSplitView"
            FocusVisualStyle="{x:Null}"
            OpenPaneLength="350"
            PanePlacement="Right">
            <ui:SplitView.Resources>
                <Style
                    x:Key="CategorySeparator"
                    BasedOn="{StaticResource SeparatorStyle}"
                    TargetType="Separator">
                    <Setter Property="Width" Value="300" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style>
                <Style BasedOn="{StaticResource CategorySeparator}" TargetType="Separator" />
                <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
                <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
                <Style BasedOn="{StaticResource FluentExpanderStyle}" TargetType="Expander" />
            </ui:SplitView.Resources>
            <ui:SplitView.Pane>
                <Border
                    BorderBrush="Gray"
                    BorderThickness="1,1,0,0"
                    Style="{StaticResource DevicesListStyle}">
                    <Grid Margin="18,8,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Menu Margin="0,0,8,0" HorizontalAlignment="Right">
                            <MenuItem Click="PaneCollapse_Click" ToolTip="Hide">
                                <MenuItem.Header>
                                    <ui:FontIcon Glyph="&#xE761;" Style="{DynamicResource GlyphFont}" />
                                </MenuItem.Header>
                            </MenuItem>
                        </Menu>
                        <TextBlock
                            Margin="0,0,9,0"
                            HorizontalAlignment="Center"
                            FontSize="24"
                            Text="Settings" />
                        <Grid
                            x:Name="MissingAdbGrid"
                            Grid.Row="1"
                            Margin="30,0,40,8"
                            HorizontalAlignment="Center"
                            Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ui:FontIcon
                                Margin="8,2,8,0"
                                Glyph="&#xEA39;"
                                Style="{StaticResource GlyphFont}" />
                            <TextBlock
                                x:Name="MissingAdbTextblock"
                                Grid.Column="1"
                                FontWeight="Bold"
                                Text="Could not find ADB in the environment PATH"
                                TextWrapping="Wrap" />
                            <TextBlock
                                x:Name="AdbVersionTooLowTextblock"
                                Grid.Column="1"
                                FontWeight="Bold"
                                Text="ADB version too low"
                                TextWrapping="Wrap"
                                Visibility="Collapsed" />
                        </Grid>
                        <ScrollViewer Grid.Row="2" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                            <ui:SimpleStackPanel
                                Margin="6,0,24,0"
                                HorizontalAlignment="Left"
                                Spacing="6">
                                <Expander Header="Theme">
                                    <StackPanel VerticalAlignment="Bottom">
                                        <RadioButton
                                            Content="Light"
                                            GroupName="AppTheme"
                                            IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=Theme, Converter={StaticResource ThemeConverter}, ConverterParameter=light}" />
                                        <RadioButton
                                            Content="Dark"
                                            GroupName="AppTheme"
                                            IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=Theme, Converter={StaticResource ThemeConverter}, ConverterParameter=dark}" />
                                        <RadioButton
                                            Content="Windows Default"
                                            GroupName="AppTheme"
                                            IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=Theme, Converter={StaticResource ThemeConverter}, ConverterParameter=windowsDefault}" />
                                        <CheckBox
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=ForceFluentStyles}"
                                            Style="{StaticResource ForceFluentVisibility}">
                                            <Grid>
                                                <TextBlock Text="Force Fluent Styles" />
                                                <Grid Margin="10,0" HorizontalAlignment="Right">
                                                    <Grid.Resources>
                                                        <Style BasedOn="{StaticResource RestartRequiredIconsStyle}" TargetType="ui:FontIcon" />
                                                    </Grid.Resources>
                                                    <ui:FontIcon Glyph="&#xF83E;" />
                                                    <ui:FontIcon Glyph="&#xF83F;" />
                                                    <ui:FontIcon Glyph="&#xEA84;" Style="{StaticResource RestartWarningIconStyle}" />
                                                </Grid>
                                            </Grid>
                                        </CheckBox>
                                    </StackPanel>
                                </Expander>
                                <Separator Style="{StaticResource CategorySeparator}" />
                                <Expander x:Name="WorkingDirectoriesExpander" Header="Working Directories">
                                    <StackPanel>
                                        <TextBlock Margin="4,0" Text="Default Folder" />
                                        <TextBox
                                            Margin="0,6"
                                            ui:ControlHelper.PlaceholderText="Click To Browse"
                                            MouseUp="ChangeDefaultFolderButton_Click"
                                            Style="{StaticResource TooltipTextBoxStyle}"
                                            Text="{Binding Source={x:Static models:Data.Settings}, Path=DefaultFolder}" />
                                        <Grid Margin="0,4,0,0">
                                            <TextBlock Margin="4,0,0,0" Text="Override ADB Path" />
                                            <Grid Margin="10,0" HorizontalAlignment="Right">
                                                <Grid.Resources>
                                                    <Style BasedOn="{StaticResource RestartRequiredIconsStyle}" TargetType="ui:FontIcon" />
                                                </Grid.Resources>
                                                <ui:FontIcon Glyph="&#xF83E;" />
                                                <ui:FontIcon Glyph="&#xF83F;" />
                                                <ui:FontIcon Glyph="&#xEA84;" Style="{StaticResource RestartWarningIconStyle}" />
                                            </Grid>
                                        </Grid>
                                        <TextBox
                                            Margin="0,6"
                                            ui:ControlHelper.PlaceholderText="Click To Browse"
                                            MouseUp="ManualAdbPath_MouseUp"
                                            Style="{StaticResource TooltipTextBoxStyle}"
                                            Text="{Binding Source={x:Static models:Data.Settings}, Path=ManualAdbPath}" />
                                    </StackPanel>
                                </Expander>
                                <Separator Style="{StaticResource CategorySeparator}" />
                                <Expander Header="File Double-Click Behavior">
                                    <CheckBox Content="Pull To Default Folder">
                                        <CheckBox.Style>
                                            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
                                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                <Setter Property="IsChecked" Value="{Binding Source={x:Static models:Data.Settings}, Path=PullOnDoubleClick}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=DefaultFolder}" Value="">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                        <Setter Property="IsChecked" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                </Expander>
                                <Separator Style="{StaticResource CategorySeparator}" />
                                <Expander Header="Connection">
                                    <StackPanel>
                                        <CheckBox Content="Enable mDNS (experimental)" IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=EnableMdns}" />
                                        <CheckBox Content="Automatically Enable Root" IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=AutoRoot}" />
                                        <CheckBox Content="Remember Last IP" IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=RememberIp}" />
                                        <CheckBox Content="Remember Last Port">
                                            <CheckBox.Style>
                                                <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                    <Setter Property="IsEnabled" Value="True" />
                                                    <Setter Property="IsChecked" Value="{Binding Source={x:Static models:Data.Settings}, Path=RememberPort}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=RememberIp}" Value="False">
                                                            <Setter Property="IsChecked" Value="False" />
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                        <CheckBox Content="Automatically Open For Browsing" IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=AutoOpen}" />
                                    </StackPanel>
                                </Expander>
                                <Separator Style="{StaticResource CategorySeparator}" />
                                <Expander Header="Show">
                                    <StackPanel>
                                        <CheckBox Content="File Name Extensions" IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtensions}" />
                                        <CheckBox Content="Hidden Items" IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=ShowHiddenItems}" />
                                    </StackPanel>
                                </Expander>
                                <Separator Style="{StaticResource CategorySeparator}" />
                                <Expander Header="File Operations">
                                    <StackPanel>
                                        <RadioButton Content="Compact" GroupName="FileOpView" />
                                        <RadioButton
                                            Content="Detailed"
                                            GroupName="FileOpView"
                                            IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtendedView}" />
                                    </StackPanel>
                                </Expander>
                            </ui:SimpleStackPanel>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </ui:SplitView.Pane>
        </ui:SplitView>
    </Grid>
</Window>
