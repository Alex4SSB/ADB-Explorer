<Window
    x:Class="ADB_Explorer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app_prop="clr-namespace:ADB_Explorer.Properties"
    xmlns:converters="clr-namespace:ADB_Explorer.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ADB_Explorer.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ADB_Explorer.Models"
    xmlns:services="clr-namespace:ADB_Explorer.Services"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    x:Name="MainWin"
    Title="ADB Explorer"
    Width="800"
    Height="450"
    MinWidth="605"
    MinHeight="400"
    ui:ThemeManager.IsThemeAware="True"
    ui:WindowHelper.UseModernWindowStyle="True"
    Background="{DynamicResource AdbWindowBackground}"
    Closing="Window_Closing"
    Cursor="{Binding ElementName=UnfinishedBlock, Path=Cursor}"
    KeyDown="Window_KeyDown"
    MouseDown="Window_MouseDown"
    MouseUp="Window_MouseUp"
    SizeChanged="Window_SizeChanged"
    SourceInitialized="Window_SourceInitialized"
    StateChanged="MainWin_StateChanged"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <sys:Int16 x:Key="FontSize">13</sys:Int16>
        <converters:EnumToBooleanConverter x:Key="ThemeConverter" EnumType="models:AppTheme" />
        <converters:DoubleEquals x:Key="DoubleEquals" />
        <CollectionViewSource x:Key="FileListView" Source="{Binding ElementName=MainWin, Path=DirectoryLister.FileList}" />
        <CollectionViewSource x:Key="SortedSettingsView" Source="{Binding Source={x:Static Member=services:UISettings.SortSettings}}" />
        <Style
            x:Key="FileOpHeaderResizeStyle"
            BasedOn="{StaticResource FileOpColumnHeaderStyle}"
            TargetType="DataGridColumnHeader">
            <EventSetter Event="SizeChanged" Handler="DataGridColumnHeader_SizeChanged" />
        </Style>
        <Menu
            x:Key="DeviceActionsMenu"
            Margin="0,0,4,0"
            x:Shared="False"
            Resources="{StaticResource DeviceMenuStyles}">
            <Menu.Style>
                <Style BasedOn="{StaticResource MenuStyle}" TargetType="Menu">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Height" Value="30" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMdns}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Device.Status}" Value="Online">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=UseFluentStyles}" Value="True">
                            <Setter Property="Height" Value="32" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Menu.Style>
            <MenuItem
                SubmenuClosed="MenuItem_SubmenuClosed"
                SubmenuOpened="MenuItem_SubmenuOpened"
                ToolTip="More Actions">
                <MenuItem.Header>
                    <ui:FontIcon Margin="-6" Glyph="&#xE712;" />
                </MenuItem.Header>
                <MenuItem Header="Root Access">
                    <MenuItem.Icon>
                        <ui:FontIcon Glyph="&#xE7EF;" />
                    </MenuItem.Icon>
                    <MenuItem IsEnabled="False">
                        <MenuItem.Header>
                            <StackPanel>
                                <TextBlock FontWeight="Bold" Text="Status: " />
                                <TextBlock
                                    Margin="0"
                                    FontWeight="Bold"
                                    Text="{Binding Device.Root}" />
                                <TextBlock
                                    FontWeight="Bold"
                                    Style="{StaticResource RecoveryRootStatusStyle}"
                                    Text=" - Recovery" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator>
                        <Separator.Style>
                            <Style BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" TargetType="Separator">
                                <Setter Property="Margin" Value="-11,0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Device.Root}" Value="Forbidden">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Device.Type}" Value="Sideload">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Separator.Style>
                    </Separator>
                    <MenuItem Click="EnableDeviceRootToggle_Click">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Device.Root}" Value="Forbidden">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Device.Type}" Value="Sideload">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
                                        <Setter Property="Text" Value="Enable" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Device.Root}" Value="Enabled">
                                                <Setter Property="Text" Value="Disable" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Reboot">
                    <MenuItem.Icon>
                        <ui:FontIcon Glyph="&#xE777;" />
                    </MenuItem.Icon>
                    <MenuItem IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock FontWeight="Bold" Text="Reboot Into:" />
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator Margin="-10,0" />
                    <MenuItem
                        helpers:TextHelper.AltText=""
                        Click="RebootMenuItem_Click"
                        Header="System Image" />
                    <MenuItem
                        helpers:TextHelper.AltText="bootloader"
                        Click="RebootMenuItem_Click"
                        Header="Bootloader" />
                    <MenuItem
                        helpers:TextHelper.AltText="recovery"
                        Click="RebootMenuItem_Click"
                        Header="Recovery" />
                    <MenuItem
                        helpers:TextHelper.AltText="sideload"
                        Click="RebootMenuItem_Click"
                        Header="Sideload" />
                    <MenuItem
                        helpers:TextHelper.AltText="sideload-auto-reboot"
                        Click="RebootMenuItem_Click"
                        Header="Sideload (Auto Reboot)" />
                </MenuItem>
            </MenuItem>
        </Menu>
        <MenuItem
            x:Key="PushFilesMenu"
            x:Name="PushFilesMenu"
            x:Shared="False"
            Click="PushMenuButton_Click"
            Header="Files"
            InputGestureText="Alt+V"
            IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PushFilesFoldersEnabled}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE8A5;" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            x:Key="PushFoldersMenu"
            x:Name="PushFoldersMenu"
            x:Shared="False"
            Click="PushMenuButton_Click"
            Header="Folders"
            IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PushFilesFoldersEnabled}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE8B7;" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            x:Key="PushPackagesMenu"
            x:Name="PushPackagesMenu"
            x:Shared="False"
            Click="PushPackagesMenu_Click"
            Header="Install Packages"
            InputGestureText="Alt+I"
            IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PushPackageEnabled}">
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PushPackageVisible}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=(helpers:SelectionHelper.MenuType)}" Value="Context" />
                                <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ContextPushPackagesEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE7B8;" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuPullItem"
            Click="ContextMenuPullItem_Click"
            Header="Pull"
            InputGestureText="Alt+C"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <Grid Margin="-3,0,-4,0">
                    <ui:FontIcon HorizontalAlignment="Left" Glyph="&#xE8EA;" />
                    <ui:FontIcon
                        Margin="11,0,0,0"
                        FontSize="12"
                        Glyph="&#xE974;" />
                </Grid>
            </MenuItem.Icon>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PullEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuPushItem"
            Header="Push"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <Grid Margin="-3,0,-4,0">
                    <ui:FontIcon HorizontalAlignment="Left" Glyph="&#xE8EA;" />
                    <ui:FontIcon
                        Margin="11,0,0,0"
                        FontSize="12"
                        Glyph="&#xE973;" />
                </Grid>
            </MenuItem.Icon>
            <StaticResource ResourceKey="PushFoldersMenu" />
            <StaticResource ResourceKey="PushFilesMenu" />
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ContextPushEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="MenuDeleteItem"
            x:Shared="False"
            Click="ContextMenuDeleteItem_Click"
            Header="{Binding Source={x:Static Member=models:Data.FileActions}, Path=DeleteAction}"
            InputGestureText="Del"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE74D;" />
            </MenuItem.Icon>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=DeleteEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuRenameItem"
            Click="ContextMenuRenameItem_Click"
            Header="Rename"
            InputGestureText="F2"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE8AC;" />
            </MenuItem.Icon>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RenameEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuCutItem"
            Click="ContextMenuCutItem_Click"
            Header="Cut"
            InputGestureText="Ctrl+X"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE8C6;" />
            </MenuItem.Icon>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CutEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuCopyItem"
            Click="CopyMenuButton_Click"
            Header="Copy"
            InputGestureText="Ctrl+C"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE8C8;" />
            </MenuItem.Icon>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuCopyPathItem"
            x:Shared="False"
            Click="CopyPathMenuItem_Click"
            Header="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyPathAction}"
            InputGestureText="Shift+Ctrl+C"
            IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyPathEnabled}"
            Style="{StaticResource ContextMenuCopyPathStyle}">
            <MenuItem.Icon>
                <TextBlock Text="\\…" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            x:Key="UninstallMenuItem"
            x:Shared="False"
            Click="UninstallPackage_Click"
            Header="Uninstall"
            InputGestureText="Shift+F11">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE25B;" />
            </MenuItem.Icon>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=(helpers:SelectionHelper.MenuType)}" Value="Context" />
                                <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=UninstallPackageEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}, Path=(helpers:SelectionHelper.MenuType)}" Value="Submenu">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}, Path=(helpers:SelectionHelper.MenuType)}" Value="Submenu" />
                                <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=SubmenuUninstallEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="False" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="PackageActionsItem"
            helpers:SelectionHelper.MenuType="Submenu"
            x:Shared="False"
            Header="Package"
            IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PackageActionsEnabled}">
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=(helpers:SelectionHelper.MenuType)}" Value="Context" />
                                <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PackageActionsEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE7B8;" />
            </MenuItem.Icon>
            <MenuItem
                Click="InstallPackage_Click"
                Header="Install"
                InputGestureText="Shift+F10"
                IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=InstallPackageEnabled}">
                <MenuItem.Icon>
                    <ui:FontIcon Glyph="&#xE896;" />
                </MenuItem.Icon>
            </MenuItem>
            <StaticResource ResourceKey="UninstallMenuItem" />
            <Separator />
            <MenuItem
                Click="CopyToTemp_Click"
                Header="Copy To Temp"
                InputGestureText="Shift+F12"
                IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyToTempEnabled}">
                <MenuItem.Icon>
                    <ui:FontIcon Glyph="&#xF413;" />
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuPasteItem"
            Click="ContextMenuPasteItem_Click"
            InputGestureText="Ctrl+V"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE77F;" />
            </MenuItem.Icon>
            <MenuItem.Header>
                <StackPanel>
                    <TextBlock Text="Paste " />
                    <TextBlock Margin="0" Text="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" />
                    <TextBlock Margin="0" Text=" Item" />
                    <TextBlock Margin="0" Text="s">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" Value="1">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </MenuItem.Header>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static models:Data.FileActions}, Path=ContextPasteEnabled}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="NewFolderMenuItem"
            x:Shared="False"
            Click="NewFolderMenuItem_Click"
            Header="Folder">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE8F4;" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            x:Key="NewFileMenuItem"
            x:Shared="False"
            Click="NewFileMenuItem_Click"
            Header="File">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE8A5;" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            x:Key="ContextMenuNewItem"
            Header="New"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xECC8;" />
            </MenuItem.Icon>
            <StaticResource ResourceKey="NewFolderMenuItem" />
            <StaticResource ResourceKey="NewFileMenuItem" />
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ContextNewEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="RestoreMenuItem"
            Click="RestoreMenuButton_Click"
            Header="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RestoreAction}"
            InputGestureText="Ctrl+R"
            Resources="{StaticResource ContextSubMenuStyles}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE845;" />
            </MenuItem.Icon>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RestoreEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <MenuItem
            x:Key="PathMenuEdit"
            x:Shared="False"
            Click="PathMenuEdit_Click"
            Header="Edit"
            InputGestureText="F6">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE70F;" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            x:Key="PathMenuCopy"
            x:Shared="False"
            Click="PathMenuCopy_Click"
            Header="Copy"
            InputGestureText="Alt+F6">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE8C8;" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            x:Key="UpdateModifiedMenu"
            x:Shared="False"
            Click="ModifiedFromName_Click"
            Header="Update Time Modified"
            InputGestureText="Ctrl+U"
            IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=UpdateModifiedEnabled}">
            <MenuItem.Icon>
                <ui:FontIcon Glyph="&#xE787;" />
            </MenuItem.Icon>
            <MenuItem.Style>
                <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=(helpers:SelectionHelper.MenuType)}" Value="Context" />
                                <Condition Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=UpdateModifiedEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>
        <ContextMenu
            x:Key="RowContextMenu"
            helpers:SelectionHelper.MenuType="Context"
            Resources="{StaticResource ContextMenuStyles}">
            <StaticResource ResourceKey="ContextMenuPullItem" />
            <StaticResource ResourceKey="ContextMenuPushItem" />
            <Separator Style="{StaticResource Separator1Style}" />
            <StaticResource ResourceKey="ContextMenuNewItem" />
            <Separator Style="{StaticResource Separator2Style}" />
            <StaticResource ResourceKey="ContextMenuCutItem" />
            <StaticResource ResourceKey="ContextMenuCopyItem" />
            <StaticResource ResourceKey="ContextMenuPasteItem" />
            <StaticResource ResourceKey="ContextMenuRenameItem" />
            <StaticResource ResourceKey="ContextMenuCopyPathItem" />
            <StaticResource ResourceKey="UpdateModifiedMenu" />
            <StaticResource ResourceKey="UninstallMenuItem" />
            <StaticResource ResourceKey="RestoreMenuItem" />
            <Separator Style="{StaticResource Separator3Style}" />
            <StaticResource ResourceKey="PackageActionsItem" />
            <Separator Style="{StaticResource Separator4Style}" />
            <StaticResource ResourceKey="MenuDeleteItem" />
            <StaticResource ResourceKey="PushPackagesMenu" />
            <MenuItem
                Header="Recycle Bin Is Empty"
                Icon="-"
                IsEnabled="False">
                <MenuItem.Style>
                    <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=EmptyTrash}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
        </ContextMenu>
        <Menu
            x:Key="FileOpStopMenu"
            x:Shared="False"
            Style="{StaticResource StopFileOpMenuStyle}">
            <MenuItem Click="StopFileOperations_Click">
                <MenuItem.Style>
                    <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                        <Setter Property="Header">
                            <Setter.Value>
                                <ui:FontIcon Glyph="&#xE71A;" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTip" Value="Stop" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, NotifyOnTargetUpdated=True}" Value="False">
                                <Setter Property="Header">
                                    <Setter.Value>
                                        <ui:FontIcon Glyph="&#xE768;" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="Resume" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
        </Menu>
        <Menu
            x:Key="FileOpRemoveMenu"
            x:Shared="False"
            FlowDirection="LeftToRight">
            <Menu.Style>
                <Style BasedOn="{StaticResource MenuStyle}" TargetType="Menu">
                    <Setter Property="IsEnabled" Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=CurrentOperationDetailedDataGrid, Path=Items.Count}" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Menu.Style>
            <MenuItem ToolTip="Remove Operations">
                <MenuItem.Header>
                    <ui:FontIcon Glyph="&#xE711;" />
                </MenuItem.Header>
                <MenuItem Click="RemovePending_Click" Header="Pending">
                    <MenuItem.Icon>
                        <ui:FontIcon Glyph="&#xECC5;" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="RemoveCompleted_Click" Header="Completed">
                    <MenuItem.Icon>
                        <ui:FontIcon Glyph="&#xE930;" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="RemovePendingAndCompleted_Click" Header="All">
                    <MenuItem.Icon>
                        <ui:FontIcon Glyph="&#xECC9;" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Menu x:Key="FileOpDefaultFolderMenu" x:Shared="False">
            <Menu.Style>
                <Style BasedOn="{StaticResource MenuStyle}" TargetType="Menu">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=DefaultFolder}" Value="">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="IsEnabled" Value="True" />
                </Style>
            </Menu.Style>
            <MenuItem Click="OpenDefaultFolder_Click" ToolTip="Open Default Folder">
                <MenuItem.Header>
                    <ui:FontIcon Glyph="&#xED25;" />
                </MenuItem.Header>
            </MenuItem>
        </Menu>
        <ContextMenu
            x:Key="PathButtonsMenu"
            Name="PathButtonsMenu"
            Resources="{StaticResource ContextMenuStyles}">
            <StaticResource ResourceKey="PathMenuEdit" />
            <StaticResource ResourceKey="PathMenuCopy" />
        </ContextMenu>
        <ui:Flyout x:Key="PairServiceFlyout">
            <StackPanel>
                <TextBlock Text="On phone: Switch wireless debugging off then on" />
                <Grid>
                    <ui:FontIcon
                        Margin="6"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Glyph="&#xE946;"
                        Style="{StaticResource GlyphFont}" />
                    <Button
                        x:Name="PairFlyoutCloseButton"
                        Margin="0,10,4,0"
                        HorizontalAlignment="Right"
                        Click="PairFlyoutCloseButton_Click"
                        Content="Close"
                        Style="{StaticResource ButtonStyle}" />
                </Grid>
            </StackPanel>
        </ui:Flyout>
        <DataTemplate x:Key="DriveItemTemplate" DataType="Drive">
            <Button
                Click="DriveItem_Click"
                GotFocus="Drive_GotFocus"
                MouseDoubleClick="DriveItem_MouseDoubleClick"
                Style="{StaticResource DriveItemStyle}">
                <Grid Width="260" Margin="0,-4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ui:FontIcon
                        Grid.RowSpan="3"
                        Margin="0,0,8,0"
                        FontSize="32"
                        Glyph="{Binding DriveIcon}"
                        Style="{StaticResource DriveIconStyle}" />
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style BasedOn="{StaticResource DriveNameTextBlockStyle}" TargetType="TextBlock" />
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding DisplayName}" />
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="External">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Emulated">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text=" (" />
                            <TextBlock
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource ConsoleFont}"
                                FontWeight="Regular"
                                Text="{Binding ID}" />
                            <TextBlock Text=")" />
                        </StackPanel>
                    </StackPanel>
                    <ui:ProgressBar
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="0,6"
                        Value="{Binding UsageP, Mode=OneWay}">
                        <ui:ProgressBar.Style>
                            <Style BasedOn="{StaticResource DriveUsageBarStyle}" TargetType="ui:ProgressBar">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UsageP}" Value="-1">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ui:ProgressBar.Style>
                    </ui:ProgressBar>
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UsageP}" Value="-1">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="{Binding Available, Mode=OneWay}" />
                        <TextBlock Text=" free of " />
                        <TextBlock Text="{Binding Size, Mode=OneWay}" />
                    </StackPanel>
                    <Grid
                        Grid.Row="1"
                        Grid.RowSpan="2"
                        Grid.Column="1">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="Trash">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="Temp">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="Package">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ItemsCount}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="{Binding ItemsCount}" />
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="Trash">
                                                <Setter Property="Text" Value=" Item" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Temp">
                                                <Setter Property="Text" Value=" APK Installer" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Package">
                                                <Setter Property="Text" Value=" Package" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="s">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ItemsCount}" Value="1">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                        <TextBlock Text="Empty">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ItemsCount}" Value="0">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Border
                        Grid.RowSpan="3"
                        Grid.ColumnSpan="2"
                        Style="{StaticResource SpecialDriveAccent}" />
                </Grid>
            </Button>
        </DataTemplate>
        <Style
            x:Key="DataGridCellStyle"
            BasedOn="{StaticResource BaseCellStyle}"
            TargetType="{x:Type DataGridCell}">
            <EventSetter Event="RequestBringIntoView" Handler="DataGridCell_RequestBringIntoView" />
        </Style>
        <Style
            x:Key="RowStyle"
            BasedOn="{StaticResource BaseRowStyle}"
            TargetType="DataGridRow">
            <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}" />
            <EventSetter Event="Unselected" Handler="DataGridRow_Unselected" />
            <EventSetter Event="MouseDown" Handler="DataGridRow_MouseDown" />
            <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick" />
            <EventSetter Event="KeyDown" Handler="DataGridRow_KeyDown" />
        </Style>
        <DataTemplate x:Key="DeviceDataTemplate" DataType="Device">
            <Expander x:Name="DeviceExpander" Style="{StaticResource DeviceExpanderStyle}">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource DeviceStatusFontSizeStyle}" TargetType="ui:FontIcon" />
                            </Grid.Resources>
                            <ui:FontIcon Glyph="{Binding TypeIcon}" />
                            <Grid Style="{StaticResource DeviceStatusGridStyle}">
                                <ui:FontIcon Style="{StaticResource DeviceStatusIconStyle}" />
                                <ui:FontIcon Foreground="{Binding Background, RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor, AncestorLevel=2}}" Glyph="{Binding StatusIcon}" />
                            </Grid>
                        </Grid>
                        <TextBlock
                            Grid.Column="1"
                            Margin="4"
                            Style="{StaticResource DeviceNameTextBlockStyle}"
                            TextTrimming="CharacterEllipsis" />
                        <ui:SimpleStackPanel
                            Grid.Column="2"
                            Margin="2,0,0,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Spacing="6">
                            <ui:FontIcon Glyph="&#xE7EF;" Style="{StaticResource RootIconStyle}" />
                            <ui:FontIcon
                                Glyph="&#xE838;"
                                Style="{StaticResource DeviceOpenIconStyle}"
                                ToolTip="Currently Browsing" />
                            <ui:FontIcon Style="{StaticResource BatteryIconStyle}" />
                        </ui:SimpleStackPanel>
                    </Grid>
                </Expander.Header>
                <StackPanel x:Name="DeviceExpandPanel" Margin="0,5">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMdns}" Value="True" />
                                            <Condition Binding="{Binding Device.MdnsType}" Value="QrCode" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            x:Name="PairingCodeTextBox"
                            ui:ControlHelper.PlaceholderText="Pairing Code"
                            ui:TextBoxHelper.IsDeleteButtonVisible="False"
                            KeyDown="PairingCodeTextBox_KeyDown"
                            MouseDoubleClick="PairingCodeTextBox_MouseDoubleClick"
                            Style="{StaticResource PairingTextBoxStyle}"
                            Text="{Binding UIPairingCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            TextChanged="PairingCodeTextBox_TextChanged" />
                        <Button
                            Grid.Column="1"
                            Margin="6,0,0,0"
                            VerticalAlignment="Center"
                            ui:FlyoutService.Flyout="{StaticResource PairServiceFlyout}"
                            Click="PairServiceButton_Click"
                            Content="Pair">
                            <Button.Style>
                                <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=PairingCodeTextBox, Path=Text.Length}" Value="11" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StaticResource ResourceKey="DeviceActionsMenu" />
                        <Button
                            x:Name="OpenDeviceButton"
                            Grid.Column="1"
                            Margin="4,0"
                            Padding="0,5,0,6"
                            HorizontalAlignment="Stretch"
                            Click="OpenDeviceButton_Click"
                            Content="Browse"
                            Style="{StaticResource DeviceBrowseButtonStyle}" />
                        <Button
                            x:Name="DisconnectDeviceButton"
                            Grid.Column="2"
                            Margin="4,0,0,0"
                            Click="DisconnectDeviceButton_Click"
                            Style="{StaticResource DeviceRemoveButtonStyle}">
                            <StackPanel Orientation="Horizontal">
                                <ui:FontIcon
                                    Margin="-4,1,4,-2"
                                    VerticalAlignment="Center"
                                    Glyph="&#xECC9;"
                                    Style="{DynamicResource DisabledButtonGlyphStyle}" />
                                <Grid>
                                    <TextBlock Text="Remove" Visibility="Hidden" />
                                    <TextBlock Style="{StaticResource RemoveDeviceButtonStyle}" />
                                </Grid>
                            </StackPanel>
                        </Button>
                    </Grid>
                </StackPanel>
            </Expander>
        </DataTemplate>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="TaskBarInfo" ProgressValue="{Binding ElementName=UpperProgressBar, Path=Value}" />
    </Window.TaskbarItemInfo>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Menu Margin="7,4" VerticalAlignment="Center">
                    <Menu.Resources>
                        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
                            <Setter Property="FontSize" Value="18" />
                        </Style>
                        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock" />
                    </Menu.Resources>
                    <MenuItem
                        x:Name="OpenDevicesButton"
                        d:IsEnabled="True"
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="OpenDevicesButton_Click"
                        IsEnabled="False"
                        ToolTip="Devices">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=IsAnimated}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem.Header>
                            <Grid>
                                <ui:FontIcon Glyph="&#xE8CC;" />
                                <TextBlock
                                    Margin="0,0,-10,-12"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    d:Text="1"
                                    Text="{Binding ElementName=DevicesList, Path=ItemsSource.Count, NotifyOnTargetUpdated=True}">
                                    <TextBlock.Triggers>
                                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                            <BeginStoryboard Storyboard="{StaticResource PulsatingBackgroundStoryboard}" />
                                        </EventTrigger>
                                    </TextBlock.Triggers>
                                </TextBlock>
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="OpenDevicesButton_Click"
                        IsEnabled="{Binding ElementName=OpenDevicesButton, Path=IsEnabled}"
                        ToolTip="Devices">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=IsAnimated}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem.Header>
                            <Grid>
                                <ui:FontIcon Glyph="&#xE8CC;" />
                                <TextBlock
                                    Margin="0,0,-10,-12"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Text="{Binding ElementName=DevicesList, Path=ItemsSource.Count, NotifyOnTargetUpdated=True}" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator Margin="4,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <MenuItem
                        x:Name="PullMenuButton"
                        Click="PullMenuButton_Click"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PullEnabled}"
                        ToolTip="Pull (Alt+C)">
                        <MenuItem.Header>
                            <Grid Margin="-4,0,-6,0">
                                <ui:FontIcon HorizontalAlignment="Left" Glyph="&#xE8EA;" />
                                <ui:FontIcon
                                    Margin="14,0,0,0"
                                    FontSize="14"
                                    Glyph="&#xE974;" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="PushMenuButton"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PushEnabled}"
                        Resources="{StaticResource TopMenuStyles}"
                        ToolTip="Push">
                        <MenuItem.Header>
                            <Grid Margin="-4,0,-6,0">
                                <ui:FontIcon
                                    HorizontalAlignment="Left"
                                    FontSize="18"
                                    Glyph="&#xE8EA;" />
                                <ui:FontIcon
                                    Margin="14,0,0,0"
                                    FontSize="14"
                                    Glyph="&#xE973;" />
                            </Grid>
                        </MenuItem.Header>
                        <StaticResource ResourceKey="PushFoldersMenu" />
                        <StaticResource ResourceKey="PushFilesMenu" />
                        <StaticResource ResourceKey="PushPackagesMenu" />
                    </MenuItem>
                    <Separator Margin="4,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <MenuItem
                        x:Name="NewMenuButton"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=NewEnabled}"
                        Resources="{StaticResource TopMenuStyles}">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=NewMenuVisible}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <ui:FontIcon Glyph="&#xECC8;" Style="{StaticResource DisabledGlyphStyle}" />
                                <TextBlock Text="New" />
                            </StackPanel>
                        </MenuItem.Header>
                        <StaticResource ResourceKey="NewFolderMenuItem" />
                        <StaticResource ResourceKey="NewFileMenuItem" />
                    </MenuItem>
                    <MenuItem
                        x:Name="CutMenuButton"
                        helpers:StyleHelper.ContentAnimation="UpMarquee"
                        Click="ContextMenuCutItem_Click"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CutEnabled}"
                        ToolTip="Cut (Ctrl+X)">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE8C6;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="CopyMenuButton"
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="CopyMenuButton_Click"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=CopyEnabled}"
                        ToolTip="Copy (Ctrl+C)">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE8C8;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="PasteMenuButton"
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="ContextMenuPasteItem_Click"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=PasteEnabled}">
                        <MenuItem.ToolTip>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Paste " />
                                <TextBlock Text="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" />
                                <TextBlock Text=" Item" />
                                <TextBlock Text="s">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" Value="1">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text=" (Ctrl+V)" />
                            </StackPanel>
                        </MenuItem.ToolTip>
                        <MenuItem.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ui:FontIcon Margin="0,1,0,0" Glyph="&#xE77F;" />
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    d:Visibility="Visible">
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource DisabledTextBlockStyle}" TargetType="TextBlock">
                                            <Setter Property="Text" Value="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count, NotifyOnTargetUpdated=True}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.CutItems}, Path=Count}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Collapsed">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="RenameMenuButton"
                        helpers:StyleHelper.ContentAnimation="Bounce"
                        Click="ContextMenuRenameItem_Click"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RenameEnabled}"
                        ToolTip="Rename (F2)">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE8AC;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="RestoreMenuButton"
                        d:Visibility="Visible"
                        Click="RestoreMenuButton_Click"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=RestoreEnabled}"
                        ToolTip="{Binding Source={x:Static Member=models:Data.FileActions}, Path=MenuRestoreTooltip}">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsRecycleBin}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE845;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="DeleteMenuButton"
                        Click="ContextMenuDeleteItem_Click"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=DeleteEnabled}"
                        ToolTip="{Binding Source={x:Static Member=models:Data.FileActions}, Path=MenuDeleteTooltip}">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE74D;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="UninstallPackageMenu"
                        d:Visibility="Visible"
                        helpers:StyleHelper.ContentAnimation="DownMarquee"
                        Click="UninstallPackage_Click"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=UninstallPackageEnabled}"
                        ToolTip="Uninstall (Shift+F11)">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource AdbMenuItemStyle}" TargetType="MenuItem">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=UninstallVisible}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE25B;" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="MoreMenuButton"
                        IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=MoreEnabled}"
                        Resources="{StaticResource TopMenuStyles}"
                        ToolTip="More Options">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE712;" />
                        </MenuItem.Header>
                        <StaticResource ResourceKey="ContextMenuCopyPathItem" />
                        <StaticResource ResourceKey="UpdateModifiedMenu" />
                        <Separator />
                        <StaticResource ResourceKey="PackageActionsItem" />
                    </MenuItem>
                </Menu>
                <Border
                    Grid.Column="1"
                    Background="Transparent"
                    MouseDown="Window_MouseDown" />
            </Grid>
            <StackPanel
                Margin="0,0,7,0"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style
                        x:Key="RightMenuGlyph"
                        BasedOn="{StaticResource DisabledGlyphStyle}"
                        TargetType="ui:FontIcon">
                        <Setter Property="FontSize" Value="18" />
                    </Style>
                </StackPanel.Resources>
                <Menu>
                    <MenuItem
                        x:Name="FileOperationsButton"
                        Click="FileOperationsButton_Click"
                        DataContext="{Binding ElementName=UpperProgressBar, Path=DataContext}"
                        Style="{StaticResource FileOpButtonStyle}">
                        <MenuItem.ToolTip>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="File Operations (" />
                                <TextBlock Text="{Binding Operations.Count}" />
                                <TextBlock Text=")" />
                            </StackPanel>
                        </MenuItem.ToolTip>
                        <MenuItem.Header>
                            <Grid>
                                <ui:FontIcon Glyph="&#xF16A;" Style="{StaticResource OperationsIconStyle}" />
                                <ui:ProgressRing
                                    x:Name="FileOpRing"
                                    IsActive="True"
                                    Style="{StaticResource OperationsProgressRingStyle}" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        x:Name="SettingsButton"
                        helpers:StyleHelper.ContentAnimation="RotateCW"
                        Click="SettingsButton_Click"
                        ToolTip="Settings">
                        <MenuItem.Header>
                            <ui:FontIcon Glyph="&#xE713;" Style="{DynamicResource RightMenuGlyph}" />
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>
            </StackPanel>
            <Grid Grid.Row="1">
                <StackPanel Margin="0,4,0,2">
                    <Separator />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition
                                x:Name="SearchColumn"
                                Width="Auto"
                                MinWidth="100"
                                MaxWidth="{Binding Source={x:Static Member=models:Data.Settings}, Path=MaxSearchBoxWidth}" />
                        </Grid.ColumnDefinitions>
                        <Menu Margin="7,0,0,0">
                            <Menu.Resources>
                                <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon">
                                    <Setter Property="FontSize" Value="14" />
                                </Style>
                            </Menu.Resources>
                            <MenuItem
                                x:Name="HomeButton"
                                helpers:StyleHelper.ContentAnimation="Bounce"
                                Click="HomeButton_Click"
                                IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=HomeEnabled}"
                                ToolTip="Device Drives (Home)">
                                <MenuItem.Header>
                                    <ui:FontIcon FontSize="16" Glyph="&#xE80F;" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem
                                x:Name="BackButton"
                                helpers:StyleHelper.ContentAnimation="LeftMarquee"
                                Click="BackButton_Click"
                                IsEnabled="False"
                                ToolTip="Back (Backspace)">
                                <MenuItem.Header>
                                    <ui:FontIcon Glyph="&#xE72B;" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem
                                x:Name="ForwardButton"
                                helpers:StyleHelper.ContentAnimation="RightMarquee"
                                Click="ForwardButton_Click"
                                IsEnabled="False"
                                ToolTip="Forward">
                                <MenuItem.Header>
                                    <ui:FontIcon Glyph="&#xE72A;" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem
                                x:Name="ParentButton"
                                helpers:StyleHelper.ContentAnimation="Bounce"
                                Click="ParentButton_Click"
                                IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=ParentEnabled}"
                                ToolTip="Up">
                                <MenuItem.Header>
                                    <ui:FontIcon Glyph="&#xE197;" />
                                </MenuItem.Header>
                            </MenuItem>
                        </Menu>

                        <Grid
                            Grid.Column="1"
                            MinWidth="150"
                            Margin="6,6,0,6">
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </Grid.Resources>
                            <TextBox
                                x:Name="PathBox"
                                VerticalAlignment="Center"
                                d:Background="LightGray"
                                helpers:TextHelper.AltText=""
                                GotFocus="PathBox_GotFocus"
                                IsEnabled="False"
                                IsReadOnly="True"
                                KeyDown="PathBox_KeyDown"
                                LostFocus="PathBox_LostFocus"
                                Style="{StaticResource TextBoxFluentStyle}" />
                            <ui:ProgressBar
                                x:Name="DirectoryLoadingProgressBar"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                Foreground="#780078D7"
                                IsHitTestVisible="False"
                                Style="{StaticResource DirectoryLoadingProgressStyle}"
                                Visibility="Collapsed" />
                            <Menu
                                x:Name="PathMenu"
                                Height="24"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                                <Menu.Resources>
                                    <Style BasedOn="{StaticResource PathButtonStyle}" TargetType="MenuItem">
                                        <Setter Property="ContextMenu" Value="{StaticResource PathButtonsMenu}" />
                                    </Style>
                                </Menu.Resources>
                            </Menu>
                        </Grid>
                        <GridSplitter
                            Grid.Column="2"
                            Width="6"
                            Margin="0,6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Background="Transparent"
                            Cursor="SizeWE"
                            FocusVisualStyle="{x:Null}" />
                        <Grid
                            Grid.Column="3"
                            Margin="0,6,6,6"
                            ClipToBounds="True">
                            <TextBox
                                x:Name="SearchBox"
                                Padding="36,5,6,6"
                                d:Background="LightGray"
                                ui:ControlHelper.PlaceholderText="Filter"
                                IsEnabled="{Binding Source={x:Static Member=models:Data.FileActions}, Path=HomeEnabled}"
                                KeyDown="SearchBox_KeyDown"
                                Style="{StaticResource TextBoxFluentStyle}"
                                TextChanged="SearchBox_TextChanged" />
                            <Border
                                Margin="0,1,0,1"
                                HorizontalAlignment="Left"
                                Style="{StaticResource SearchIndicatorBorderStyle}">
                                <ui:FontIcon
                                    Margin="6,0"
                                    Glyph="&#xE71C;"
                                    Style="{StaticResource SearchIndicatorIconStyle}" />
                            </Border>
                        </Grid>
                    </Grid>
                </StackPanel>
                <ui:ProgressBar
                    x:Name="UpperProgressBar"
                    VerticalAlignment="Bottom"
                    CornerRadius="0"
                    LargeChange="0.001"
                    Maximum="1"
                    SmallChange="0.0001"
                    Style="{StaticResource UpperProgressBarStyle}"
                    Value="{Binding Progress, Mode=OneWay}" />
            </Grid>
            <Border
                x:Name="GridBackgroundBlock"
                Grid.Row="2"
                MouseDown="GridBackgroundBlock_MouseDown"
                Style="{StaticResource ExplorerViewBackgroundStyle}">
                <Grid>
                    <ScrollViewer Visibility="{Binding ElementName=DrivesItemRepeater, Path=Visibility}">
                        <ui:ItemsRepeater
                            x:Name="DrivesItemRepeater"
                            Margin="10,10,10,0"
                            ItemTemplate="{StaticResource DriveItemTemplate}"
                            ItemsSource="{Binding}">
                            <ui:ItemsRepeater.Layout>
                                <ui:UniformGridLayout
                                    MinColumnSpacing="10"
                                    MinItemHeight="60"
                                    MinItemWidth="280"
                                    MinRowSpacing="10" />
                            </ui:ItemsRepeater.Layout>
                        </ui:ItemsRepeater>
                    </ScrollViewer>
                    <DataGrid
                        x:Name="ExplorerGrid"
                        helpers:SelectionHelper.CurrentSelectedIndex="-1"
                        helpers:SelectionHelper.FirstSelectedIndex="-1"
                        helpers:SelectionHelper.SelectionInProgress="False"
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserResizeRows="False"
                        CellStyle="{StaticResource DataGridCellStyle}"
                        ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                        ContextMenu="{StaticResource RowContextMenu}"
                        ContextMenuClosing="ExplorerGrid_ContextMenuClosing"
                        ContextMenuOpening="ExplorerGrid_ContextMenuOpening"
                        GridLinesVisibility="None"
                        HeadersVisibility="Column"
                        IsReadOnly="False"
                        ItemsSource="{Binding Source={StaticResource FileListView}, NotifyOnSourceUpdated=True}"
                        KeyboardNavigation.TabNavigation="Once"
                        MinRowHeight="21"
                        MouseDown="ExplorerGrid_MouseDown"
                        PreviewKeyDown="ExplorerGrid_PreviewKeyDown"
                        RowStyle="{StaticResource RowStyle}"
                        SelectedItem="{Binding SelectedRow, Mode=TwoWay}"
                        SelectionChanged="ExplorerGrid_SelectionChanged"
                        SelectionMode="Extended"
                        SelectionUnit="FullRow"
                        Sorting="ExplorerGrid_Sorting"
                        Style="{StaticResource ExplorerGridStyle}"
                        Visibility="Collapsed">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn
                                x:Name="IconColumn"
                                MaxWidth="24"
                                CanUserResize="False"
                                CellTemplate="{StaticResource FileIconTemplate}"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style BasedOn="{StaticResource DataGridColumnHeaderStyle}" TargetType="DataGridColumnHeader">
                                        <Setter Property="ToolTip" Value="Icon" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn
                                x:Name="NameColumn"
                                Width="300"
                                Header="Name"
                                IsReadOnly="{Binding Source={x:Static Member=models:Data.FileActions}, Path=NameReadOnly}"
                                SortMemberPath="FullName">
                                <DataGridTextColumn.CellStyle>
                                    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="DataGridCell">
                                        <EventSetter Event="MouseEnter" Handler="NameColumnCell_MouseEnter" />
                                        <EventSetter Event="MouseLeave" Handler="NameColumnCell_MouseLeave" />
                                        <EventSetter Event="PreviewMouseDown" Handler="NameColumnCell_PreviewMouseDown" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style BasedOn="{StaticResource TextBoxFluentStyle}" TargetType="TextBox">
                                        <EventSetter Event="Loaded" Handler="NameColumnEdit_Loaded" />
                                        <EventSetter Event="LostFocus" Handler="NameColumnEdit_LostFocus" />
                                        <EventSetter Event="KeyDown" Handler="NameColumnEdit_KeyDown" />
                                        <EventSetter Event="TextChanged" Handler="NameColumnEdit_TextChanged" />
                                        <Setter Property="Text" Value="{Binding FullName, Mode=OneWay}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtensions}" Value="False">
                                                <Setter Property="Text" Value="{Binding NoExtName, Mode=OneWay}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExplorerGridCellStyle}" TargetType="TextBlock">
                                        <Setter Property="Text" Value="{Binding FullName, Mode=OneWay}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtensions}" Value="False">
                                                <Setter Property="Text" Value="{Binding NoExtName, Mode=OneWay}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                x:Name="OriginalPath"
                                Width="180"
                                Binding="{Binding TrashIndex.ParentPath}"
                                ElementStyle="{StaticResource ExplorerGridCellStyle}"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Original Location"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                x:Name="DateColumn"
                                Width="Auto"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Date Modified"
                                IsReadOnly="True"
                                SortMemberPath="ModifiedTime">
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExplorerGridCellStyle}" TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Text" Value="{Binding ModifiedTimeString}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="File">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Folder">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                x:Name="TypeColumn"
                                Width="150"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Type"
                                IsReadOnly="True"
                                SortMemberPath="TypeName">
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExplorerGridCellStyle}" TargetType="TextBlock">
                                        <Setter Property="Text" Value="{Binding TypeName}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ExtensionIsGlyph}" Value="True">
                                                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                x:Name="SizeColumn"
                                Width="Auto"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Size"
                                IsReadOnly="True"
                                SortMemberPath="Size">
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExplorerGridCellStyle}" TargetType="TextBlock">
                                        <Setter Property="Text" Value="{Binding SizeString}" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="File">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                x:Name="OriginalDate"
                                Width="Auto"
                                Binding="{Binding TrashIndex.ModifiedTimeString}"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Date Modified"
                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExplorerGridCellStyle}" TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Text" Value="{Binding ModifiedTimeString}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="File">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Folder">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                x:Name="PackageName"
                                Width="400"
                                Binding="{Binding Name}"
                                ElementStyle="{StaticResource ExplorerGridCellStyle}"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Name"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                x:Name="PackageType"
                                Width="100"
                                Binding="{Binding Type}"
                                ElementStyle="{StaticResource ExplorerGridCellStyle}"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Type"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                x:Name="PackageUid"
                                Width="100"
                                Binding="{Binding Uid}"
                                ElementStyle="{StaticResource ExplorerGridCellStyle}"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="User ID"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                x:Name="PackageVersion"
                                Width="100"
                                Binding="{Binding Version}"
                                ElementStyle="{StaticResource ExplorerGridCellStyle}"
                                FontSize="{Binding Source={StaticResource FontSize}}"
                                Header="Version"
                                IsReadOnly="True" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="FileReaderGrid" Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition
                                Width="0.3*"
                                MinWidth="80"
                                MaxWidth="{Binding Source={x:Static Member=models:Data.Settings}, Path=MaxSearchBoxWidth}" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            x:Name="FileReaderTextbox"
                            Grid.Column="2"
                            AcceptsReturn="True"
                            FontFamily="{StaticResource ConsoleFont}"
                            Style="{StaticResource TextBoxFluentStyle}"
                            TextChanged="FileReaderTextbox_TextChanged"
                            TextWrapping="Wrap" />
                        <Border
                            Grid.Column="2"
                            BorderBrush="#FCCB58"
                            BorderThickness="0,0,0,2"
                            Style="{StaticResource BorderStyle}"
                            Visibility="{Binding ElementName=SaveReaderTextButton, Path=Visibility}" />
                        <Button
                            x:Name="SaveReaderTextButton"
                            Grid.Column="2"
                            Margin="6"
                            Padding="4"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Click="SaveReaderTextButton_Click"
                            Opacity="0.8"
                            Style="{StaticResource AccentButtonStyle}"
                            ToolTip="Save Changes"
                            Visibility="Collapsed">
                            <ui:FontIcon Glyph="&#xE74E;" Style="{StaticResource GlyphFont}" />
                        </Button>
                        <GridSplitter
                            Grid.Column="1"
                            Width="6"
                            Margin="0,0,-2,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Background="Transparent"
                            Cursor="SizeWE"
                            FocusVisualStyle="{x:Null}" />
                    </Grid>
                    <TextBox
                        x:Name="LogTextBox"
                        FontFamily="{StaticResource ConsoleFont}"
                        FontSize="18"
                        Foreground="White"
                        IsReadOnly="True"
                        TextWrapping="Wrap">
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource TextBoxFluentStyle}" TargetType="TextBox">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=CommandLogButton, Path=IsChecked}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <ui:SimpleStackPanel
                        Margin="6"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Spacing="4"
                        Visibility="{Binding ElementName=LogTextBox, Path=Visibility}">
                        <ToggleButton x:Name="PauseAutoScrollButton">
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource ToggleButtonStyle}" TargetType="ToggleButton">
                                    <Setter Property="ToolTip" Value="Pause Log Updates" />
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="ToolTip" Value="Log Updates Are Paused" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                            <ui:FontIcon Glyph="&#xE769;" Style="{StaticResource GlyphFont}" />
                        </ToggleButton>
                        <Button Click="ClearLogButton_Click" ToolTip="Clear Command Log">
                            <Button.Style>
                                <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=LogTextBox, Path=Text.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <ui:FontIcon
                                Margin="1,1,-1,-1"
                                Glyph="&#xE894;"
                                Style="{StaticResource GlyphFont}" />
                        </Button>
                    </ui:SimpleStackPanel>
                    <Grid Margin="0,40" DataContext="{Binding ElementName=DeleteMenuButton, Path=DataContext}">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=ExplorerGrid, Path=Items.Count}" Value="0" />
                                            <Condition Binding="{Binding ElementName=ExplorerGrid, Path=Visibility}" Value="Visible" />
                                            <Condition Binding="{Binding ElementName=PathBox, Path=IsEnabled}" Value="True" />
                                            <Condition Binding="{Binding Source={x:Static models:Data.FileActions}, Path=ListingInProgress}" Value="False" />
                                            <Condition Binding="{Binding ElementName=LogTextBox, Path=Visibility}" Value="Collapsed" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsAppDrive}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Root}" Value="Enabled">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsAppDrive}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="This folder " />
                                    <TextBlock FontStyle="Italic" Text="looks" />
                                    <TextBlock Text=" empty" />
                                </StackPanel>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    FontSize="10"
                                    Text="... to the naked eye" />
                            </StackPanel>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Text="This folder is empty.">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Root}" Value="Enabled">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            Text="Unable to get list.">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.FileActions}, Path=IsAppDrive}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </Grid>
            </Border>
            <Expander
                Grid.Row="4"
                Margin="0,0,0,-3"
                helpers:ExpanderHelper.ExpanderArrow="None"
                helpers:ExpanderHelper.IsHeaderVisible="False"
                ExpandDirection="Up">
                <Expander.Style>
                    <Style BasedOn="{StaticResource FluentExpanderStyle}" TargetType="Expander">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtendedView}" Value="True" />
                                    <Condition Binding="{Binding ElementName=FileOperationsButton, Path=(helpers:RemoteToggle.IsTargetVisible)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsExpanded" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                        <Setter Property="IsExpanded" Value="False" />
                    </Style>
                </Expander.Style>
                <Expander.Content>
                    <Grid x:Name="FileOpDetailedGrid" IsVisibleChanged="FileOpDetailedGrid_IsVisibleChanged">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <GridSplitter
                            x:Name="FileOpDetailedSplitter"
                            Height="3"
                            Margin="0,-2,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            BorderBrush="Gray"
                            DragDelta="GridSplitter_DragDelta"
                            FocusVisualStyle="{x:Null}" />
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DataGrid
                                x:Name="CurrentOperationDetailedDataGrid"
                                AutoGenerateColumns="False"
                                CanUserDeleteRows="False"
                                CellStyle="{StaticResource DataGridCellStyle}"
                                ColumnDisplayIndexChanged="CurrentOperationDetailedDataGrid_ColumnDisplayIndexChanged"
                                ColumnHeaderStyle="{StaticResource FileOpHeaderResizeStyle}"
                                FocusVisualStyle="{x:Null}"
                                HeadersVisibility="Column"
                                ItemsSource="{Binding ElementName=CurrentOperationDataGrid, Path=ItemsSource}">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn
                                        x:Name="OpTypeColumn"
                                        Width="30"
                                        CanUserResize="False"
                                        CellTemplate="{StaticResource OperationIconTemplate}">
                                        <DataGridTemplateColumn.HeaderStyle>
                                            <Style BasedOn="{StaticResource FileOpHeaderResizeStyle}" TargetType="DataGridColumnHeader">
                                                <Setter Property="ToolTip" Value="Operation" />
                                            </Style>
                                        </DataGridTemplateColumn.HeaderStyle>
                                        <DataGridTemplateColumn.Header>
                                            <ui:FontIcon
                                                Margin="-7,0"
                                                Glyph="&#xE8AF;"
                                                Style="{StaticResource GlyphFont}" />
                                        </DataGridTemplateColumn.Header>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        x:Name="FileNameColumn"
                                        Width="250"
                                        CellTemplate="{StaticResource FileOpFileNameTemplate}"
                                        Header="File Name" />
                                    <DataGridTemplateColumn
                                        x:Name="ProgressColumn"
                                        MinWidth="180"
                                        CellTemplate="{StaticResource FileOpProgressTemplate}"
                                        Header="Progress" />
                                    <DataGridTemplateColumn
                                        x:Name="SourceColumn"
                                        Width="200"
                                        CellTemplate="{StaticResource FileOpSourcePathTemplate}"
                                        Header="Source" />
                                    <DataGridTemplateColumn
                                        x:Name="DestColumn"
                                        Width="200"
                                        CellTemplate="{StaticResource FileOpTargetPathTemplate}"
                                        Header="Destination" />
                                </DataGrid.Columns>
                            </DataGrid>
                            <Border
                                Grid.Column="1"
                                BorderBrush="Gray"
                                BorderThickness="1,0,0,0" />
                            <WrapPanel
                                Grid.Column="1"
                                Margin="1,0,0,0"
                                FlowDirection="RightToLeft"
                                Orientation="Vertical">
                                <WrapPanel.Resources>
                                    <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon" />
                                </WrapPanel.Resources>
                                <StaticResource ResourceKey="FileOpStopMenu" />
                                <StaticResource ResourceKey="FileOpRemoveMenu" />
                                <StaticResource ResourceKey="FileOpDefaultFolderMenu" />
                            </WrapPanel>
                        </Grid>
                    </Grid>
                </Expander.Content>
            </Expander>
            <Grid Grid.Row="3">
                <Grid.Resources>
                    <Style BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" TargetType="Separator">
                        <Setter Property="Margin" Value="8,6" />
                    </Style>
                    <Style x:Key="MarginedTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Margin" Value="0,4" />
                    </Style>
                    <Style BasedOn="{StaticResource MarginedTextBlockStyle}" TargetType="TextBlock" />
                </Grid.Resources>
                <StackPanel Margin="8,0" Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal" Style="{StaticResource ItemsCountStackPanelStyle}">
                        <TextBlock x:Name="ItemsCountBlock" Style="{StaticResource ItemsCountStyle}" />
                        <TextBlock Text=" item" />
                        <TextBlock Text="s">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource MarginedTextBlockStyle}" TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ItemsCountBlock, Path=Text}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock x:Name="UnfinishedBlock" Text=" *">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource MarginedTextBlockStyle}" TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="Cursor" Value="Arrow" />
                                    <Style.Triggers>
                                        <Trigger Property="Visibility" Value="Visible">
                                            <Setter Property="Cursor" Value="AppStarting" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Separator />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=SelectedItemsBlock, Path=Text}" Value="0">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock x:Name="SelectedItemsBlock" Style="{StaticResource SelectedItemsStyle}" />
                        <TextBlock Text=" item" />
                        <TextBlock Text="s">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource MarginedTextBlockStyle}" TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=SelectedItemsBlock, Path=Text}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text=" selected" />
                        <TextBlock
                            x:Name="TotalSizeBlock"
                            Margin="6,4,0,4"
                            Style="{StaticResource TotalSizeStyle}"
                            Text="{Binding ElementName=MainWin, Path=SelectedFilesTotalSize}" />
                        <Separator />
                    </StackPanel>
                </StackPanel>
                <StackPanel
                    Margin="6,0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <ui:SimpleStackPanel
                        x:Name="CurrentDeviceDetailsPanel"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="6">
                        <StackPanel Orientation="Horizontal" Style="{StaticResource DeviceDetailsBatteryPercentStyle}">
                            <TextBlock Text="{Binding Device.Battery.Level}" />
                            <TextBlock Text="%" />
                        </StackPanel>
                        <ui:FontIcon
                            x:Name="CurrentDeviceBatteryIcon"
                            Style="{StaticResource DeviceDetailsBatteryStyle}"
                            ToolTipService.InitialShowDelay="0"
                            ToolTipService.Placement="Top"
                            ToolTipService.ShowDuration="60000" />
                        <Separator Margin="2,6">
                            <Separator.Style>
                                <Style BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" TargetType="Separator">
                                    <Setter Property="Margin" Value="8,6" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=CurrentDeviceBatteryIcon, Path=Visibility}" Value="Collapsed">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=AndroidTextBlock, Path=Visibility}" Value="Collapsed">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Separator.Style>
                        </Separator>
                        <ui:FontIcon
                            x:Name="UnsupportedAndroidIcon"
                            Glyph="&#xE7BA;"
                            Style="{DynamicResource UnsupportedIconStyle}"
                            ToolTip="Limited Support" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                x:Name="AndroidTextBlock"
                                Style="{StaticResource AndroidTextBlockStyle}"
                                Text="Android " />
                            <TextBlock x:Name="AndroidVersionBlock" Text="{Binding AndroidVersion}" />
                            <TextBlock Text=" (Recovery)">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Margin" Value="0,4" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Device.Type}" Value="Sideload">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </ui:SimpleStackPanel>
                    <ToggleButton
                        x:Name="CommandLogButton"
                        Margin="6,0,-3,0"
                        Padding="0"
                        ToolTip="Command Log">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource ToggleButtonStyle}" TargetType="ToggleButton">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=EnableLog}" Value="False">
                                        <Setter Property="IsChecked" Value="False" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <ui:FontIcon Glyph="&#xE756;" Style="{StaticResource GlyphFont}" />
                    </ToggleButton>
                </StackPanel>
            </Grid>
        </Grid>
        <ui:SplitView
            x:Name="FileOperationsSplitView"
            d:IsHidden="True"
            FocusVisualStyle="{x:Null}"
            OpenPaneLength="300"
            PaneClosing="FileOperationsSplitView_PaneClosing"
            PanePlacement="Right">
            <ui:SplitView.Style>
                <Style TargetType="ui:SplitView">
                    <Setter Property="IsPaneOpen" Value="False" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Source={x:Static models:Data.Settings}, Path=ShowExtendedView}" Value="False" />
                                <Condition Binding="{Binding ElementName=FileOperationsButton, Path=(helpers:RemoteToggle.IsTargetVisible)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsPaneOpen" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ui:SplitView.Style>
            <ui:SplitView.Pane>
                <Border
                    BorderBrush="Gray"
                    BorderThickness="1,1,0,0"
                    Style="{StaticResource DevicesListStyle}">
                    <Grid>
                        <Grid Margin="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="52" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="24"
                                Text="File Operations" />
                            <Menu HorizontalAlignment="Right">
                                <MenuItem Click="FileOperationsButton_Click" ToolTip="Hide">
                                    <MenuItem.Header>
                                        <ui:FontIcon Glyph="&#xE761;" Style="{DynamicResource GlyphFont}" />
                                    </MenuItem.Header>
                                </MenuItem>
                            </Menu>
                            <Border
                                Grid.Row="1"
                                Margin="0,0,0,6"
                                BorderBrush="Gray">
                                <WrapPanel FlowDirection="LeftToRight" Orientation="Horizontal">
                                    <WrapPanel.Resources>
                                        <Style BasedOn="{StaticResource DisabledGlyphStyle}" TargetType="ui:FontIcon" />
                                    </WrapPanel.Resources>
                                    <StaticResource ResourceKey="FileOpStopMenu" />
                                    <StaticResource ResourceKey="FileOpRemoveMenu" />
                                    <StaticResource ResourceKey="FileOpDefaultFolderMenu" />
                                </WrapPanel>
                            </Border>
                            <Grid Grid.Row="2">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=CurrentOperationDataGrid, Path=Items.Count}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <DataGrid
                                    x:Name="CurrentOperationDataGrid"
                                    Width="Auto"
                                    MaxWidth="282"
                                    AutoGenerateColumns="False"
                                    CanUserDeleteRows="False"
                                    CellStyle="{StaticResource DataGridCellStyle}"
                                    FocusVisualStyle="{x:Null}"
                                    HeadersVisibility="None"
                                    ItemsSource="{Binding}">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn MinWidth="100" CellTemplate="{StaticResource FileOpProgressTemplate}" />
                                        <DataGridTemplateColumn CellTemplate="{StaticResource OperationIconTemplate}" />
                                        <DataGridTemplateColumn MaxWidth="130" CellTemplate="{StaticResource FileOpFileNameTemplate}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
            </ui:SplitView.Pane>
        </ui:SplitView>
        <ui:SplitView
            x:Name="DevicesSplitView"
            d:IsHidden="True"
            FocusVisualStyle="{x:Null}"
            PaneClosing="DevicesSplitView_PaneClosing"
            PaneOpening="DevicesSplitView_PaneOpening"
            PanePlacement="Left">
            <ui:SplitView.Style>
                <Style BasedOn="{StaticResource SplitViewStyle}" TargetType="ui:SplitView">
                    <Setter Property="OpenPaneLength" Value="236" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=DeviceListScrollViewer, Path=ScrollableHeight}" Value="0">
                            <Setter Property="OpenPaneLength" Value="220" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ui:SplitView.Style>
            <ui:SplitView.Pane>
                <Border
                    BorderBrush="Gray"
                    BorderThickness="0,1,1,0"
                    Style="{StaticResource DevicesListStyle}">
                    <ScrollViewer
                        x:Name="DeviceListScrollViewer"
                        Grid.Row="2"
                        HorizontalScrollBarVisibility="Disabled">
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Margin" Value="6,6,22,6" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=DeviceListScrollViewer, Path=ScrollableHeight}" Value="0">
                                            <Setter Property="Margin" Value="6" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Expander
                                x:Name="PairingExpander"
                                Collapsed="PairingExpander_Expanded"
                                Expanded="PairingExpander_Expanded"
                                Header="Pair / Connect Device"
                                Style="{StaticResource FluentExpanderStyle}">
                                <StackPanel x:Name="NewDevicePanel" Margin="0,0,0,6">
                                    <Grid>
                                        <Grid.Resources>
                                            <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton" />
                                        </Grid.Resources>
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=EnableMdns}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </Grid.Style>
                                        <StackPanel Margin="6,0,0,0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <RadioButton
                                                    x:Name="ManualConnectionRadioButton"
                                                    Checked="ConnectionTypeRadioButton_Checked"
                                                    Content="Manual"
                                                    GroupName="ConnectionType"
                                                    IsChecked="True"
                                                    Unchecked="ConnectionTypeRadioButton_Checked" />
                                                <RadioButton
                                                    Grid.Column="1"
                                                    Margin="0,0,6,0"
                                                    Content="mDNS"
                                                    GroupName="ConnectionType" />
                                            </Grid>
                                            <StackPanel>
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=ManualConnectionRadioButton, Path=IsChecked}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <Separator Margin="4,6,10,6" />
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>
                                                    <RadioButton
                                                        x:Name="QrConnectionRadioButton"
                                                        Checked="ConnectionTypeRadioButton_Checked"
                                                        ToolTip="QR Code"
                                                        Unchecked="ConnectionTypeRadioButton_Checked">
                                                        <ui:FontIcon Glyph="&#xED14;" Style="{StaticResource GlyphFont}" />
                                                    </RadioButton>
                                                    <RadioButton
                                                        x:Name="PasswordConnectionRadioButton"
                                                        Grid.Column="1"
                                                        Checked="ConnectionTypeRadioButton_Checked"
                                                        IsChecked="True"
                                                        ToolTip="6 Digit Code"
                                                        Unchecked="ConnectionTypeRadioButton_Checked">
                                                        <ui:FontIcon
                                                            Margin="0,-4,0,0"
                                                            FontSize="30"
                                                            Glyph="&#xE1E1;"
                                                            Style="{StaticResource GlyphFont}" />
                                                    </RadioButton>
                                                </Grid>
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                    <Grid x:Name="MdnsPairingGrid">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=ManualConnectionRadioButton, Path=IsChecked}" Value="False">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </Grid.Style>
                                        <StackPanel x:Name="QrPairingPanel" Margin="-6,-6,-6,-8">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ElementName=MainWin, Path=MdnsService.State}" Value="Running" />
                                                                <Condition Binding="{Binding ElementName=QrConnectionRadioButton, Path=IsChecked}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </Style>
                                            </StackPanel.Style>
                                            <Border Style="{StaticResource QrBackgroundStyle}">
                                                <Image
                                                    x:Name="PairingQrImage"
                                                    Margin="6"
                                                    RenderOptions.EdgeMode="Aliased" />
                                            </Border>
                                        </StackPanel>
                                        <StackPanel x:Name="MdnsLoadingPanel">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=MainWin, Path=MdnsService.State}" Value="Unchecked">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <ui:FontIcon
                                                    Margin="0,0,8,0"
                                                    Glyph="&#xE946;"
                                                    Style="{StaticResource GlyphFont}" />
                                                <TextBlock
                                                    Grid.Column="1"
                                                    Text="Checking mDNS status please wait"
                                                    TextWrapping="Wrap" />
                                            </Grid>
                                        </StackPanel>
                                        <StackPanel x:Name="MdnsDownPanel">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=MainWin, Path=MdnsService.State}" Value="NotRunning">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <StackPanel Orientation="Horizontal">
                                                <ui:FontIcon
                                                    Margin="0,0,8,0"
                                                    Glyph="&#xE783;"
                                                    Style="{StaticResource GlyphFont}" />
                                                <TextBlock x:Name="MdnsDownBlock" Text="mDNS server is down" />
                                            </StackPanel>
                                            <Button
                                                x:Name="RestartAdbButton"
                                                Margin="0,6,0,0"
                                                HorizontalAlignment="Center"
                                                Click="RestartAdbButton_Click"
                                                Content="Restart ADB"
                                                Style="{StaticResource ButtonStyle}" />
                                        </StackPanel>
                                    </Grid>
                                    <StackPanel x:Name="ManualDeviceConnectPanel">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=ManualConnectionRadioButton, Path=IsChecked}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=ManualPairingPanel, Path=IsEnabled}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <TextBox
                                            x:Name="NewDeviceIpBox"
                                            Margin="0,6,0,12"
                                            ui:ControlHelper.PlaceholderText="IP Address"
                                            KeyDown="NewDeviceIpBox_KeyDown"
                                            Style="{StaticResource NumericTextBoxStyle}"
                                            TextChanged="NewDeviceIpBox_TextChanged" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBox
                                                x:Name="NewDevicePortBox"
                                                VerticalContentAlignment="Center"
                                                ui:ControlHelper.PlaceholderText="Port"
                                                KeyDown="NewDeviceIpBox_KeyDown"
                                                Style="{StaticResource NumericTextBoxStyle}"
                                                TextChanged="NewDevicePortBox_TextChanged" />
                                            <Button
                                                x:Name="ConnectNewDeviceButton"
                                                Grid.Column="1"
                                                Margin="8,0,0,0"
                                                VerticalAlignment="Stretch"
                                                Click="ConnectNewDeviceButton_Click"
                                                Content="Connect"
                                                IsEnabled="False"
                                                Style="{StaticResource ButtonStyle}" />
                                        </Grid>
                                    </StackPanel>
                                    <StackPanel x:Name="ManualPairingPanel" IsEnabled="False">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <Grid Margin="0,6,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ui:FontIcon
                                                Margin="0,0,8,0"
                                                Glyph="&#xE783;"
                                                Style="{StaticResource GlyphFont}" />
                                            <TextBlock
                                                Grid.Column="1"
                                                Text="Unable to connect. Try pairing"
                                                TextWrapping="Wrap" />
                                            <Button
                                                x:Name="CancelManualPairing"
                                                Grid.Column="2"
                                                Margin="4"
                                                Click="CancelManualPairing_Click"
                                                Style="{StaticResource ButtonStyle}"
                                                ToolTip="Cancel">
                                                <ui:FontIcon
                                                    FontSize="10"
                                                    Glyph="&#xE8BB;"
                                                    Style="{StaticResource DisabledButtonGlyphStyle}" />
                                            </Button>
                                        </Grid>
                                        <Grid Margin="0,8">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBox
                                                x:Name="ManualPairingPortBox"
                                                VerticalContentAlignment="Center"
                                                ui:ControlHelper.PlaceholderText="Pairing Port"
                                                KeyDown="NewDeviceIpBox_KeyDown"
                                                Style="{StaticResource NumericTextBoxStyle}"
                                                TextChanged="ManualPairingPortBox_TextChanged" />
                                            <Button
                                                x:Name="PairNewDeviceButton"
                                                Grid.Column="1"
                                                Margin="8,0,0,0"
                                                HorizontalAlignment="Right"
                                                Click="PairNewDeviceButton_Click"
                                                Content="Pair"
                                                IsEnabled="False"
                                                Style="{StaticResource ButtonStyle}" />
                                        </Grid>
                                        <TextBox
                                            x:Name="ManualPairingCodeBox"
                                            ui:ControlHelper.PlaceholderText="Pairing Code"
                                            Style="{StaticResource PairingTextBoxStyle}"
                                            TextChanged="PairingCodeBox_TextChanged" />
                                    </StackPanel>
                                </StackPanel>
                            </Expander>
                            <Grid Grid.Row="1" Margin="0,6">
                                <Grid Margin="6,4,0,0" HorizontalAlignment="Left">
                                    <ui:ProgressRing IsActive="True">
                                        <ui:ProgressRing.Style>
                                            <Style BasedOn="{StaticResource FluentProgressRingStyle}" TargetType="ui:ProgressRing">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=PollDevices}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ui:ProgressRing.Style>
                                    </ui:ProgressRing>
                                    <Button Click="RefreshDevicesButton_Click" ToolTip="Refresh Devices">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=PollDevices}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <ui:FontIcon
                                            FontSize="15"
                                            Glyph="&#xE72C;"
                                            Style="{StaticResource GlyphFont}" />
                                    </Button>
                                </Grid>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    FontSize="24"
                                    Text="Devices" />
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border
                                    x:Name="ServerUnresponsiveNotice"
                                    Padding="4"
                                    Style="{StaticResource UnresponsiveServerBorderStyle}"
                                    Visibility="Collapsed">
                                    <StackPanel Margin="2,0">
                                        <ui:SimpleStackPanel Orientation="Horizontal" Spacing="8">
                                            <ui:FontIcon
                                                FontSize="24"
                                                Glyph="&#xEBE8;"
                                                Style="{StaticResource GlyphFont}" />
                                            <StackPanel>
                                                <TextBlock Text="ADB Server Unresponsive" />
                                                <StackPanel
                                                    Margin="0,4"
                                                    Orientation="Horizontal"
                                                    ToolTip="Time from last server response">
                                                    <ui:FontIcon
                                                        Margin="0,0,4,0"
                                                        Glyph="&#xE823;"
                                                        Style="{StaticResource GlyphFont}" />
                                                    <TextBlock Text="{Binding ElementName=MainWin, Path=TimeFromLastResponse}" />
                                                    <TextBlock Text="s" />
                                                </StackPanel>
                                            </StackPanel>
                                        </ui:SimpleStackPanel>
                                        <ui:SimpleStackPanel
                                            Margin="0,4"
                                            HorizontalAlignment="Center"
                                            Orientation="Horizontal"
                                            Spacing="10">
                                            <Button Content="Kill Server" Style="{StaticResource AccentButtonStyle}">
                                                <Button.ToolTip>
                                                    <TextBlock FontFamily="{StaticResource ConsoleFont}" Text="adb kill-server" />
                                                </Button.ToolTip>
                                            </Button>
                                            <Button Content="Kill Process" Style="{StaticResource AccentButtonStyle}">
                                                <Button.ToolTip>
                                                    <TextBlock FontFamily="{StaticResource ConsoleFont}" Text="taskkill /f /im &quot;adb.exe&quot;" />
                                                </Button.ToolTip>
                                            </Button>
                                        </ui:SimpleStackPanel>
                                    </StackPanel>
                                </Border>
                                <Grid
                                    x:Name="DebuggingResetPrompt"
                                    Grid.Row="1"
                                    Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ui:FontIcon
                                        Margin="0,0,6,0"
                                        VerticalAlignment="Center"
                                        Glyph="&#xE946;"
                                        Style="{StaticResource GlyphFont}" />
                                    <TextBlock
                                        Grid.Column="1"
                                        Text="Switching wireless debugging off and then on may shorten connection time"
                                        TextWrapping="Wrap" />
                                </Grid>
                                <ui:ItemsRepeater
                                    x:Name="DevicesList"
                                    Grid.Row="2"
                                    DataContext="{Binding ElementName=MainWin, Path=DevicesObject}"
                                    ItemTemplate="{StaticResource DeviceDataTemplate}"
                                    ItemsSource="{Binding UIList}" />
                                <Border
                                    Grid.Row="3"
                                    Background="Transparent"
                                    MouseDown="Border_MouseDown" />
                            </Grid>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </ui:SplitView.Pane>
        </ui:SplitView>
        <ui:SplitView
            x:Name="SettingsSplitView"
            d:IsHidden="True"
            FocusVisualStyle="{x:Null}"
            OpenPaneLength="350"
            PanePlacement="Right">
            <ui:SplitView.Resources>
                <Style
                    x:Key="CategorySeparator"
                    BasedOn="{StaticResource SeparatorStyle}"
                    TargetType="Separator">
                    <Setter Property="Width" Value="300" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style>
                <Style BasedOn="{StaticResource CategorySeparator}" TargetType="Separator" />
                <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
                <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
                <Style BasedOn="{StaticResource FluentExpanderStyle}" TargetType="Expander">
                    <Setter Property="helpers:ExpanderHelper.ExpanderArrow" Value="CCW" />
                </Style>
            </ui:SplitView.Resources>
            <ui:SplitView.Pane>
                <Border
                    BorderBrush="Gray"
                    BorderThickness="1,1,0,0"
                    Style="{StaticResource DevicesListStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="52" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Menu Margin="0,0,8,0" HorizontalAlignment="Right">
                            <MenuItem Click="PaneCollapse_Click" ToolTip="Hide">
                                <MenuItem.Header>
                                    <ui:FontIcon
                                        Margin="0,0,0,-2"
                                        Glyph="&#xE761;"
                                        Style="{DynamicResource GlyphFont}" />
                                </MenuItem.Header>
                            </MenuItem>
                        </Menu>
                        <Button
                            Margin="10"
                            Click="ResetSettingsButton_Click"
                            Style="{StaticResource AccentButtonStyle}"
                            ToolTip="Reset App Settings">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource GlyphFont}" TargetType="ui:FontIcon" />
                                </StackPanel.Resources>
                                <ui:FontIcon FontSize="16" Glyph="&#xE713;" />
                                <ui:FontIcon FontSize="16" Glyph="&#xE7A7;" />
                            </StackPanel>
                        </Button>
                        <TextBlock
                            Margin="0,0,0,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="24"
                            Text="Settings" />
                        <Grid
                            x:Name="MissingAdbGrid"
                            Grid.Row="1"
                            Margin="10,0,10,10"
                            Visibility="Collapsed">
                            <Border Style="{StaticResource UnresponsiveServerBorderStyle}">
                                <StackPanel Margin="4,8">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ui:FontIcon
                                            Margin="8,2,8,0"
                                            Glyph="&#xEA39;"
                                            Style="{StaticResource GlyphFont}" />
                                        <TextBlock
                                            x:Name="MissingAdbTextblock"
                                            Grid.Column="1"
                                            FontWeight="Bold"
                                            Text="Could not find ADB in the environment PATH"
                                            TextWrapping="Wrap" />
                                        <TextBlock
                                            x:Name="AdbVersionTooLowTextblock"
                                            Grid.Column="1"
                                            FontWeight="Bold"
                                            Text="ADB version too low"
                                            TextWrapping="Wrap"
                                            Visibility="Collapsed" />
                                    </Grid>
                                    <ui:HyperlinkButton
                                        Margin="8,0"
                                        Content="Learn More About ADB"
                                        NavigateUri="https://developer.android.com/studio/command-line/adb"
                                        ToolTip="https://developer.android.com/studio/command-line/adb" />
                                </StackPanel>
                            </Border>
                        </Grid>
                        <Grid Grid.Row="2" Margin="18,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid Margin="6,0,24,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ToggleButton
                                    x:Name="SettingsToggle"
                                    Margin="0,0,6,0"
                                    Style="{StaticResource SortedSettingsButtonStyle}" />
                                <ToggleButton Grid.Column="1" Style="{StaticResource ExpandGroupsButtonStyle}" />
                                <Grid Grid.Column="1">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=SortedView}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <TextBox
                                        x:Name="SettingsSearchBox"
                                        Height="31"
                                        MinHeight="31"
                                        Padding="30,5,6,6"
                                        ui:ControlHelper.PlaceholderText="Search Settings"
                                        Text="{Binding Source={x:Static Member=models:Data.Settings}, Path=SearchText, Mode=TwoWay}"
                                        TextChanged="SettingsSearchBox_TextChanged" />
                                    <ui:FontIcon
                                        Margin="6,0,0,0"
                                        HorizontalAlignment="Left"
                                        Glyph="&#xE721;"
                                        IsHitTestVisible="False"
                                        Opacity="0.7"
                                        Style="{StaticResource GlyphFont}" />
                                </Grid>
                                <Separator
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Margin="0,8,0,4"
                                    Style="{x:Null}" />
                            </Grid>
                            <ScrollViewer Grid.Row="1" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                                <ui:SimpleStackPanel
                                    Margin="6,0,24,10"
                                    HorizontalAlignment="Left"
                                    Spacing="6">
                                    <ListView
                                        x:Name="SettingsList"
                                        Margin="0,0,0,-3"
                                        Style="{StaticResource GroupSettingsListView}" />
                                    <ListView
                                        x:Name="SortedSettings"
                                        Margin="0,2,0,-3"
                                        Style="{StaticResource SortedSettingsListView}" />
                                    <Separator />
                                    <Expander x:Name="SettingsAboutExpander" Header="About">
                                        <Expander.Style>
                                            <Style BasedOn="{StaticResource FluentExpanderStyle}" TargetType="Expander">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={x:Static Member=models:Data.Settings}, Path=SortedView}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Expander.Style>
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock FontSize="18" Text="ADB Explorer" />
                                                <TextBlock
                                                    Margin="10,0,0,1"
                                                    VerticalAlignment="Bottom"
                                                    Text="v" />
                                                <TextBlock
                                                    Margin="2,0,0,1"
                                                    VerticalAlignment="Bottom"
                                                    Text="{x:Static app_prop:Resources.AppVersion}" />
                                            </StackPanel>
                                            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="20">
                                                <ui:HyperlinkButton
                                                    Content="GitHub repository"
                                                    NavigateUri="https://github.com/Alex4SSB/ADB-Explorer"
                                                    ToolTip="https://github.com/Alex4SSB/ADB-Explorer" />
                                                <ui:HyperlinkButton
                                                    Content="Privacy Policy"
                                                    NavigateUri="https://github.com/Alex4SSB/ADB-Explorer/blob/master/Privacy.md"
                                                    ToolTip="https://github.com/Alex4SSB/ADB-Explorer/blob/master/Privacy.md" />
                                            </ui:SimpleStackPanel>
                                            <CheckBox
                                                Content="Check For Updates"
                                                IsChecked="{Binding Source={x:Static models:Data.Settings}, Path=CheckForUpdates}"
                                                ToolTip="Checks for updates each time the app is launched">
                                                <CheckBox.Style>
                                                    <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
                                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Source={x:Static models:Data.Settings}, Path=CheckForUpdates}" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>
                                            </CheckBox>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <ui:FontIcon Glyph="&#xE946;" />
                                                <TextBlock
                                                    Grid.Column="1"
                                                    Margin="6,0,0,0"
                                                    Text="Launch app while holding L-Ctrl to open app settings location."
                                                    TextWrapping="Wrap" />
                                            </Grid>
                                            <TextBlock
                                                Margin="0,16,0,0"
                                                FontWeight="Bold"
                                                Text="Attributions &amp; Third Party Licenses:" />
                                            <ui:HyperlinkButton
                                                Content="ModernWPF"
                                                NavigateUri="https://github.com/Kinnara/ModernWpf"
                                                ToolTip="https://github.com/Kinnara/ModernWpf" />
                                            <ui:HyperlinkButton
                                                Content="Icons8"
                                                NavigateUri="https://icons8.com"
                                                ToolTip="https://icons8.com" />
                                            <ui:HyperlinkButton
                                                Click="AndroidRobotLicense_Click"
                                                Content="The Android Robot Icon(s)"
                                                ToolTip="See terms" />
                                        </StackPanel>
                                    </Expander>
                                </ui:SimpleStackPanel>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </Border>
            </ui:SplitView.Pane>
        </ui:SplitView>
        <Border
            x:Name="SplashScreen"
            Margin="0,-50,0,0"
            d:Visibility="Collapsed"
            Background="#FF80C9E4">
            <Grid>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Width="150">
                        <Image.Source>
                            <BitmapImage DecodePixelWidth="256" UriSource="adb_explorer_icon_v4_icons8_inverted.png" />
                        </Image.Source>
                    </Image>
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="40"
                        Foreground="Black"
                        Text="ADB Explorer" />
                </StackPanel>
                <TextBlock
                    Margin="6,4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    FontFamily="{StaticResource ConsoleFont}"
                    FontSize="14"
                    Foreground="Black"
                    Text="{x:Static app_prop:Resources.AppVersion}" />
            </Grid>
        </Border>
    </Grid>
</Window>
